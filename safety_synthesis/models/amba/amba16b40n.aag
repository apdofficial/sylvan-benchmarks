aag 1653 60 106 1 1487
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106
108
110
112
114
116
118
120
122 1
124 72
126 2365
128 18
130 104
132 102
134 68
136 20
138 2379
140 108
142 98
144 64
146 2393
148 2439
150 22
152 2453
154 94
156 58
158 24
160 90
162 2467
164 2481
166 86
168 26
170 2495
172 116
174 28
176 2517
178 30
180 2531
182 2545
184 2567
186 32
188 2651
190 2665
192 2677
194 2699
196 2723
198 2745
200 2765
202 2779
204 10
206 52
208 2803
210 2825
212 2839
214 8
216 2861
218 2965
220 2971
222 2977
224 2983
226 2989
228 2995
230 6
232 3009
234 74
236 3031
238 4
240 70
242 3061
244 3083
246 2
248 66
250 3105
252 120
254 3119
256 60
258 3141
260 118
262 36
264 50
266 34
268 42
270 3163
272 114
274 80
276 48
278 3177
280 3199
282 112
284 46
286 82
288 3213
290 3235
292 110
294 44
296 54
298 84
300 3257
302 401
304 40
306 88
308 3279
310 38
312 3293
314 92
316 78
318 14
320 96
322 3307
324 76
326 12
328 16
330 100
332 106
2066
334 110 15
336 112 17
338 337 335
340 114 19
342 341 338
344 118 21
346 345 342
348 120 23
350 349 346
352 25 2
354 353 350
356 27 4
358 357 354
360 29 6
362 361 358
364 31 8
366 365 362
368 33 10
370 369 366
372 107 50
374 373 370
376 103 48
378 377 374
380 99 46
382 381 378
384 95 44
386 385 382
388 91 40
390 389 386
392 87 38
394 393 390
396 303 122
398 397 122
400 399 394
402 75 71
404 402 67
406 404 61
408 43 14
410 42 15
412 411 409
414 413 406
416 74 71
418 416 67
420 418 61
422 43 16
424 42 17
426 425 423
428 427 420
430 429 415
432 75 70
434 432 67
436 434 61
438 43 18
440 42 19
442 441 439
444 443 436
446 445 430
448 74 70
450 448 67
452 450 61
454 43 20
456 42 21
458 457 455
460 459 452
462 461 446
464 402 66
466 464 61
468 43 22
470 42 23
472 471 469
474 473 466
476 475 462
478 416 66
480 478 61
482 43 24
484 42 25
486 485 483
488 487 480
490 489 476
492 432 66
494 492 61
496 43 26
498 42 27
500 499 497
502 501 494
504 503 490
506 448 66
508 506 61
510 43 28
512 42 29
514 513 511
516 515 508
518 517 504
520 404 60
522 43 30
524 42 31
526 525 523
528 527 520
530 529 518
532 418 60
534 43 32
536 42 33
538 537 535
540 539 532
542 541 530
544 434 60
546 106 43
548 107 42
550 549 547
552 551 544
554 553 542
556 450 60
558 102 43
560 103 42
562 561 559
564 563 556
566 565 554
568 464 60
570 98 43
572 99 42
574 573 571
576 575 568
578 577 566
580 478 60
582 94 43
584 95 42
586 585 583
588 587 580
590 589 578
592 492 60
594 90 43
596 91 42
598 597 595
600 599 592
602 601 590
604 506 60
606 86 43
608 87 42
610 609 607
612 611 604
614 613 602
616 263 122
618 262 122
620 617 122
622 621 117
624 623 614
626 243 122
628 242 122
630 627 122
632 628 117
634 633 624
636 189 122
638 188 122
640 637 122
642 197 122
644 196 122
646 643 122
648 647 641
650 201 122
652 200 122
654 651 122
656 655 648
658 657 117
660 659 634
662 297 122
664 296 122
666 663 122
668 664 406
670 667 407
672 671 669
674 673 618
676 675 660
678 275 122
680 274 122
682 679 122
684 683 420
686 680 421
688 687 685
690 689 618
692 691 676
694 287 122
696 286 122
698 695 122
700 699 436
702 696 437
704 703 701
706 705 618
708 707 692
710 299 122
712 298 122
714 711 122
716 715 452
718 712 453
720 719 717
722 721 618
724 723 708
726 307 122
728 306 122
730 727 122
732 731 466
734 728 467
736 735 733
738 737 618
740 739 724
742 315 122
744 314 122
746 743 122
748 747 480
750 744 481
752 751 749
754 753 618
756 755 740
758 321 122
760 320 122
762 759 122
764 763 494
766 760 495
768 767 765
770 769 618
772 771 756
774 331 122
776 330 122
778 775 122
780 779 508
782 776 509
784 783 781
786 785 618
788 787 772
790 131 122
792 130 122
794 791 122
796 795 520
798 792 521
800 799 797
802 801 618
804 803 788
806 141 122
808 140 122
810 807 122
812 811 532
814 808 533
816 815 813
818 817 618
820 819 804
822 157 122
824 156 122
826 823 122
828 827 544
830 824 545
832 831 829
834 833 618
836 835 820
838 145 122
840 144 122
842 839 122
844 843 556
846 840 557
848 847 845
850 849 618
852 851 836
854 135 122
856 134 122
858 855 122
860 859 568
862 856 569
864 863 861
866 865 618
868 867 852
870 125 122
872 124 122
874 871 122
876 875 580
878 872 581
880 879 877
882 881 618
884 883 868
886 325 122
888 324 122
890 887 122
892 891 592
894 888 593
896 895 893
898 897 618
900 899 884
902 317 122
904 316 122
906 903 122
908 907 604
910 904 605
912 911 909
914 913 618
916 915 900
918 327 122
920 326 122
922 919 122
924 920 53
926 923 52
928 927 925
930 929 618
932 931 916
934 235 122
936 234 122
938 935 122
940 241 122
942 240 122
944 941 122
946 945 939
948 249 122
950 248 122
952 949 122
954 953 946
956 257 122
958 256 122
960 957 122
962 961 954
964 963 406
966 962 407
968 967 965
970 969 116
972 971 932
974 945 936
976 974 953
978 976 961
980 979 420
982 978 421
984 983 981
986 985 116
988 987 972
990 942 939
992 990 953
994 992 961
996 995 436
998 994 437
1000 999 997
1002 1001 116
1004 1003 988
1006 942 936
1008 1006 953
1010 1008 961
1012 1011 452
1014 1010 453
1016 1015 1013
1018 1017 116
1020 1019 1004
1022 950 946
1024 1022 961
1026 1025 466
1028 1024 467
1030 1029 1027
1032 1031 116
1034 1033 1020
1036 974 950
1038 1036 961
1040 1039 480
1042 1038 481
1044 1043 1041
1046 1045 116
1048 1047 1034
1050 990 950
1052 1050 961
1054 1053 494
1056 1052 495
1058 1057 1055
1060 1059 116
1062 1061 1048
1064 1006 950
1066 1064 961
1068 1067 508
1070 1066 509
1072 1071 1069
1074 1073 116
1076 1075 1062
1078 958 954
1080 1079 520
1082 1078 521
1084 1083 1081
1086 1085 116
1088 1087 1076
1090 976 958
1092 1091 532
1094 1090 533
1096 1095 1093
1098 1097 116
1100 1099 1088
1102 992 958
1104 1103 544
1106 1102 545
1108 1107 1105
1110 1109 116
1112 1111 1100
1114 1008 958
1116 1115 556
1118 1114 557
1120 1119 1117
1122 1121 116
1124 1123 1112
1126 1022 958
1128 1127 568
1130 1126 569
1132 1131 1129
1134 1133 116
1136 1135 1124
1138 1036 958
1140 1139 580
1142 1138 581
1144 1143 1141
1146 1145 116
1148 1147 1136
1150 1050 958
1152 1151 592
1154 1150 593
1156 1155 1153
1158 1157 116
1160 1159 1148
1162 1064 958
1164 1163 604
1166 1162 605
1168 1167 1165
1170 1169 116
1172 1171 1160
1174 207 122
1176 206 122
1178 1175 122
1180 1179 52
1182 1176 53
1184 1183 1181
1186 1185 116
1188 1187 1172
1190 267 122
1192 266 122
1194 1191 122
1196 293 122
1198 292 122
1200 1197 122
1202 1198 1195
1204 1202 55
1206 1204 13
1208 1207 1188
1210 1201 1195
1212 1210 55
1214 1212 12
1216 1215 1208
1218 283 122
1220 282 122
1222 1219 122
1224 1220 1195
1226 1224 80
1228 1226 13
1230 1229 1216
1232 1223 1195
1234 1232 80
1236 1234 12
1238 1237 1230
1240 273 122
1242 272 122
1244 1241 122
1246 1242 1195
1248 1246 82
1250 1248 13
1252 1251 1238
1254 1245 1195
1256 1254 82
1258 1256 12
1260 1259 1252
1262 261 122
1264 260 122
1266 1263 122
1268 1264 1195
1270 1268 84
1272 1270 13
1274 1273 1260
1276 1267 1195
1278 1276 84
1280 1278 12
1282 1281 1274
1284 253 122
1286 252 122
1288 1285 122
1290 1286 1195
1292 1290 88
1294 1292 13
1296 1295 1282
1298 1289 1195
1300 1298 88
1302 1300 12
1304 1303 1296
1306 247 122
1308 246 122
1310 1307 122
1312 1308 1195
1314 1312 92
1316 1314 13
1318 1317 1304
1320 1311 1195
1322 1320 92
1324 1322 12
1326 1325 1318
1328 239 122
1330 238 122
1332 1329 122
1334 1330 1195
1336 1334 96
1338 1336 13
1340 1339 1326
1342 1333 1195
1344 1342 96
1346 1344 12
1348 1347 1340
1350 231 122
1352 230 122
1354 1351 122
1356 1352 1195
1358 1356 100
1360 1358 13
1362 1361 1348
1364 1355 1195
1366 1364 100
1368 1366 12
1370 1369 1362
1372 215 122
1374 214 122
1376 1373 122
1378 1374 1195
1380 1378 104
1382 1380 13
1384 1383 1370
1386 1377 1195
1388 1386 104
1390 1388 12
1392 1391 1384
1394 205 122
1396 204 122
1398 1395 122
1400 1396 1195
1402 1400 108
1404 1402 13
1406 1405 1392
1408 1399 1195
1410 1408 108
1412 1410 12
1414 1413 1406
1416 265 122
1418 264 122
1420 1417 122
1422 1418 1195
1424 1422 58
1426 1424 13
1428 1427 1414
1430 1421 1195
1432 1430 58
1434 1432 12
1436 1435 1428
1438 277 122
1440 276 122
1442 1439 122
1444 1440 1195
1446 1444 64
1448 1446 13
1450 1449 1436
1452 1443 1195
1454 1452 64
1456 1454 12
1458 1457 1450
1460 285 122
1462 284 122
1464 1461 122
1466 1462 1195
1468 1466 68
1470 1468 13
1472 1471 1458
1474 1465 1195
1476 1474 68
1478 1476 12
1480 1479 1472
1482 295 122
1484 294 122
1486 1483 122
1488 1484 1195
1490 1488 72
1492 1490 13
1494 1493 1480
1496 1487 1195
1498 1496 72
1500 1498 12
1502 1501 1494
1504 305 122
1506 304 122
1508 1505 122
1510 1506 1195
1512 1510 76
1514 1512 13
1516 1515 1502
1518 1509 1195
1520 1518 76
1522 1520 12
1524 1523 1516
1526 311 122
1528 310 122
1530 1527 122
1532 1528 1195
1534 1532 78
1536 1534 13
1538 1537 1524
1540 1531 1195
1542 1540 78
1544 1542 12
1546 1545 1538
1548 667 54
1550 664 55
1552 1551 1549
1554 1553 1192
1556 1555 1546
1558 680 81
1560 683 80
1562 1561 1559
1564 1563 1192
1566 1565 1556
1568 696 83
1570 699 82
1572 1571 1569
1574 1573 1192
1576 1575 1566
1578 712 85
1580 715 84
1582 1581 1579
1584 1583 1192
1586 1585 1576
1588 728 89
1590 731 88
1592 1591 1589
1594 1593 1192
1596 1595 1586
1598 744 93
1600 747 92
1602 1601 1599
1604 1603 1192
1606 1605 1596
1608 760 97
1610 763 96
1612 1611 1609
1614 1613 1192
1616 1615 1606
1618 776 101
1620 779 100
1622 1621 1619
1624 1623 1192
1626 1625 1616
1628 792 105
1630 795 104
1632 1631 1629
1634 1633 1192
1636 1635 1626
1638 808 109
1640 811 108
1642 1641 1639
1644 1643 1192
1646 1645 1636
1648 824 59
1650 827 58
1652 1651 1649
1654 1653 1192
1656 1655 1646
1658 840 65
1660 843 64
1662 1661 1659
1664 1663 1192
1666 1665 1656
1668 856 69
1670 859 68
1672 1671 1669
1674 1673 1192
1676 1675 1666
1678 872 73
1680 875 72
1682 1681 1679
1684 1683 1192
1686 1685 1676
1688 888 77
1690 891 76
1692 1691 1689
1694 1693 1192
1696 1695 1686
1698 904 79
1700 907 78
1702 1701 1699
1704 1703 1192
1706 1705 1696
1708 920 13
1710 923 12
1712 1711 1709
1714 1713 1192
1716 1715 1706
1718 237 122
1720 236 122
1722 1719 122
1724 80 17
1726 1724 1720
1728 1727 1716
1730 245 122
1732 244 122
1734 1731 122
1736 82 19
1738 1736 1732
1740 1739 1728
1742 251 122
1744 250 122
1746 1743 122
1748 84 21
1750 1748 1744
1752 1751 1740
1754 259 122
1756 258 122
1758 1755 122
1760 88 23
1762 1760 1756
1764 1763 1752
1766 271 122
1768 270 122
1770 1767 122
1772 92 25
1774 1772 1768
1776 1775 1764
1778 281 122
1780 280 122
1782 1779 122
1784 96 27
1786 1784 1780
1788 1787 1776
1790 291 122
1792 290 122
1794 1791 122
1796 100 29
1798 1796 1792
1800 1799 1788
1802 301 122
1804 300 122
1806 1803 122
1808 104 31
1810 1808 1804
1812 1811 1800
1814 309 122
1816 308 122
1818 1815 122
1820 108 33
1822 1820 1816
1824 1823 1812
1826 217 122
1828 216 122
1830 1827 122
1832 107 58
1834 1832 1828
1836 1835 1824
1838 211 122
1840 210 122
1842 1839 122
1844 103 64
1846 1844 1840
1848 1847 1836
1850 199 122
1852 198 122
1854 1851 122
1856 99 68
1858 1856 1852
1860 1859 1848
1862 195 122
1864 194 122
1866 1863 122
1868 95 72
1870 1868 1864
1872 1871 1860
1874 185 122
1876 184 122
1878 1875 122
1880 91 76
1882 1880 1876
1884 1883 1872
1886 177 122
1888 176 122
1890 1887 122
1892 87 78
1894 1892 1888
1896 1895 1884
1898 319 122
1900 1899 122
1902 329 122
1904 1903 122
1906 1905 1901
1908 129 122
1910 1909 122
1912 1911 1906
1914 137 122
1916 1915 122
1918 1917 1912
1920 151 122
1922 1921 122
1924 1923 1918
1926 159 122
1928 1927 122
1930 1929 1924
1932 169 122
1934 1933 122
1936 1935 1930
1938 175 122
1940 1939 122
1942 1941 1936
1944 179 122
1946 1945 122
1948 1947 1942
1950 187 122
1952 1951 122
1954 1953 1948
1956 333 122
1958 1957 122
1960 1959 1954
1962 133 122
1964 1963 122
1966 1965 1960
1968 143 122
1970 1969 122
1972 1971 1966
1974 155 122
1976 1975 122
1978 1977 1972
1980 161 122
1982 1981 122
1984 1983 1978
1986 167 122
1988 1987 122
1990 1989 1984
1992 1990 1195
1994 1992 54
1996 1995 1896
1998 229 122
2000 228 122
2002 1999 122
2004 227 122
2006 226 122
2008 2005 122
2010 225 122
2012 224 122
2014 2011 122
2016 223 122
2018 222 122
2020 2017 122
2022 221 122
2024 220 122
2026 2023 122
2028 219 122
2030 218 122
2032 2029 122
2034 2015 2009
2036 2034 2003
2038 2037 2002
2040 2038 2035
2042 2014 2006
2044 2043 2035
2046 2035 2003
2048 2034 2000
2050 2049 2047
2052 2031 2025
2054 2052 2019
2056 2054 2014
2058 2056 2044
2060 2058 2050
2062 2061 2041
2064 2062 1996
2066 2065 400
2068 279 122
2070 278 122
2072 2069 122
2074 2073 628
2076 255 122
2078 254 122
2080 2077 122
2082 2081 657
2084 2083 2075
2086 233 122
2088 232 122
2090 2087 122
2092 407 14
2094 2092 2091
2096 2095 2084
2098 213 122
2100 212 122
2102 2099 122
2104 421 16
2106 2104 2103
2108 2107 2096
2110 191 122
2112 190 122
2114 2111 122
2116 437 18
2118 2116 2115
2120 2119 2108
2122 181 122
2124 180 122
2126 2123 122
2128 453 20
2130 2128 2127
2132 2131 2120
2134 165 122
2136 164 122
2138 2135 122
2140 467 22
2142 2140 2139
2144 2143 2132
2146 153 122
2148 152 122
2150 2147 122
2152 481 24
2154 2152 2151
2156 2155 2144
2158 127 122
2160 126 122
2162 2159 122
2164 495 26
2166 2164 2163
2168 2167 2156
2170 147 122
2172 146 122
2174 2171 122
2176 509 28
2178 2176 2175
2180 2179 2168
2182 163 122
2184 162 122
2186 2183 122
2188 521 30
2190 2188 2187
2192 2191 2180
2194 171 122
2196 170 122
2198 2195 122
2200 533 32
2202 2200 2199
2204 2203 2192
2206 183 122
2208 182 122
2210 2207 122
2212 545 106
2214 2212 2211
2216 2215 2204
2218 203 122
2220 202 122
2222 2219 122
2224 557 102
2226 2224 2223
2228 2227 2216
2230 139 122
2232 138 122
2234 2231 122
2236 569 98
2238 2236 2235
2240 2239 2228
2242 323 122
2244 322 122
2246 2243 122
2248 581 94
2250 2248 2247
2252 2251 2240
2254 313 122
2256 312 122
2258 2255 122
2260 593 90
2262 2260 2259
2264 2263 2252
2266 289 122
2268 288 122
2270 2267 122
2272 605 86
2274 2272 2271
2276 2275 2264
2278 2073 631
2280 2081 656
2282 2281 2279
2284 2093 2091
2286 2285 2282
2288 2105 2103
2290 2289 2286
2292 2117 2115
2294 2293 2290
2296 2129 2127
2298 2297 2294
2300 2141 2139
2302 2301 2298
2304 2153 2151
2306 2305 2302
2308 2165 2163
2310 2309 2306
2312 2177 2175
2314 2313 2310
2316 2189 2187
2318 2317 2314
2320 2201 2199
2322 2321 2318
2324 2213 2211
2326 2325 2322
2328 2225 2223
2330 2329 2326
2332 2237 2235
2334 2333 2330
2336 2249 2247
2338 2337 2334
2340 2261 2259
2342 2341 2338
2344 2273 2271
2346 2345 2342
2348 2347 2277
2350 2349 2277
2352 2347 2167
2354 2346 2160
2356 2355 2353
2358 2357 2277
2360 2358 2351
2362 2350 2160
2364 2363 2361
2366 2347 2239
2368 2346 2232
2370 2369 2367
2372 2371 2277
2374 2372 2351
2376 2350 2232
2378 2377 2375
2380 2347 2179
2382 2346 2172
2384 2383 2381
2386 2385 2277
2388 2386 2351
2390 2350 2172
2392 2391 2389
2394 193 122
2396 192 122
2398 2395 122
2400 209 122
2402 208 122
2404 2401 122
2406 2402 2399
2408 149 122
2410 148 122
2412 2409 122
2414 2413 37
2416 2415 2407
2418 2346 2277
2420 2418 2416
2422 2421 2350
2424 2418 2417
2426 2425 2422
2428 2417 2415
2430 2428 2346
2432 2430 2277
2434 2432 2427
2436 2426 2410
2438 2437 2435
2440 2347 2155
2442 2346 2148
2444 2443 2441
2446 2445 2277
2448 2446 2351
2450 2350 2148
2452 2451 2449
2454 2347 2191
2456 2346 2184
2458 2457 2455
2460 2459 2277
2462 2460 2351
2464 2350 2184
2466 2465 2463
2468 2347 2143
2470 2346 2136
2472 2471 2469
2474 2473 2277
2476 2474 2351
2478 2350 2136
2480 2479 2477
2482 2347 2203
2484 2346 2196
2486 2485 2483
2488 2487 2277
2490 2488 2351
2492 2350 2196
2494 2493 2491
2496 1891 79
2498 2496 87
2500 1888 86
2502 2500 2499
2504 2503 2499
2506 2501 1888
2508 2506 2499
2510 2509 2499
2512 2511 2505
2514 2504 1888
2516 2515 2513
2518 2347 2131
2520 2346 2124
2522 2521 2519
2524 2523 2277
2526 2524 2351
2528 2350 2124
2530 2529 2527
2532 2347 2215
2534 2346 2208
2536 2535 2533
2538 2537 2277
2540 2538 2351
2542 2350 2208
2544 2543 2541
2546 1879 77
2548 2546 91
2550 1876 90
2552 2550 2549
2554 2553 2549
2556 2551 1876
2558 2556 2549
2560 2559 2549
2562 2561 2555
2564 2554 1876
2566 2565 2563
2568 656 52
2570 2568 117
2572 2570 63
2574 2572 56
2576 2574 37
2578 2574 36
2580 647 638
2582 2580 655
2584 2582 36
2586 644 641
2588 2586 655
2590 2588 36
2592 644 638
2594 2592 655
2596 2594 36
2598 652 648
2600 2598 36
2602 2578 2577
2604 2603 2577
2606 2579 2577
2608 2606 2584
2610 2609 2604
2612 2606 2585
2614 2612 2590
2616 2615 2610
2618 2612 2591
2620 2618 2596
2622 2621 2616
2624 2618 2597
2626 2624 2600
2628 2627 2622
2630 2601 638
2632 2630 2597
2634 2632 2591
2636 2635 2591
2638 2637 2585
2640 2638 2579
2642 2640 2577
2644 2643 2577
2646 2645 2629
2648 2628 638
2650 2649 2647
2652 2347 2119
2654 2346 2112
2656 2655 2653
2658 2657 2277
2660 2658 2351
2662 2350 2112
2664 2663 2661
2666 2417 2407
2668 2666 2346
2670 2668 2277
2672 2670 2427
2674 2426 2396
2676 2675 2673
2678 1867 73
2680 2678 95
2682 1864 94
2684 2682 2681
2686 2685 2681
2688 2683 1864
2690 2688 2681
2692 2691 2681
2694 2693 2687
2696 2686 1864
2698 2697 2695
2700 2601 644
2702 2700 2597
2704 2702 2591
2706 2705 2591
2708 2707 2585
2710 2709 2585
2712 2711 2579
2714 2713 2579
2716 2715 2577
2718 2716 2629
2720 2628 644
2722 2721 2719
2724 1855 69
2726 2724 99
2728 1852 98
2730 2728 2727
2732 2731 2727
2734 2729 1852
2736 2734 2727
2738 2737 2727
2740 2739 2733
2742 2732 1852
2744 2743 2741
2746 2601 652
2748 2746 2597
2750 2749 2597
2752 2751 2591
2754 2752 2585
2756 2754 2579
2758 2756 2577
2760 2758 2629
2762 2628 652
2764 2763 2761
2766 2347 2227
2768 2346 2220
2770 2769 2767
2772 2771 2277
2774 2772 2351
2776 2350 2220
2778 2777 2775
2780 2405 52
2782 2780 63
2784 2782 57
2786 2402 43
2788 2786 2785
2790 2789 2785
2792 2787 2402
2794 2792 2785
2796 2795 2785
2798 2797 2791
2800 2790 2402
2802 2801 2799
2804 1843 65
2806 2804 103
2808 1840 102
2810 2808 2807
2812 2811 2807
2814 2809 1840
2816 2814 2807
2818 2817 2807
2820 2819 2813
2822 2812 1840
2824 2823 2821
2826 2347 2107
2828 2346 2100
2830 2829 2827
2832 2831 2277
2834 2832 2351
2836 2350 2100
2838 2837 2835
2840 1831 59
2842 2840 107
2844 1828 106
2846 2844 2843
2848 2847 2843
2850 2845 1828
2852 2850 2843
2854 2853 2843
2856 2855 2849
2858 2848 1828
2860 2859 2857
2862 2416 2033
2864 2417 2030
2866 2865 2863
2868 2867 2346
2870 2868 2277
2872 2030 2027
2874 2031 2024
2876 2875 2873
2878 2877 2416
2880 2417 2024
2882 2881 2879
2884 2883 2346
2886 2884 2277
2888 2030 2024
2890 2888 2021
2892 2889 2018
2894 2893 2891
2896 2895 2416
2898 2417 2018
2900 2899 2897
2902 2901 2346
2904 2902 2277
2906 2888 2018
2908 2906 2015
2910 2907 2012
2912 2911 2909
2914 2913 2416
2916 2417 2012
2918 2917 2915
2920 2919 2346
2922 2920 2277
2924 2906 2012
2926 2924 2009
2928 2925 2006
2930 2929 2927
2932 2931 2416
2934 2417 2006
2936 2935 2933
2938 2937 2346
2940 2938 2277
2942 2924 2006
2944 2942 2003
2946 2943 2000
2948 2947 2945
2950 2949 2416
2952 2417 2000
2954 2953 2951
2956 2955 2346
2958 2956 2277
2960 2870 2423
2962 2422 2030
2964 2963 2961
2966 2886 2423
2968 2422 2024
2970 2969 2967
2972 2904 2423
2974 2422 2018
2976 2975 2973
2978 2922 2423
2980 2422 2012
2982 2981 2979
2984 2940 2423
2986 2422 2006
2988 2987 2985
2990 2958 2423
2992 2422 2000
2994 2993 2991
2996 2347 2095
2998 2346 2088
3000 2999 2997
3002 3001 2277
3004 3002 2351
3006 2350 2088
3008 3007 3005
3010 1723 81
3012 3010 17
3014 1720 16
3016 3014 3013
3018 3017 3013
3020 3015 1720
3022 3020 3013
3024 3023 3013
3026 3025 3019
3028 3018 1720
3030 3029 3027
3032 117 52
3034 3032 63
3036 3034 57
3038 3036 631
3040 628 43
3042 3041 3039
3044 3037 628
3046 3045 3037
3048 628 42
3050 3047 631
3052 3048 628
3054 3053 3051
3056 3055 3043
3058 3042 628
3060 3059 3057
3062 1735 83
3064 3062 19
3066 1732 18
3068 3066 3065
3070 3069 3065
3072 3067 1732
3074 3072 3065
3076 3075 3065
3078 3077 3071
3080 3070 1732
3082 3081 3079
3084 1747 85
3086 3084 21
3088 1744 20
3090 3088 3087
3092 3091 3087
3094 3089 1744
3096 3094 3087
3098 3097 3087
3100 3099 3093
3102 3092 1744
3104 3103 3101
3106 2347 2083
3108 2346 2078
3110 3109 3107
3112 3111 2277
3114 3112 2351
3116 2350 2078
3118 3117 3115
3120 1759 89
3122 3120 23
3124 1756 22
3126 3124 3123
3128 3127 3123
3130 3125 1756
3132 3130 3123
3134 3133 3123
3136 3135 3129
3138 3128 1756
3140 3139 3137
3142 1771 93
3144 3142 25
3146 1768 24
3148 3146 3145
3150 3149 3145
3152 3147 1768
3154 3152 3145
3156 3155 3145
3158 3157 3151
3160 3150 1768
3162 3161 3159
3164 2347 2075
3166 2346 2070
3168 3167 3165
3170 3169 2277
3172 3170 2351
3174 2350 2070
3176 3175 3173
3178 1783 97
3180 3178 27
3182 1780 26
3184 3182 3181
3186 3185 3181
3188 3183 1780
3190 3188 3181
3192 3191 3181
3194 3193 3187
3196 3186 1780
3198 3197 3195
3200 2347 2275
3202 2346 2268
3204 3203 3201
3206 3205 2277
3208 3206 2351
3210 2350 2268
3212 3211 3209
3214 1795 101
3216 3214 29
3218 1792 28
3220 3218 3217
3222 3221 3217
3224 3219 1792
3226 3224 3217
3228 3227 3217
3230 3229 3223
3232 3222 1792
3234 3233 3231
3236 1807 105
3238 3236 31
3240 1804 30
3242 3240 3239
3244 3243 3239
3246 3241 1804
3248 3246 3239
3250 3249 3239
3252 3251 3245
3254 3244 1804
3256 3255 3253
3258 1819 109
3260 3258 33
3262 1816 32
3264 3262 3261
3266 3265 3261
3268 3263 1816
3270 3268 3261
3272 3271 3261
3274 3273 3267
3276 3266 1816
3278 3277 3275
3280 2347 2263
3282 2346 2256
3284 3283 3281
3286 3285 2277
3288 3286 2351
3290 2350 2256
3292 3291 3289
3294 2347 2251
3296 2346 2244
3298 3297 3295
3300 3299 2277
3302 3300 2351
3304 2350 2244
3306 3305 3303
i0 i_hlock5
i1 i_hlock6
i2 i_hlock7
i3 i_hlock8
i4 i_hlock9
i5 controllable_locked
i6 i_hbusreq0
i7 i_hbusreq1
i8 i_hbusreq2
i9 i_hbusreq3
i10 i_hbusreq4
i11 i_hbusreq5
i12 i_hbusreq6
i13 i_hbusreq7
i14 i_hbusreq8
i15 i_hbusreq9
i16 controllable_ndecide
i17 i_hready
i18 i_hlock15
i19 i_hlock14
i20 controllable_busreq
i21 i_hlock13
i22 i_hlock12
i23 i_hlock11
i24 i_hlock10
i25 controllable_hmastlock
i26 controllable_nhgrant0
i27 i_hburst1
i28 controllable_hgrant10
i29 controllable_hmaster3
i30 i_hburst0
i31 controllable_hgrant11
i32 controllable_hmaster2
i33 controllable_hgrant12
i34 controllable_hmaster1
i35 controllable_hgrant13
i36 controllable_hmaster0
i37 controllable_hgrant14
i38 controllable_hgrant15
i39 controllable_hgrant1
i40 controllable_hgrant2
i41 controllable_hgrant3
i42 i_hbusreq15
i43 controllable_hgrant4
i44 i_hbusreq14
i45 controllable_hgrant5
i46 i_hbusreq13
i47 controllable_hgrant6
i48 i_hbusreq12
i49 controllable_hgrant7
i50 i_hbusreq11
i51 controllable_hgrant8
i52 i_hbusreq10
i53 controllable_hgrant9
i54 i_hlock0
i55 i_hlock1
i56 i_hlock2
i57 controllable_nstart
i58 i_hlock3
i59 i_hlock4
l0 n123
l1 reg_controllable_hgrant13_out
l2 sys_fair8done_out
l3 reg_i_hbusreq2_out
l4 reg_controllable_hgrant8_out
l5 reg_i_hbusreq11_out
l6 reg_controllable_hgrant12_out
l7 reg_i_hbusreq3_out
l8 sys_fair14done_out
l9 reg_controllable_hgrant9_out
l10 reg_i_hbusreq12_out
l11 reg_controllable_hgrant11_out
l12 sys_fair9done_out
l13 env_fair1done_out
l14 reg_i_hbusreq4_out
l15 sys_fair7done_out
l16 reg_i_hbusreq13_out
l17 reg_controllable_hgrant10_out
l18 reg_i_hbusreq5_out
l19 reg_i_hbusreq14_out
l20 sys_fair10done_out
l21 sys_fair6done_out
l22 reg_i_hbusreq15_out
l23 reg_i_hbusreq6_out
l24 sys_fair11done_out
l25 reg_controllable_nstart_out
l26 reg_i_hbusreq7_out
l27 reg_stateG10_15_out
l28 reg_i_hbusreq8_out
l29 sys_fair5done_out
l30 sys_fair12done_out
l31 reg_stateG10_14_out
l32 reg_i_hbusreq9_out
l33 reg_stateG3_0_out
l34 sys_fair4done_out
l35 env_fair0done_out
l36 reg_stateG10_13_out
l37 reg_stateG3_1_out
l38 reg_stateG10_12_out
l39 reg_stateG3_2_out
l40 sys_fair13done_out
l41 reg_i_hlock9_out
l42 reg_controllable_hmastlock_out
l43 reg_stateA1_out
l44 reg_stateG10_11_out
l45 sys_fair3done_out
l46 reg_i_hlock8_out
l47 reg_stateG10_10_out
l48 fair_cnt<0>_out
l49 fair_cnt<1>_out
l50 fair_cnt<2>_out
l51 fair_cnt<3>_out
l52 fair_cnt<4>_out
l53 fair_cnt<5>_out
l54 reg_i_hlock7_out
l55 sys_fair2done_out
l56 reg_controllable_hmaster0_out
l57 reg_stateG10_1_out
l58 reg_i_hlock6_out
l59 reg_controllable_hmaster1_out
l60 reg_stateG2_out
l61 reg_stateG10_2_out
l62 reg_i_hlock5_out
l63 reg_controllable_hmaster2_out
l64 reg_stateG10_3_out
l65 reg_i_hlock4_out
l66 sys_fair1done_out
l67 reg_controllable_hmaster3_out
l68 reg_stateG10_4_out
l69 reg_i_hlock3_out
l70 reg_i_hready_out
l71 reg_i_hlock10_out
l72 reg_controllable_ndecide_out
l73 reg_controllable_busreq_out
l74 reg_stateG10_5_out
l75 reg_i_hlock2_out
l76 reg_controllable_hgrant1_out
l77 reg_i_hlock11_out
l78 sys_fair0done_out
l79 reg_stateG10_6_out
l80 reg_i_hlock1_out
l81 reg_i_hlock12_out
l82 reg_controllable_hgrant2_out
l83 sys_fair17done_out
l84 reg_stateG10_7_out
l85 reg_i_hlock0_out
l86 reg_i_hlock13_out
l87 reg_controllable_nhgrant0_out
l88 reg_controllable_hgrant3_out
l89 reg_stateG10_8_out
l90 env_safe_err_happened_out
l91 reg_i_hlock14_out
l92 reg_controllable_hgrant4_out
l93 reg_stateG10_9_out
l94 reg_i_hlock15_out
l95 sys_fair16done_out
l96 reg_controllable_hgrant5_out
l97 reg_controllable_hgrant15_out
l98 reg_i_hbusreq0_out
l99 reg_controllable_hgrant6_out
l100 sys_fair15done_out
l101 reg_controllable_hgrant14_out
l102 reg_controllable_locked_out
l103 reg_i_hbusreq1_out
l104 reg_controllable_hgrant7_out
l105 reg_i_hbusreq10_out
o0 o_err
c
amba_16_new_40
This file was written by ABC on Thu May  7 17:03:31 2015
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv amba16b40.v   ---gives--> amba16b40.mv
> abc -c "read_blif_mv amba16b40.mv; write_aiger -s amba16b40n.aig"   ---gives--> amba16b40n.aig
> aigtoaig amba16b40n.aig amba16b40n.aag   ---gives--> amba16b40n.aag (this file)
Content of amba16b40.v:
module amba_16_new_40(
        o_err,
        i_clk,
        i_hready,
        i_hbusreq0,
        i_hlock0,
        i_hbusreq1,
        i_hlock1,
        i_hbusreq2,
        i_hlock2,
        i_hbusreq3,
        i_hlock3,
        i_hbusreq4,
        i_hlock4,
        i_hbusreq5,
        i_hlock5,
        i_hbusreq6,
        i_hlock6,
        i_hbusreq7,
        i_hlock7,
        i_hbusreq8,
        i_hlock8,
        i_hbusreq9,
        i_hlock9,
        i_hbusreq10,
        i_hlock10,
        i_hbusreq11,
        i_hlock11,
        i_hbusreq12,
        i_hlock12,
        i_hbusreq13,
        i_hlock13,
        i_hbusreq14,
        i_hlock14,
        i_hbusreq15,
        i_hlock15,
        i_hburst0,
        i_hburst1,
        controllable_hmaster0,
        controllable_hmaster1,
        controllable_hmaster2,
        controllable_hmaster3,
        controllable_hmastlock,
        controllable_nstart,
        controllable_ndecide,
        controllable_locked,
        controllable_nhgrant0,
        controllable_hgrant1,
        controllable_hgrant2,
        controllable_hgrant3,
        controllable_hgrant4,
        controllable_hgrant5,
        controllable_hgrant6,
        controllable_hgrant7,
        controllable_hgrant8,
        controllable_hgrant9,
        controllable_hgrant10,
        controllable_hgrant11,
        controllable_hgrant12,
        controllable_hgrant13,
        controllable_hgrant14,
        controllable_hgrant15,
        controllable_busreq);

input i_clk;
input i_hready;
input i_hbusreq0;
input i_hlock0;
input i_hbusreq1;
input i_hlock1;
input i_hbusreq2;
input i_hlock2;
input i_hbusreq3;
input i_hlock3;
input i_hbusreq4;
input i_hlock4;
input i_hbusreq5;
input i_hlock5;
input i_hbusreq6;
input i_hlock6;
input i_hbusreq7;
input i_hlock7;
input i_hbusreq8;
input i_hlock8;
input i_hbusreq9;
input i_hlock9;
input i_hbusreq10;
input i_hlock10;
input i_hbusreq11;
input i_hlock11;
input i_hbusreq12;
input i_hlock12;
input i_hbusreq13;
input i_hlock13;
input i_hbusreq14;
input i_hlock14;
input i_hbusreq15;
input i_hlock15;
input i_hburst0;
input i_hburst1;
input controllable_hmaster0;
input controllable_hmaster1;
input controllable_hmaster2;
input controllable_hmaster3;
input controllable_hmastlock;
input controllable_nstart;
input controllable_ndecide;
input controllable_locked;
input controllable_nhgrant0;
input controllable_hgrant1;
input controllable_hgrant2;
input controllable_hgrant3;
input controllable_hgrant4;
input controllable_hgrant5;
input controllable_hgrant6;
input controllable_hgrant7;
input controllable_hgrant8;
input controllable_hgrant9;
input controllable_hgrant10;
input controllable_hgrant11;
input controllable_hgrant12;
input controllable_hgrant13;
input controllable_hgrant14;
input controllable_hgrant15;
input controllable_busreq;
output o_err;

reg reg_i_hready;
reg reg_i_hbusreq0;
reg reg_i_hlock0;
reg reg_i_hbusreq1;
reg reg_i_hlock1;
reg reg_i_hbusreq2;
reg reg_i_hlock2;
reg reg_i_hbusreq3;
reg reg_i_hlock3;
reg reg_i_hbusreq4;
reg reg_i_hlock4;
reg reg_i_hbusreq5;
reg reg_i_hlock5;
reg reg_i_hbusreq6;
reg reg_i_hlock6;
reg reg_i_hbusreq7;
reg reg_i_hlock7;
reg reg_i_hbusreq8;
reg reg_i_hlock8;
reg reg_i_hbusreq9;
reg reg_i_hlock9;
reg reg_i_hbusreq10;
reg reg_i_hlock10;
reg reg_i_hbusreq11;
reg reg_i_hlock11;
reg reg_i_hbusreq12;
reg reg_i_hlock12;
reg reg_i_hbusreq13;
reg reg_i_hlock13;
reg reg_i_hbusreq14;
reg reg_i_hlock14;
reg reg_i_hbusreq15;
reg reg_i_hlock15;
reg reg_controllable_hmaster0;
reg reg_controllable_hmaster1;
reg reg_controllable_hmaster2;
reg reg_controllable_hmaster3;
reg reg_controllable_hmastlock;
reg reg_controllable_nstart;
reg reg_controllable_ndecide;
reg reg_controllable_locked;
reg reg_controllable_nhgrant0;
reg reg_controllable_hgrant1;
reg reg_controllable_hgrant2;
reg reg_controllable_hgrant3;
reg reg_controllable_hgrant4;
reg reg_controllable_hgrant5;
reg reg_controllable_hgrant6;
reg reg_controllable_hgrant7;
reg reg_controllable_hgrant8;
reg reg_controllable_hgrant9;
reg reg_controllable_hgrant10;
reg reg_controllable_hgrant11;
reg reg_controllable_hgrant12;
reg reg_controllable_hgrant13;
reg reg_controllable_hgrant14;
reg reg_controllable_hgrant15;
reg reg_controllable_busreq;
reg reg_stateA1;
reg reg_stateG2;
reg reg_stateG3_0;
reg reg_stateG3_1;
reg reg_stateG3_2;
reg reg_stateG10_1;
reg reg_stateG10_2;
reg reg_stateG10_3;
reg reg_stateG10_4;
reg reg_stateG10_5;
reg reg_stateG10_6;
reg reg_stateG10_7;
reg reg_stateG10_8;
reg reg_stateG10_9;
reg reg_stateG10_10;
reg reg_stateG10_11;
reg reg_stateG10_12;
reg reg_stateG10_13;
reg reg_stateG10_14;
reg reg_stateG10_15;
reg env_safe_err_happened;
reg env_fair0done;
reg env_fair1done;
reg sys_fair0done;
reg sys_fair1done;
reg sys_fair2done;
reg sys_fair3done;
reg sys_fair4done;
reg sys_fair5done;
reg sys_fair6done;
reg sys_fair7done;
reg sys_fair8done;
reg sys_fair9done;
reg sys_fair10done;
reg sys_fair11done;
reg sys_fair12done;
reg sys_fair13done;
reg sys_fair14done;
reg sys_fair15done;
reg sys_fair16done;
reg sys_fair17done;
reg [5:0] fair_cnt;

wire env_safe_err0;
wire env_safe_err1;
wire env_safe_err2;
wire env_safe_err3;
wire env_safe_err4;
wire env_safe_err5;
wire env_safe_err6;
wire env_safe_err7;
wire env_safe_err8;
wire env_safe_err9;
wire env_safe_err10;
wire env_safe_err11;
wire env_safe_err12;
wire env_safe_err13;
wire env_safe_err14;
wire env_safe_err15;
wire env_safe_err;

wire sys_safe_err0;
wire sys_safe_err1;
wire sys_safe_err2;
wire sys_safe_err3;
wire sys_safe_err4;
wire sys_safe_err5;
wire sys_safe_err6;
wire sys_safe_err7;
wire sys_safe_err8;
wire sys_safe_err9;
wire sys_safe_err10;
wire sys_safe_err11;
wire sys_safe_err12;
wire sys_safe_err13;
wire sys_safe_err14;
wire sys_safe_err15;
wire sys_safe_err16;
wire sys_safe_err17;
wire sys_safe_err18;
wire sys_safe_err19;
wire sys_safe_err20;
wire sys_safe_err21;
wire sys_safe_err22;
wire sys_safe_err23;
wire sys_safe_err24;
wire sys_safe_err25;
wire sys_safe_err26;
wire sys_safe_err27;
wire sys_safe_err28;
wire sys_safe_err29;
wire sys_safe_err30;
wire sys_safe_err31;
wire sys_safe_err32;
wire sys_safe_err33;
wire sys_safe_err34;
wire sys_safe_err35;
wire sys_safe_err36;
wire sys_safe_err37;
wire sys_safe_err38;
wire sys_safe_err39;
wire sys_safe_err40;
wire sys_safe_err41;
wire sys_safe_err42;
wire sys_safe_err43;
wire sys_safe_err44;
wire sys_safe_err45;
wire sys_safe_err46;
wire sys_safe_err47;
wire sys_safe_err48;
wire sys_safe_err49;
wire sys_safe_err50;
wire sys_safe_err51;
wire sys_safe_err52;
wire sys_safe_err53;
wire sys_safe_err54;
wire sys_safe_err55;
wire sys_safe_err56;
wire sys_safe_err57;
wire sys_safe_err58;
wire sys_safe_err59;
wire sys_safe_err60;
wire sys_safe_err61;
wire sys_safe_err62;
wire sys_safe_err63;
wire sys_safe_err64;
wire sys_safe_err65;
wire sys_safe_err66;
wire sys_safe_err67;
wire sys_safe_err68;
wire sys_safe_err69;
wire sys_safe_err70;
wire sys_safe_err71;
wire sys_safe_err72;
wire sys_safe_err73;
wire sys_safe_err74;
wire sys_safe_err75;
wire sys_safe_err76;
wire sys_safe_err77;
wire sys_safe_err78;
wire sys_safe_err79;
wire sys_safe_err80;
wire sys_safe_err81;
wire sys_safe_err82;
wire sys_safe_err83;
wire sys_safe_err84;
wire sys_safe_err85;
wire sys_safe_err86;
wire sys_safe_err87;
wire sys_safe_err88;
wire sys_safe_err89;
wire sys_safe_err90;
wire sys_safe_err91;
wire sys_safe_err92;
wire sys_safe_err93;
wire sys_safe_err94;
wire sys_safe_err95;
wire sys_safe_err96;
wire sys_safe_err97;
wire sys_safe_err98;
wire sys_safe_err99;
wire sys_safe_err100;
wire sys_safe_err101;
wire sys_safe_err102;
wire sys_safe_err103;
wire sys_safe_err104;
wire sys_safe_err105;
wire sys_safe_err106;
wire sys_safe_err107;
wire sys_safe_err108;
wire sys_safe_err109;
wire sys_safe_err110;
wire sys_safe_err111;
wire sys_safe_err112;
wire sys_safe_err113;
wire sys_safe_err114;
wire sys_safe_err115;
wire sys_safe_err116;
wire sys_safe_err117;
wire sys_safe_err;

wire env_fair0;
wire env_fair1;

wire sys_fair0;
wire sys_fair1;
wire sys_fair2;
wire sys_fair3;
wire sys_fair4;
wire sys_fair5;
wire sys_fair6;
wire sys_fair7;
wire sys_fair8;
wire sys_fair9;
wire sys_fair10;
wire sys_fair11;
wire sys_fair12;
wire sys_fair13;
wire sys_fair14;
wire sys_fair15;
wire sys_fair16;
wire sys_fair17;
wire progress_in_sys_fair;
wire all_env_fair_fulfilled;
wire all_sys_fair_fulfilled;
wire fair_err;
wire o_err;

// =============================================================
//                        ENV_TRANSITION:
// =============================================================
// Assumption 3:
// G( hlock0=1 -> hbusreq0=1 );
assign env_safe_err0 =  ~(~ i_hlock0 | i_hbusreq0);

// Assumption 3:
// G( hlock1=1 -> hbusreq1=1 );
assign env_safe_err1 =  ~(~ i_hlock1 | i_hbusreq1);

// Assumption 3:
// G( hlock2=1 -> hbusreq2=1 );
assign env_safe_err2 =  ~(~ i_hlock2 | i_hbusreq2);

// Assumption 3:
// G( hlock3=1 -> hbusreq3=1 );
assign env_safe_err3 =  ~(~ i_hlock3 | i_hbusreq3);

// Assumption 3:
// G( hlock4=1 -> hbusreq4=1 );
assign env_safe_err4 =  ~(~ i_hlock4 | i_hbusreq4);

// Assumption 3:
// G( hlock5=1 -> hbusreq5=1 );
assign env_safe_err5 =  ~(~ i_hlock5 | i_hbusreq5);

// Assumption 3:
// G( hlock6=1 -> hbusreq6=1 );
assign env_safe_err6 =  ~(~ i_hlock6 | i_hbusreq6);

// Assumption 3:
// G( hlock7=1 -> hbusreq7=1 );
assign env_safe_err7 =  ~(~ i_hlock7 | i_hbusreq7);

// Assumption 3:
// G( hlock8=1 -> hbusreq8=1 );
assign env_safe_err8 =  ~(~ i_hlock8 | i_hbusreq8);

// Assumption 3:
// G( hlock9=1 -> hbusreq9=1 );
assign env_safe_err9 =  ~(~ i_hlock9 | i_hbusreq9);

// Assumption 3:
// G( hlock10=1 -> hbusreq10=1 );
assign env_safe_err10 =  ~(~ i_hlock10 | i_hbusreq10);

// Assumption 3:
// G( hlock11=1 -> hbusreq11=1 );
assign env_safe_err11 =  ~(~ i_hlock11 | i_hbusreq11);

// Assumption 3:
// G( hlock12=1 -> hbusreq12=1 );
assign env_safe_err12 =  ~(~ i_hlock12 | i_hbusreq12);

// Assumption 3:
// G( hlock13=1 -> hbusreq13=1 );
assign env_safe_err13 =  ~(~ i_hlock13 | i_hbusreq13);

// Assumption 3:
// G( hlock14=1 -> hbusreq14=1 );
assign env_safe_err14 =  ~(~ i_hlock14 | i_hbusreq14);

// Assumption 3:
// G( hlock15=1 -> hbusreq15=1 );
assign env_safe_err15 =  ~(~ i_hlock15 | i_hbusreq15);

// collecting together the safety error bits:
assign env_safe_err = env_safe_err0 |
                      env_safe_err1 |
                      env_safe_err2 |
                      env_safe_err3 |
                      env_safe_err4 |
                      env_safe_err5 |
                      env_safe_err6 |
                      env_safe_err7 |
                      env_safe_err8 |
                      env_safe_err9 |
                      env_safe_err10 |
                      env_safe_err11 |
                      env_safe_err12 |
                      env_safe_err13 |
                      env_safe_err14 |
                      env_safe_err15;

// =============================================================
//                        SYS_TRANSITION:
// =============================================================
// G((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0) -> (hbusreq0=0 <-> busreq=0));
assign sys_safe_err0 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq0 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0) -> (hbusreq1=0 <-> busreq=0));
assign sys_safe_err1 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq1 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0) -> (hbusreq2=0 <-> busreq=0));
assign sys_safe_err2 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq2 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0) -> (hbusreq3=0 <-> busreq=0));
assign sys_safe_err3 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq3 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0) -> (hbusreq4=0 <-> busreq=0));
assign sys_safe_err4 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq4 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0) -> (hbusreq5=0 <-> busreq=0));
assign sys_safe_err5 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq5 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0) -> (hbusreq6=0 <-> busreq=0));
assign sys_safe_err6 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq6 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0) -> (hbusreq7=0 <-> busreq=0));
assign sys_safe_err7 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq7 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1) -> (hbusreq8=0 <-> busreq=0));
assign sys_safe_err8 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq8 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1) -> (hbusreq9=0 <-> busreq=0));
assign sys_safe_err9 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq9 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1) -> (hbusreq10=0 <-> busreq=0));
assign sys_safe_err10 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq10 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1) -> (hbusreq11=0 <-> busreq=0));
assign sys_safe_err11 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq11 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1) -> (hbusreq12=0 <-> busreq=0));
assign sys_safe_err12 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 )|(~i_hbusreq12 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1) -> (hbusreq13=0 <-> busreq=0));
assign sys_safe_err13 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 )|(~i_hbusreq13 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1) -> (hbusreq14=0 <-> busreq=0));
assign sys_safe_err14 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 )|(~i_hbusreq14 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1) -> (hbusreq15=0 <-> busreq=0));
assign sys_safe_err15 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 )|(~i_hbusreq15 ^~ (~controllable_busreq)));

// Guarantee 1:
// G((hready=0) -> X(start=0));
assign sys_safe_err16 =  ~( reg_i_hready | controllable_nstart );

// G(((stateG2=1) * (start=1)) -> FALSE;
assign sys_safe_err17 =  ~( ~(reg_stateG2 & ~controllable_nstart) | 0 );

// G(((stateG3_0=1) * (stateG3_1=0) * (stateG3_2=0) * ((start=1))) -> FALSE);
// G(((stateG3_0=0) * (stateG3_1=1) * (stateG3_2=0) * ((start=1))) -> FALSE);
// G(((stateG3_0=1) * (stateG3_1=1) * (stateG3_2=0) * ((start=1))) -> FALSE);
// G(((stateG3_0=0) * (stateG3_1=0) * (stateG3_2=1) * ((start=1))) -> FALSE);
// all these rules can be summarized as: only in state 000, start=1 is allowed:
assign sys_safe_err18 =  (reg_stateG3_0 | reg_stateG3_1 | reg_stateG3_2) & ~controllable_nstart;

// G( (hready=1) -> (   (hgrant0=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err19 =  ~( ~(reg_i_hready) | ( ~reg_controllable_nhgrant0 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant1=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err20 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant1 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant2=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err21 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant2 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant3=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err22 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant3 ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant4=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err23 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant4 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant5=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err24 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant5 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant6=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err25 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant6 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant7=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err26 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant7 ^~ ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant8=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err27 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant8 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant9=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err28 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant9 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant10=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err29 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant10 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant11=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err30 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant11 ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant12=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=1))  ) );
assign sys_safe_err31 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant12 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant13=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=1))  ) );
assign sys_safe_err32 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant13 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant14=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=1))  ) );
assign sys_safe_err33 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant14 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant15=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=1))  ) );
assign sys_safe_err34 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant15 ^~ ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 ) ) );

// HMASTLOCK:
// G(  (hready=1) -> (locked=0 <-> X(hmastlock=0) ) );
assign sys_safe_err35 =  ~( ~(reg_i_hready) | (~reg_controllable_locked ^~ ~controllable_hmastlock) );

// Master 0:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err36 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 1:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err37 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 2:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err38 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 3:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err39 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 4:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err40 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 5:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err41 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 6:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err42 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 7:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err43 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 8:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err44 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 9:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err45 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 10:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err46 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 11:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err47 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 12:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=1)) ) );
assign sys_safe_err48 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & reg_controllable_hmaster3 ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 )) );

// Master 13:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=1)) ) );
assign sys_safe_err49 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & reg_controllable_hmaster3 ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 )) );

// Master 14:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=1)) ) );
assign sys_safe_err50 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & reg_controllable_hmaster2 & reg_controllable_hmaster3 ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 )) );

// Master 15:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=1)) ) );
assign sys_safe_err51 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & reg_controllable_hmaster2 & reg_controllable_hmaster3 ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 )) );

// Guarantee 6.2:
// G( ((X(start=0))) -> ( (hmastlock=1) <-> X(hmastlock=1)) );
assign sys_safe_err52 =  ~( ~(controllable_nstart) | ( reg_controllable_hmastlock ^~ controllable_hmastlock) );

// G( (decide=1  *  hlock0=1  *  X(hgrant0=1) )->X(locked=1));
assign sys_safe_err53 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock0 & ~controllable_nhgrant0) | (controllable_locked) );

// G((decide=1  *  hlock0=0  *  X(hgrant0=1))->X(locked=0));
assign sys_safe_err54 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock0 & ~controllable_nhgrant0) | (~controllable_locked) );

// G( (decide=1  *  hlock1=1  *  X(hgrant1=1) )->X(locked=1));
assign sys_safe_err55 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock1 & controllable_hgrant1) | (controllable_locked) );

// G((decide=1  *  hlock1=0  *  X(hgrant1=1))->X(locked=0));
assign sys_safe_err56 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock1 & controllable_hgrant1) | (~controllable_locked) );

// G( (decide=1  *  hlock2=1  *  X(hgrant2=1) )->X(locked=1));
assign sys_safe_err57 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock2 & controllable_hgrant2) | (controllable_locked) );

// G((decide=1  *  hlock2=0  *  X(hgrant2=1))->X(locked=0));
assign sys_safe_err58 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock2 & controllable_hgrant2) | (~controllable_locked) );

// G( (decide=1  *  hlock3=1  *  X(hgrant3=1) )->X(locked=1));
assign sys_safe_err59 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock3 & controllable_hgrant3) | (controllable_locked) );

// G((decide=1  *  hlock3=0  *  X(hgrant3=1))->X(locked=0));
assign sys_safe_err60 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock3 & controllable_hgrant3) | (~controllable_locked) );

// G( (decide=1  *  hlock4=1  *  X(hgrant4=1) )->X(locked=1));
assign sys_safe_err61 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock4 & controllable_hgrant4) | (controllable_locked) );

// G((decide=1  *  hlock4=0  *  X(hgrant4=1))->X(locked=0));
assign sys_safe_err62 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock4 & controllable_hgrant4) | (~controllable_locked) );

// G( (decide=1  *  hlock5=1  *  X(hgrant5=1) )->X(locked=1));
assign sys_safe_err63 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock5 & controllable_hgrant5) | (controllable_locked) );

// G((decide=1  *  hlock5=0  *  X(hgrant5=1))->X(locked=0));
assign sys_safe_err64 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock5 & controllable_hgrant5) | (~controllable_locked) );

// G( (decide=1  *  hlock6=1  *  X(hgrant6=1) )->X(locked=1));
assign sys_safe_err65 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock6 & controllable_hgrant6) | (controllable_locked) );

// G((decide=1  *  hlock6=0  *  X(hgrant6=1))->X(locked=0));
assign sys_safe_err66 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock6 & controllable_hgrant6) | (~controllable_locked) );

// G( (decide=1  *  hlock7=1  *  X(hgrant7=1) )->X(locked=1));
assign sys_safe_err67 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock7 & controllable_hgrant7) | (controllable_locked) );

// G((decide=1  *  hlock7=0  *  X(hgrant7=1))->X(locked=0));
assign sys_safe_err68 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock7 & controllable_hgrant7) | (~controllable_locked) );

// G( (decide=1  *  hlock8=1  *  X(hgrant8=1) )->X(locked=1));
assign sys_safe_err69 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock8 & controllable_hgrant8) | (controllable_locked) );

// G((decide=1  *  hlock8=0  *  X(hgrant8=1))->X(locked=0));
assign sys_safe_err70 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock8 & controllable_hgrant8) | (~controllable_locked) );

// G( (decide=1  *  hlock9=1  *  X(hgrant9=1) )->X(locked=1));
assign sys_safe_err71 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock9 & controllable_hgrant9) | (controllable_locked) );

// G((decide=1  *  hlock9=0  *  X(hgrant9=1))->X(locked=0));
assign sys_safe_err72 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock9 & controllable_hgrant9) | (~controllable_locked) );

// G( (decide=1  *  hlock10=1  *  X(hgrant10=1) )->X(locked=1));
assign sys_safe_err73 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock10 & controllable_hgrant10) | (controllable_locked) );

// G((decide=1  *  hlock10=0  *  X(hgrant10=1))->X(locked=0));
assign sys_safe_err74 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock10 & controllable_hgrant10) | (~controllable_locked) );

// G( (decide=1  *  hlock11=1  *  X(hgrant11=1) )->X(locked=1));
assign sys_safe_err75 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock11 & controllable_hgrant11) | (controllable_locked) );

// G((decide=1  *  hlock11=0  *  X(hgrant11=1))->X(locked=0));
assign sys_safe_err76 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock11 & controllable_hgrant11) | (~controllable_locked) );

// G( (decide=1  *  hlock12=1  *  X(hgrant12=1) )->X(locked=1));
assign sys_safe_err77 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock12 & controllable_hgrant12) | (controllable_locked) );

// G((decide=1  *  hlock12=0  *  X(hgrant12=1))->X(locked=0));
assign sys_safe_err78 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock12 & controllable_hgrant12) | (~controllable_locked) );

// G( (decide=1  *  hlock13=1  *  X(hgrant13=1) )->X(locked=1));
assign sys_safe_err79 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock13 & controllable_hgrant13) | (controllable_locked) );

// G((decide=1  *  hlock13=0  *  X(hgrant13=1))->X(locked=0));
assign sys_safe_err80 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock13 & controllable_hgrant13) | (~controllable_locked) );

// G( (decide=1  *  hlock14=1  *  X(hgrant14=1) )->X(locked=1));
assign sys_safe_err81 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock14 & controllable_hgrant14) | (controllable_locked) );

// G((decide=1  *  hlock14=0  *  X(hgrant14=1))->X(locked=0));
assign sys_safe_err82 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock14 & controllable_hgrant14) | (~controllable_locked) );

// G( (decide=1  *  hlock15=1  *  X(hgrant15=1) )->X(locked=1));
assign sys_safe_err83 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock15 & controllable_hgrant15) | (controllable_locked) );

// G((decide=1  *  hlock15=0  *  X(hgrant15=1))->X(locked=0));
assign sys_safe_err84 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock15 & controllable_hgrant15) | (~controllable_locked) );

// G( (decide=0) -> (  ((hgrant0=0)<->X(hgrant0=0))  ));
assign sys_safe_err85 =  ~( ~(reg_controllable_ndecide) | (reg_controllable_nhgrant0 ^~ controllable_nhgrant0) );

// G( (decide=0) -> (  ((hgrant1=0)<->X(hgrant1=0))  ));
assign sys_safe_err86 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant1 ^~ ~controllable_hgrant1) );

// G( (decide=0) -> (  ((hgrant2=0)<->X(hgrant2=0))  ));
assign sys_safe_err87 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant2 ^~ ~controllable_hgrant2) );

// G( (decide=0) -> (  ((hgrant3=0)<->X(hgrant3=0))  ));
assign sys_safe_err88 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant3 ^~ ~controllable_hgrant3) );

// G( (decide=0) -> (  ((hgrant4=0)<->X(hgrant4=0))  ));
assign sys_safe_err89 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant4 ^~ ~controllable_hgrant4) );

// G( (decide=0) -> (  ((hgrant5=0)<->X(hgrant5=0))  ));
assign sys_safe_err90 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant5 ^~ ~controllable_hgrant5) );

// G( (decide=0) -> (  ((hgrant6=0)<->X(hgrant6=0))  ));
assign sys_safe_err91 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant6 ^~ ~controllable_hgrant6) );

// G( (decide=0) -> (  ((hgrant7=0)<->X(hgrant7=0))  ));
assign sys_safe_err92 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant7 ^~ ~controllable_hgrant7) );

// G( (decide=0) -> (  ((hgrant8=0)<->X(hgrant8=0))  ));
assign sys_safe_err93 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant8 ^~ ~controllable_hgrant8) );

// G( (decide=0) -> (  ((hgrant9=0)<->X(hgrant9=0))  ));
assign sys_safe_err94 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant9 ^~ ~controllable_hgrant9) );

// G( (decide=0) -> (  ((hgrant10=0)<->X(hgrant10=0))  ));
assign sys_safe_err95 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant10 ^~ ~controllable_hgrant10) );

// G( (decide=0) -> (  ((hgrant11=0)<->X(hgrant11=0))  ));
assign sys_safe_err96 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant11 ^~ ~controllable_hgrant11) );

// G( (decide=0) -> (  ((hgrant12=0)<->X(hgrant12=0))  ));
assign sys_safe_err97 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant12 ^~ ~controllable_hgrant12) );

// G( (decide=0) -> (  ((hgrant13=0)<->X(hgrant13=0))  ));
assign sys_safe_err98 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant13 ^~ ~controllable_hgrant13) );

// G( (decide=0) -> (  ((hgrant14=0)<->X(hgrant14=0))  ));
assign sys_safe_err99 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant14 ^~ ~controllable_hgrant14) );

// G( (decide=0) -> (  ((hgrant15=0)<->X(hgrant15=0))  ));
assign sys_safe_err100 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant15 ^~ ~controllable_hgrant15) );

// G((decide=0)->(locked=0 <-> X(locked=0)));
assign sys_safe_err101 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_locked ^~ ~controllable_locked) );

// G(((stateG10_1=1) * (((hgrant1=1)) * (hbusreq1=0)))->FALSE);
assign sys_safe_err102 =  ~( ~(reg_stateG10_1 & (controllable_hgrant1 & ~i_hbusreq1)) | 0 );

// G(((stateG10_2=1) * (((hgrant2=1)) * (hbusreq2=0)))->FALSE);
assign sys_safe_err103 =  ~( ~(reg_stateG10_2 & (controllable_hgrant2 & ~i_hbusreq2)) | 0 );

// G(((stateG10_3=1) * (((hgrant3=1)) * (hbusreq3=0)))->FALSE);
assign sys_safe_err104 =  ~( ~(reg_stateG10_3 & (controllable_hgrant3 & ~i_hbusreq3)) | 0 );

// G(((stateG10_4=1) * (((hgrant4=1)) * (hbusreq4=0)))->FALSE);
assign sys_safe_err105 =  ~( ~(reg_stateG10_4 & (controllable_hgrant4 & ~i_hbusreq4)) | 0 );

// G(((stateG10_5=1) * (((hgrant5=1)) * (hbusreq5=0)))->FALSE);
assign sys_safe_err106 =  ~( ~(reg_stateG10_5 & (controllable_hgrant5 & ~i_hbusreq5)) | 0 );

// G(((stateG10_6=1) * (((hgrant6=1)) * (hbusreq6=0)))->FALSE);
assign sys_safe_err107 =  ~( ~(reg_stateG10_6 & (controllable_hgrant6 & ~i_hbusreq6)) | 0 );

// G(((stateG10_7=1) * (((hgrant7=1)) * (hbusreq7=0)))->FALSE);
assign sys_safe_err108 =  ~( ~(reg_stateG10_7 & (controllable_hgrant7 & ~i_hbusreq7)) | 0 );

// G(((stateG10_8=1) * (((hgrant8=1)) * (hbusreq8=0)))->FALSE);
assign sys_safe_err109 =  ~( ~(reg_stateG10_8 & (controllable_hgrant8 & ~i_hbusreq8)) | 0 );

// G(((stateG10_9=1) * (((hgrant9=1)) * (hbusreq9=0)))->FALSE);
assign sys_safe_err110 =  ~( ~(reg_stateG10_9 & (controllable_hgrant9 & ~i_hbusreq9)) | 0 );

// G(((stateG10_10=1) * (((hgrant10=1)) * (hbusreq10=0)))->FALSE);
assign sys_safe_err111 =  ~( ~(reg_stateG10_10 & (controllable_hgrant10 & ~i_hbusreq10)) | 0 );

// G(((stateG10_11=1) * (((hgrant11=1)) * (hbusreq11=0)))->FALSE);
assign sys_safe_err112 =  ~( ~(reg_stateG10_11 & (controllable_hgrant11 & ~i_hbusreq11)) | 0 );

// G(((stateG10_12=1) * (((hgrant12=1)) * (hbusreq12=0)))->FALSE);
assign sys_safe_err113 =  ~( ~(reg_stateG10_12 & (controllable_hgrant12 & ~i_hbusreq12)) | 0 );

// G(((stateG10_13=1) * (((hgrant13=1)) * (hbusreq13=0)))->FALSE);
assign sys_safe_err114 =  ~( ~(reg_stateG10_13 & (controllable_hgrant13 & ~i_hbusreq13)) | 0 );

// G(((stateG10_14=1) * (((hgrant14=1)) * (hbusreq14=0)))->FALSE);
assign sys_safe_err115 =  ~( ~(reg_stateG10_14 & (controllable_hgrant14 & ~i_hbusreq14)) | 0 );

// G(((stateG10_15=1) * (((hgrant15=1)) * (hbusreq15=0)))->FALSE);
assign sys_safe_err116 =  ~( ~(reg_stateG10_15 & (controllable_hgrant15 & ~i_hbusreq15)) | 0 );

// default master
// G((decide=1  *  hbusreq0=0  *  hbusreq1=0  *  hbusreq2=0  *  hbusreq3=0  *  hbusreq4=0  *  hbusreq5=0  *  hbusreq6=0  *  hbusreq7=0  *  hbusreq8=0  *  hbusreq9=0  *  hbusreq10=0  *  hbusreq11=0  *  hbusreq12=0  *  hbusreq13=0  *  hbusreq14=0  *  hbusreq15=0) -> X(hgrant0=1));
assign sys_safe_err117 =  ~( ~(~reg_controllable_ndecide & (~reg_i_hbusreq0 & ~reg_i_hbusreq1 & ~reg_i_hbusreq2 & ~reg_i_hbusreq3 & ~reg_i_hbusreq4 & ~reg_i_hbusreq5 & ~reg_i_hbusreq6 & ~reg_i_hbusreq7 & ~reg_i_hbusreq8 & ~reg_i_hbusreq9 & ~reg_i_hbusreq10 & ~reg_i_hbusreq11 & ~reg_i_hbusreq12 & ~reg_i_hbusreq13 & ~reg_i_hbusreq14 & ~reg_i_hbusreq15)) | (~controllable_nhgrant0) );

// collecting together the safety error bits:
assign sys_safe_err = sys_safe_err0 |
                      sys_safe_err1 |
                      sys_safe_err2 |
                      sys_safe_err3 |
                      sys_safe_err4 |
                      sys_safe_err5 |
                      sys_safe_err6 |
                      sys_safe_err7 |
                      sys_safe_err8 |
                      sys_safe_err9 |
                      sys_safe_err10 |
                      sys_safe_err11 |
                      sys_safe_err12 |
                      sys_safe_err13 |
                      sys_safe_err14 |
                      sys_safe_err15 |
                      sys_safe_err16 |
                      sys_safe_err17 |
                      sys_safe_err18 |
                      sys_safe_err19 |
                      sys_safe_err20 |
                      sys_safe_err21 |
                      sys_safe_err22 |
                      sys_safe_err23 |
                      sys_safe_err24 |
                      sys_safe_err25 |
                      sys_safe_err26 |
                      sys_safe_err27 |
                      sys_safe_err28 |
                      sys_safe_err29 |
                      sys_safe_err30 |
                      sys_safe_err31 |
                      sys_safe_err32 |
                      sys_safe_err33 |
                      sys_safe_err34 |
                      sys_safe_err35 |
                      sys_safe_err36 |
                      sys_safe_err37 |
                      sys_safe_err38 |
                      sys_safe_err39 |
                      sys_safe_err40 |
                      sys_safe_err41 |
                      sys_safe_err42 |
                      sys_safe_err43 |
                      sys_safe_err44 |
                      sys_safe_err45 |
                      sys_safe_err46 |
                      sys_safe_err47 |
                      sys_safe_err48 |
                      sys_safe_err49 |
                      sys_safe_err50 |
                      sys_safe_err51 |
                      sys_safe_err52 |
                      sys_safe_err53 |
                      sys_safe_err54 |
                      sys_safe_err55 |
                      sys_safe_err56 |
                      sys_safe_err57 |
                      sys_safe_err58 |
                      sys_safe_err59 |
                      sys_safe_err60 |
                      sys_safe_err61 |
                      sys_safe_err62 |
                      sys_safe_err63 |
                      sys_safe_err64 |
                      sys_safe_err65 |
                      sys_safe_err66 |
                      sys_safe_err67 |
                      sys_safe_err68 |
                      sys_safe_err69 |
                      sys_safe_err70 |
                      sys_safe_err71 |
                      sys_safe_err72 |
                      sys_safe_err73 |
                      sys_safe_err74 |
                      sys_safe_err75 |
                      sys_safe_err76 |
                      sys_safe_err77 |
                      sys_safe_err78 |
                      sys_safe_err79 |
                      sys_safe_err80 |
                      sys_safe_err81 |
                      sys_safe_err82 |
                      sys_safe_err83 |
                      sys_safe_err84 |
                      sys_safe_err85 |
                      sys_safe_err86 |
                      sys_safe_err87 |
                      sys_safe_err88 |
                      sys_safe_err89 |
                      sys_safe_err90 |
                      sys_safe_err91 |
                      sys_safe_err92 |
                      sys_safe_err93 |
                      sys_safe_err94 |
                      sys_safe_err95 |
                      sys_safe_err96 |
                      sys_safe_err97 |
                      sys_safe_err98 |
                      sys_safe_err99 |
                      sys_safe_err100 |
                      sys_safe_err101 |
                      sys_safe_err102 |
                      sys_safe_err103 |
                      sys_safe_err104 |
                      sys_safe_err105 |
                      sys_safe_err106 |
                      sys_safe_err107 |
                      sys_safe_err108 |
                      sys_safe_err109 |
                      sys_safe_err110 |
                      sys_safe_err111 |
                      sys_safe_err112 |
                      sys_safe_err113 |
                      sys_safe_err114 |
                      sys_safe_err115 |
                      sys_safe_err116 |
                      sys_safe_err117;

// =============================================================
//                          ENV_FAIRNESS:
// =============================================================
// Assumption 1: 
// G(F(stateA1=0));
assign env_fair0 =  ~reg_stateA1;

// Assumption 2:
// G(F(hready=1));
assign env_fair1 =  i_hready;

assign all_env_fair_fulfilled = (env_fair0done | env_fair0) &
                                (env_fair1done | env_fair1);

// =============================================================
//                          SYS_FAIRNESS:
// =============================================================
// Guarantee 2:
// G(F(stateG2=0));
assign sys_fair0 = ~reg_stateG2;

// Guarantee 3:
// G(F((stateG3_0=0)  *  (stateG3_1=0)  *  (stateG3_2=0)));
assign sys_fair1 =  (~reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2);

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0))  |  hbusreq0=0));
assign sys_fair2 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq0;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0))  |  hbusreq1=0));
assign sys_fair3 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq1;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0))  |  hbusreq2=0));
assign sys_fair4 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq2;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0))  |  hbusreq3=0));
assign sys_fair5 =  ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq3;

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0))  |  hbusreq4=0));
assign sys_fair6 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq4;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0))  |  hbusreq5=0));
assign sys_fair7 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq5;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0))  |  hbusreq6=0));
assign sys_fair8 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq6;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0))  |  hbusreq7=0));
assign sys_fair9 =  ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq7;

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1))  |  hbusreq8=0));
assign sys_fair10 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq8;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1))  |  hbusreq9=0));
assign sys_fair11 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq9;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1))  |  hbusreq10=0));
assign sys_fair12 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq10;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1))  |  hbusreq11=0));
assign sys_fair13 =  ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq11;

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1))  |  hbusreq12=0));
assign sys_fair14 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 ) | ~i_hbusreq12;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1))  |  hbusreq13=0));
assign sys_fair15 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 ) | ~i_hbusreq13;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1))  |  hbusreq14=0));
assign sys_fair16 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 ) | ~i_hbusreq14;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1))  |  hbusreq15=0));
assign sys_fair17 =  ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 ) | ~i_hbusreq15;

assign all_sys_fair_fulfilled = (sys_fair0done | sys_fair0) &
                                (sys_fair1done | sys_fair1) &
                                (sys_fair2done | sys_fair2) &
                                (sys_fair3done | sys_fair3) &
                                (sys_fair4done | sys_fair4) &
                                (sys_fair5done | sys_fair5) &
                                (sys_fair6done | sys_fair6) &
                                (sys_fair7done | sys_fair7) &
                                (sys_fair8done | sys_fair8) &
                                (sys_fair9done | sys_fair9) &
                                (sys_fair10done | sys_fair10) &
                                (sys_fair11done | sys_fair11) &
                                (sys_fair12done | sys_fair12) &
                                (sys_fair13done | sys_fair13) &
                                (sys_fair14done | sys_fair14) &
                                (sys_fair15done | sys_fair15) &
                                (sys_fair16done | sys_fair16) &
                                (sys_fair17done | sys_fair17);
assign progress_in_sys_fair = (~sys_fair0done & sys_fair0) |
                                (~sys_fair1done & sys_fair1) |
                                (~sys_fair2done & sys_fair2) |
                                (~sys_fair3done & sys_fair3) |
                                (~sys_fair4done & sys_fair4) |
                                (~sys_fair5done & sys_fair5) |
                                (~sys_fair6done & sys_fair6) |
                                (~sys_fair7done & sys_fair7) |
                                (~sys_fair8done & sys_fair8) |
                                (~sys_fair9done & sys_fair9) |
                                (~sys_fair10done & sys_fair10) |
                                (~sys_fair11done & sys_fair11) |
                                (~sys_fair12done & sys_fair12) |
                                (~sys_fair13done & sys_fair13) |
                                (~sys_fair14done & sys_fair14) |
                                (~sys_fair15done & sys_fair15) |
                                (~sys_fair16done & sys_fair16) |
                                (~sys_fair17done & sys_fair17);
assign fair_err = (fair_cnt >= 6'b101000);

// computing the error output bit:
assign o_err = ~env_safe_err & ~env_safe_err_happened & (sys_safe_err | fair_err);

initial
 begin
  reg_i_hready = 0;
  reg_i_hbusreq0 = 0;
  reg_i_hlock0 = 0;
  reg_i_hbusreq1 = 0;
  reg_i_hlock1 = 0;
  reg_i_hbusreq2 = 0;
  reg_i_hlock2 = 0;
  reg_i_hbusreq3 = 0;
  reg_i_hlock3 = 0;
  reg_i_hbusreq4 = 0;
  reg_i_hlock4 = 0;
  reg_i_hbusreq5 = 0;
  reg_i_hlock5 = 0;
  reg_i_hbusreq6 = 0;
  reg_i_hlock6 = 0;
  reg_i_hbusreq7 = 0;
  reg_i_hlock7 = 0;
  reg_i_hbusreq8 = 0;
  reg_i_hlock8 = 0;
  reg_i_hbusreq9 = 0;
  reg_i_hlock9 = 0;
  reg_i_hbusreq10 = 0;
  reg_i_hlock10 = 0;
  reg_i_hbusreq11 = 0;
  reg_i_hlock11 = 0;
  reg_i_hbusreq12 = 0;
  reg_i_hlock12 = 0;
  reg_i_hbusreq13 = 0;
  reg_i_hlock13 = 0;
  reg_i_hbusreq14 = 0;
  reg_i_hlock14 = 0;
  reg_i_hbusreq15 = 0;
  reg_i_hlock15 = 0;
  reg_controllable_hmaster0 = 0;
  reg_controllable_hmaster1 = 0;
  reg_controllable_hmaster2 = 0;
  reg_controllable_hmaster3 = 0;
  reg_controllable_hmastlock = 0;
  reg_controllable_nstart = 0;
  reg_controllable_ndecide = 0;
  reg_controllable_locked = 0;
  reg_controllable_nhgrant0 = 0;
  reg_controllable_hgrant1 = 0;
  reg_controllable_hgrant2 = 0;
  reg_controllable_hgrant3 = 0;
  reg_controllable_hgrant4 = 0;
  reg_controllable_hgrant5 = 0;
  reg_controllable_hgrant6 = 0;
  reg_controllable_hgrant7 = 0;
  reg_controllable_hgrant8 = 0;
  reg_controllable_hgrant9 = 0;
  reg_controllable_hgrant10 = 0;
  reg_controllable_hgrant11 = 0;
  reg_controllable_hgrant12 = 0;
  reg_controllable_hgrant13 = 0;
  reg_controllable_hgrant14 = 0;
  reg_controllable_hgrant15 = 0;
  reg_controllable_busreq = 0;
  reg_stateA1 = 0;
  reg_stateG2 = 0;
  reg_stateG3_0 = 0;
  reg_stateG3_1 = 0;
  reg_stateG3_2 = 0;
  reg_stateG10_1 = 0;
  reg_stateG10_2 = 0;
  reg_stateG10_3 = 0;
  reg_stateG10_4 = 0;
  reg_stateG10_5 = 0;
  reg_stateG10_6 = 0;
  reg_stateG10_7 = 0;
  reg_stateG10_8 = 0;
  reg_stateG10_9 = 0;
  reg_stateG10_10 = 0;
  reg_stateG10_11 = 0;
  reg_stateG10_12 = 0;
  reg_stateG10_13 = 0;
  reg_stateG10_14 = 0;
  reg_stateG10_15 = 0;
  env_safe_err_happened = 0;
  env_fair0done = 0;
  env_fair1done = 0;
  sys_fair0done = 0;
  sys_fair1done = 0;
  sys_fair2done = 0;
  sys_fair3done = 0;
  sys_fair4done = 0;
  sys_fair5done = 0;
  sys_fair6done = 0;
  sys_fair7done = 0;
  sys_fair8done = 0;
  sys_fair9done = 0;
  sys_fair10done = 0;
  sys_fair11done = 0;
  sys_fair12done = 0;
  sys_fair13done = 0;
  sys_fair14done = 0;
  sys_fair15done = 0;
  sys_fair16done = 0;
  sys_fair17done = 0;
  fair_cnt = 0;
 end


always @(posedge i_clk)
 begin
   // We remember if an environment error occurred:
   env_safe_err_happened = env_safe_err_happened | env_safe_err;

   // Updating the fairness counters: 
   if(all_sys_fair_fulfilled)
    begin
      env_fair0done = 0;
      env_fair1done = 0;
      sys_fair0done = 0;
      sys_fair1done = 0;
      sys_fair2done = 0;
      sys_fair3done = 0;
      sys_fair4done = 0;
      sys_fair5done = 0;
      sys_fair6done = 0;
      sys_fair7done = 0;
      sys_fair8done = 0;
      sys_fair9done = 0;
      sys_fair10done = 0;
      sys_fair11done = 0;
      sys_fair12done = 0;
      sys_fair13done = 0;
      sys_fair14done = 0;
      sys_fair15done = 0;
      sys_fair16done = 0;
      sys_fair17done = 0;
      fair_cnt = 0;
    end
   else
    begin
      if(progress_in_sys_fair)
       begin
         env_fair0done = 0;
         env_fair1done = 0;
         fair_cnt = 0;
         sys_fair0done = sys_fair0done | sys_fair0;
         sys_fair1done = sys_fair1done | sys_fair1;
         sys_fair2done = sys_fair2done | sys_fair2;
         sys_fair3done = sys_fair3done | sys_fair3;
         sys_fair4done = sys_fair4done | sys_fair4;
         sys_fair5done = sys_fair5done | sys_fair5;
         sys_fair6done = sys_fair6done | sys_fair6;
         sys_fair7done = sys_fair7done | sys_fair7;
         sys_fair8done = sys_fair8done | sys_fair8;
         sys_fair9done = sys_fair9done | sys_fair9;
         sys_fair10done = sys_fair10done | sys_fair10;
         sys_fair11done = sys_fair11done | sys_fair11;
         sys_fair12done = sys_fair12done | sys_fair12;
         sys_fair13done = sys_fair13done | sys_fair13;
         sys_fair14done = sys_fair14done | sys_fair14;
         sys_fair15done = sys_fair15done | sys_fair15;
         sys_fair16done = sys_fair16done | sys_fair16;
         sys_fair17done = sys_fair17done | sys_fair17;
       end
      else
       begin
         if(all_env_fair_fulfilled)
          begin
            env_fair0done = 0;
            env_fair1done = 0;
            fair_cnt = fair_cnt + 1;
          end
         else
          begin
            env_fair0done = env_fair0done | env_fair0;
            env_fair1done = env_fair1done | env_fair1;
          end
       end
    end

   // Updating the automata: 
   // Automaton A1: 
   if(~reg_stateA1 & controllable_hmastlock & ~i_hburst0 & ~i_hburst1)
    begin
      reg_stateA1 = 1'b1;
    end
   else if(reg_stateA1 & ~controllable_busreq)
    begin
      reg_stateA1 = 1'b0;
    end

   // Automaton G2: 
   if(~reg_stateG2)
    begin
      if(controllable_hmastlock & ~controllable_nstart & ~i_hburst0 & ~i_hburst1)
       begin
         reg_stateG2 = 1'b1;
       end
    end
   else // if(reg_stateG2)
    begin
      if(~controllable_busreq)
       begin
         reg_stateG2 = 1'b0;
       end
    end

   // Automaton G3: 
   if(~reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2 & controllable_hmastlock & ~controllable_nstart &  ~i_hburst0 & i_hburst1 & ~i_hready)
    begin
      reg_stateG3_0 = 1'b1;
      reg_stateG3_1 = 1'b0;
      reg_stateG3_2 = 1'b0;
    end
   else if(~reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2 & controllable_hmastlock & ~controllable_nstart &  ~i_hburst0 & i_hburst1 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b1;
      reg_stateG3_2 = 1'b0;
    end
   else if(reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b1;
      reg_stateG3_2 = 1'b0;
    end
   else if(~reg_stateG3_0 & reg_stateG3_1 & ~reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b1;
      reg_stateG3_1 = 1'b1;
      reg_stateG3_2 = 1'b0;
    end
   else if(reg_stateG3_0 & reg_stateG3_1 & ~reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b0;
      reg_stateG3_2 = 1'b1;
    end
   else if(~reg_stateG3_0 & ~reg_stateG3_1 & reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b0;
      reg_stateG3_2 = 1'b0;
    end

   // Automaton G10_1: 
   if(~reg_stateG10_1 & ~controllable_hgrant1 & ~i_hbusreq1)
    begin
      reg_stateG10_1 = 1'b1;
    end
   else if(reg_stateG10_1 & i_hbusreq1)
    begin
      reg_stateG10_1 = 1'b0;
    end

   // Automaton G10_2: 
   if(~reg_stateG10_2 & ~controllable_hgrant2 & ~i_hbusreq2)
    begin
      reg_stateG10_2 = 1'b1;
    end
   else if(reg_stateG10_2 & i_hbusreq2)
    begin
      reg_stateG10_2 = 1'b0;
    end

   // Automaton G10_3: 
   if(~reg_stateG10_3 & ~controllable_hgrant3 & ~i_hbusreq3)
    begin
      reg_stateG10_3 = 1'b1;
    end
   else if(reg_stateG10_3 & i_hbusreq3)
    begin
      reg_stateG10_3 = 1'b0;
    end

   // Automaton G10_4: 
   if(~reg_stateG10_4 & ~controllable_hgrant4 & ~i_hbusreq4)
    begin
      reg_stateG10_4 = 1'b1;
    end
   else if(reg_stateG10_4 & i_hbusreq4)
    begin
      reg_stateG10_4 = 1'b0;
    end

   // Automaton G10_5: 
   if(~reg_stateG10_5 & ~controllable_hgrant5 & ~i_hbusreq5)
    begin
      reg_stateG10_5 = 1'b1;
    end
   else if(reg_stateG10_5 & i_hbusreq5)
    begin
      reg_stateG10_5 = 1'b0;
    end

   // Automaton G10_6: 
   if(~reg_stateG10_6 & ~controllable_hgrant6 & ~i_hbusreq6)
    begin
      reg_stateG10_6 = 1'b1;
    end
   else if(reg_stateG10_6 & i_hbusreq6)
    begin
      reg_stateG10_6 = 1'b0;
    end

   // Automaton G10_7: 
   if(~reg_stateG10_7 & ~controllable_hgrant7 & ~i_hbusreq7)
    begin
      reg_stateG10_7 = 1'b1;
    end
   else if(reg_stateG10_7 & i_hbusreq7)
    begin
      reg_stateG10_7 = 1'b0;
    end

   // Automaton G10_8: 
   if(~reg_stateG10_8 & ~controllable_hgrant8 & ~i_hbusreq8)
    begin
      reg_stateG10_8 = 1'b1;
    end
   else if(reg_stateG10_8 & i_hbusreq8)
    begin
      reg_stateG10_8 = 1'b0;
    end

   // Automaton G10_9: 
   if(~reg_stateG10_9 & ~controllable_hgrant9 & ~i_hbusreq9)
    begin
      reg_stateG10_9 = 1'b1;
    end
   else if(reg_stateG10_9 & i_hbusreq9)
    begin
      reg_stateG10_9 = 1'b0;
    end

   // Automaton G10_10: 
   if(~reg_stateG10_10 & ~controllable_hgrant10 & ~i_hbusreq10)
    begin
      reg_stateG10_10 = 1'b1;
    end
   else if(reg_stateG10_10 & i_hbusreq10)
    begin
      reg_stateG10_10 = 1'b0;
    end

   // Automaton G10_11: 
   if(~reg_stateG10_11 & ~controllable_hgrant11 & ~i_hbusreq11)
    begin
      reg_stateG10_11 = 1'b1;
    end
   else if(reg_stateG10_11 & i_hbusreq11)
    begin
      reg_stateG10_11 = 1'b0;
    end

   // Automaton G10_12: 
   if(~reg_stateG10_12 & ~controllable_hgrant12 & ~i_hbusreq12)
    begin
      reg_stateG10_12 = 1'b1;
    end
   else if(reg_stateG10_12 & i_hbusreq12)
    begin
      reg_stateG10_12 = 1'b0;
    end

   // Automaton G10_13: 
   if(~reg_stateG10_13 & ~controllable_hgrant13 & ~i_hbusreq13)
    begin
      reg_stateG10_13 = 1'b1;
    end
   else if(reg_stateG10_13 & i_hbusreq13)
    begin
      reg_stateG10_13 = 1'b0;
    end

   // Automaton G10_14: 
   if(~reg_stateG10_14 & ~controllable_hgrant14 & ~i_hbusreq14)
    begin
      reg_stateG10_14 = 1'b1;
    end
   else if(reg_stateG10_14 & i_hbusreq14)
    begin
      reg_stateG10_14 = 1'b0;
    end

   // Automaton G10_15: 
   if(~reg_stateG10_15 & ~controllable_hgrant15 & ~i_hbusreq15)
    begin
      reg_stateG10_15 = 1'b1;
    end
   else if(reg_stateG10_15 & i_hbusreq15)
    begin
      reg_stateG10_15 = 1'b0;
    end

   // Latching the previous input:
   reg_i_hready =  i_hready;
   reg_i_hbusreq0 =  i_hbusreq0;
   reg_i_hlock0 =  i_hlock0;
   reg_i_hbusreq1 =  i_hbusreq1;
   reg_i_hlock1 =  i_hlock1;
   reg_i_hbusreq2 =  i_hbusreq2;
   reg_i_hlock2 =  i_hlock2;
   reg_i_hbusreq3 =  i_hbusreq3;
   reg_i_hlock3 =  i_hlock3;
   reg_i_hbusreq4 =  i_hbusreq4;
   reg_i_hlock4 =  i_hlock4;
   reg_i_hbusreq5 =  i_hbusreq5;
   reg_i_hlock5 =  i_hlock5;
   reg_i_hbusreq6 =  i_hbusreq6;
   reg_i_hlock6 =  i_hlock6;
   reg_i_hbusreq7 =  i_hbusreq7;
   reg_i_hlock7 =  i_hlock7;
   reg_i_hbusreq8 =  i_hbusreq8;
   reg_i_hlock8 =  i_hlock8;
   reg_i_hbusreq9 =  i_hbusreq9;
   reg_i_hlock9 =  i_hlock9;
   reg_i_hbusreq10 =  i_hbusreq10;
   reg_i_hlock10 =  i_hlock10;
   reg_i_hbusreq11 =  i_hbusreq11;
   reg_i_hlock11 =  i_hlock11;
   reg_i_hbusreq12 =  i_hbusreq12;
   reg_i_hlock12 =  i_hlock12;
   reg_i_hbusreq13 =  i_hbusreq13;
   reg_i_hlock13 =  i_hlock13;
   reg_i_hbusreq14 =  i_hbusreq14;
   reg_i_hlock14 =  i_hlock14;
   reg_i_hbusreq15 =  i_hbusreq15;
   reg_i_hlock15 =  i_hlock15;
   reg_controllable_hmaster0 =  controllable_hmaster0;
   reg_controllable_hmaster1 =  controllable_hmaster1;
   reg_controllable_hmaster2 =  controllable_hmaster2;
   reg_controllable_hmaster3 =  controllable_hmaster3;
   reg_controllable_hmastlock =  controllable_hmastlock;
   reg_controllable_nstart =  controllable_nstart;
   reg_controllable_ndecide =  controllable_ndecide;
   reg_controllable_locked =  controllable_locked;
   reg_controllable_nhgrant0 =  controllable_nhgrant0;
   reg_controllable_hgrant1 =  controllable_hgrant1;
   reg_controllable_hgrant2 =  controllable_hgrant2;
   reg_controllable_hgrant3 =  controllable_hgrant3;
   reg_controllable_hgrant4 =  controllable_hgrant4;
   reg_controllable_hgrant5 =  controllable_hgrant5;
   reg_controllable_hgrant6 =  controllable_hgrant6;
   reg_controllable_hgrant7 =  controllable_hgrant7;
   reg_controllable_hgrant8 =  controllable_hgrant8;
   reg_controllable_hgrant9 =  controllable_hgrant9;
   reg_controllable_hgrant10 =  controllable_hgrant10;
   reg_controllable_hgrant11 =  controllable_hgrant11;
   reg_controllable_hgrant12 =  controllable_hgrant12;
   reg_controllable_hgrant13 =  controllable_hgrant13;
   reg_controllable_hgrant14 =  controllable_hgrant14;
   reg_controllable_hgrant15 =  controllable_hgrant15;
   reg_controllable_busreq =  controllable_busreq;

 end
endmodule

-------------------------------
#!SYNTCOMP
SOLVED_BY : 3/3 [2015-pre-classification], 8/11 [SYNTCOMP2016-RealSeq], 5/6 [SYNTCOMP2016-RealPar]
SOLVED_IN : 178.087 [2015-pre-classification], 139.82 [SYNTCOMP2016-RealSeq], 451.823 [SYNTCOMP2016-RealPar]
REF_SIZE : 0
STATUS : realizable
#.

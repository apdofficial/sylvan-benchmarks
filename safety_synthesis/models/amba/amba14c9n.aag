aag 1544 54 82 1 1408
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106
108
110 1
112 68
114 18
116 92
118 90
120 64
122 20
124 96
126 86
128 60
130 22
132 82
134 54
136 24
138 26
140 104
142 28
144 30
146 32
148 1893
150 1915
152 1939
154 1961
156 1981
158 10
160 48
162 2011
164 2033
166 8
168 2517
170 2523
172 2529
174 2535
176 2557
178 6
180 70
182 2579
184 4
186 2629
188 66
190 2659
192 2681
194 2
196 62
198 2703
200 108
202 56
204 2725
206 36
208 106
210 46
212 34
214 38
216 2747
218 72
220 102
222 44
224 2769
226 100
228 42
230 74
232 2791
234 98
236 40
238 50
240 76
242 2813
244 333
246 78
248 2835
250 80
252 14
254 84
256 3065
258 3071
260 3077
262 3083
264 3089
266 16
268 88
270 12
272 94
1808
274 98 15
276 100 17
278 277 275
280 102 19
282 281 278
284 106 21
286 285 282
288 108 23
290 289 286
292 25 2
294 293 290
296 27 4
298 297 294
300 29 6
302 301 298
304 31 8
306 305 302
308 33 10
310 309 306
312 95 46
314 313 310
316 91 44
318 317 314
320 87 42
322 321 318
324 83 40
326 325 322
328 245 110
330 329 110
332 331 326
334 71 67
336 334 63
338 336 57
340 39 14
342 38 15
344 343 341
346 345 338
348 70 67
350 348 63
352 350 57
354 39 16
356 38 17
358 357 355
360 359 352
362 361 347
364 71 66
366 364 63
368 366 57
370 39 18
372 38 19
374 373 371
376 375 368
378 377 362
380 70 66
382 380 63
384 382 57
386 39 20
388 38 21
390 389 387
392 391 384
394 393 378
396 334 62
398 396 57
400 39 22
402 38 23
404 403 401
406 405 398
408 407 394
410 348 62
412 410 57
414 39 24
416 38 25
418 417 415
420 419 412
422 421 408
424 364 62
426 424 57
428 39 26
430 38 27
432 431 429
434 433 426
436 435 422
438 380 62
440 438 57
442 39 28
444 38 29
446 445 443
448 447 440
450 449 436
452 336 56
454 39 30
456 38 31
458 457 455
460 459 452
462 461 450
464 350 56
466 39 32
468 38 33
470 469 467
472 471 464
474 473 462
476 366 56
478 94 39
480 95 38
482 481 479
484 483 476
486 485 474
488 382 56
490 90 39
492 91 38
494 493 491
496 495 488
498 497 486
500 396 56
502 86 39
504 87 38
506 505 503
508 507 500
510 509 498
512 410 56
514 82 39
516 83 38
518 517 515
520 519 512
522 521 510
524 207 110
526 206 110
528 525 110
530 529 105
532 531 522
534 191 110
536 190 110
538 535 110
540 536 105
542 541 532
544 149 110
546 148 110
548 545 110
550 153 110
552 152 110
554 551 110
556 555 549
558 157 110
560 156 110
562 559 110
564 563 556
566 565 105
568 567 542
570 239 110
572 238 110
574 571 110
576 572 338
578 575 339
580 579 577
582 581 526
584 583 568
586 219 110
588 218 110
590 587 110
592 591 352
594 588 353
596 595 593
598 597 526
600 599 584
602 231 110
604 230 110
606 603 110
608 607 368
610 604 369
612 611 609
614 613 526
616 615 600
618 241 110
620 240 110
622 619 110
624 623 384
626 620 385
628 627 625
630 629 526
632 631 616
634 247 110
636 246 110
638 635 110
640 639 398
642 636 399
644 643 641
646 645 526
648 647 632
650 251 110
652 250 110
654 651 110
656 655 412
658 652 413
660 659 657
662 661 526
664 663 648
666 255 110
668 254 110
670 667 110
672 671 426
674 668 427
676 675 673
678 677 526
680 679 664
682 269 110
684 268 110
686 683 110
688 687 440
690 684 441
692 691 689
694 693 526
696 695 680
698 117 110
700 116 110
702 699 110
704 703 452
706 700 453
708 707 705
710 709 526
712 711 696
714 125 110
716 124 110
718 715 110
720 719 464
722 716 465
724 723 721
726 725 526
728 727 712
730 135 110
732 134 110
734 731 110
736 735 476
738 732 477
740 739 737
742 741 526
744 743 728
746 129 110
748 128 110
750 747 110
752 751 488
754 748 489
756 755 753
758 757 526
760 759 744
762 121 110
764 120 110
766 763 110
768 767 500
770 764 501
772 771 769
774 773 526
776 775 760
778 113 110
780 112 110
782 779 110
784 783 512
786 780 513
788 787 785
790 789 526
792 791 776
794 271 110
796 270 110
798 795 110
800 796 49
802 799 48
804 803 801
806 805 526
808 807 792
810 181 110
812 180 110
814 811 110
816 189 110
818 188 110
820 817 110
822 821 815
824 197 110
826 196 110
828 825 110
830 829 822
832 203 110
834 202 110
836 833 110
838 837 830
840 839 338
842 838 339
844 843 841
846 845 104
848 847 808
850 821 812
852 850 829
854 852 837
856 855 352
858 854 353
860 859 857
862 861 104
864 863 848
866 818 815
868 866 829
870 868 837
872 871 368
874 870 369
876 875 873
878 877 104
880 879 864
882 818 812
884 882 829
886 884 837
888 887 384
890 886 385
892 891 889
894 893 104
896 895 880
898 826 822
900 898 837
902 901 398
904 900 399
906 905 903
908 907 104
910 909 896
912 850 826
914 912 837
916 915 412
918 914 413
920 919 917
922 921 104
924 923 910
926 866 826
928 926 837
930 929 426
932 928 427
934 933 931
936 935 104
938 937 924
940 882 826
942 940 837
944 943 440
946 942 441
948 947 945
950 949 104
952 951 938
954 834 830
956 955 452
958 954 453
960 959 957
962 961 104
964 963 952
966 852 834
968 967 464
970 966 465
972 971 969
974 973 104
976 975 964
978 868 834
980 979 476
982 978 477
984 983 981
986 985 104
988 987 976
990 884 834
992 991 488
994 990 489
996 995 993
998 997 104
1000 999 988
1002 898 834
1004 1003 500
1006 1002 501
1008 1007 1005
1010 1009 104
1012 1011 1000
1014 912 834
1016 1015 512
1018 1014 513
1020 1019 1017
1022 1021 104
1024 1023 1012
1026 161 110
1028 160 110
1030 1027 110
1032 1031 48
1034 1028 49
1036 1035 1033
1038 1037 104
1040 1039 1024
1042 213 110
1044 212 110
1046 1043 110
1048 235 110
1050 234 110
1052 1049 110
1054 1050 1047
1056 1054 51
1058 1056 13
1060 1059 1040
1062 1053 1047
1064 1062 51
1066 1064 12
1068 1067 1060
1070 227 110
1072 226 110
1074 1071 110
1076 1072 1047
1078 1076 72
1080 1078 13
1082 1081 1068
1084 1075 1047
1086 1084 72
1088 1086 12
1090 1089 1082
1092 221 110
1094 220 110
1096 1093 110
1098 1094 1047
1100 1098 74
1102 1100 13
1104 1103 1090
1106 1097 1047
1108 1106 74
1110 1108 12
1112 1111 1104
1114 209 110
1116 208 110
1118 1115 110
1120 1116 1047
1122 1120 76
1124 1122 13
1126 1125 1112
1128 1119 1047
1130 1128 76
1132 1130 12
1134 1133 1126
1136 201 110
1138 200 110
1140 1137 110
1142 1138 1047
1144 1142 78
1146 1144 13
1148 1147 1134
1150 1141 1047
1152 1150 78
1154 1152 12
1156 1155 1148
1158 195 110
1160 194 110
1162 1159 110
1164 1160 1047
1166 1164 80
1168 1166 13
1170 1169 1156
1172 1163 1047
1174 1172 80
1176 1174 12
1178 1177 1170
1180 185 110
1182 184 110
1184 1181 110
1186 1182 1047
1188 1186 84
1190 1188 13
1192 1191 1178
1194 1185 1047
1196 1194 84
1198 1196 12
1200 1199 1192
1202 179 110
1204 178 110
1206 1203 110
1208 1204 1047
1210 1208 88
1212 1210 13
1214 1213 1200
1216 1207 1047
1218 1216 88
1220 1218 12
1222 1221 1214
1224 167 110
1226 166 110
1228 1225 110
1230 1226 1047
1232 1230 92
1234 1232 13
1236 1235 1222
1238 1229 1047
1240 1238 92
1242 1240 12
1244 1243 1236
1246 159 110
1248 158 110
1250 1247 110
1252 1248 1047
1254 1252 96
1256 1254 13
1258 1257 1244
1260 1251 1047
1262 1260 96
1264 1262 12
1266 1265 1258
1268 211 110
1270 210 110
1272 1269 110
1274 1270 1047
1276 1274 54
1278 1276 13
1280 1279 1266
1282 1273 1047
1284 1282 54
1286 1284 12
1288 1287 1280
1290 223 110
1292 222 110
1294 1291 110
1296 1292 1047
1298 1296 60
1300 1298 13
1302 1301 1288
1304 1295 1047
1306 1304 60
1308 1306 12
1310 1309 1302
1312 229 110
1314 228 110
1316 1313 110
1318 1314 1047
1320 1318 64
1322 1320 13
1324 1323 1310
1326 1317 1047
1328 1326 64
1330 1328 12
1332 1331 1324
1334 237 110
1336 236 110
1338 1335 110
1340 1336 1047
1342 1340 68
1344 1342 13
1346 1345 1332
1348 1339 1047
1350 1348 68
1352 1350 12
1354 1353 1346
1356 575 50
1358 572 51
1360 1359 1357
1362 1361 1044
1364 1363 1354
1366 588 73
1368 591 72
1370 1369 1367
1372 1371 1044
1374 1373 1364
1376 604 75
1378 607 74
1380 1379 1377
1382 1381 1044
1384 1383 1374
1386 620 77
1388 623 76
1390 1389 1387
1392 1391 1044
1394 1393 1384
1396 636 79
1398 639 78
1400 1399 1397
1402 1401 1044
1404 1403 1394
1406 652 81
1408 655 80
1410 1409 1407
1412 1411 1044
1414 1413 1404
1416 668 85
1418 671 84
1420 1419 1417
1422 1421 1044
1424 1423 1414
1426 684 89
1428 687 88
1430 1429 1427
1432 1431 1044
1434 1433 1424
1436 700 93
1438 703 92
1440 1439 1437
1442 1441 1044
1444 1443 1434
1446 716 97
1448 719 96
1450 1449 1447
1452 1451 1044
1454 1453 1444
1456 732 55
1458 735 54
1460 1459 1457
1462 1461 1044
1464 1463 1454
1466 748 61
1468 751 60
1470 1469 1467
1472 1471 1044
1474 1473 1464
1476 764 65
1478 767 64
1480 1479 1477
1482 1481 1044
1484 1483 1474
1486 780 69
1488 783 68
1490 1489 1487
1492 1491 1044
1494 1493 1484
1496 796 13
1498 799 12
1500 1499 1497
1502 1501 1044
1504 1503 1494
1506 183 110
1508 182 110
1510 1507 110
1512 72 17
1514 1512 1508
1516 1515 1504
1518 193 110
1520 192 110
1522 1519 110
1524 74 19
1526 1524 1520
1528 1527 1516
1530 199 110
1532 198 110
1534 1531 110
1536 76 21
1538 1536 1532
1540 1539 1528
1542 205 110
1544 204 110
1546 1543 110
1548 78 23
1550 1548 1544
1552 1551 1540
1554 217 110
1556 216 110
1558 1555 110
1560 80 25
1562 1560 1556
1564 1563 1552
1566 225 110
1568 224 110
1570 1567 110
1572 84 27
1574 1572 1568
1576 1575 1564
1578 233 110
1580 232 110
1582 1579 110
1584 88 29
1586 1584 1580
1588 1587 1576
1590 243 110
1592 242 110
1594 1591 110
1596 92 31
1598 1596 1592
1600 1599 1588
1602 249 110
1604 248 110
1606 1603 110
1608 96 33
1610 1608 1604
1612 1611 1600
1614 177 110
1616 176 110
1618 1615 110
1620 95 54
1622 1620 1616
1624 1623 1612
1626 165 110
1628 164 110
1630 1627 110
1632 91 60
1634 1632 1628
1636 1635 1624
1638 155 110
1640 154 110
1642 1639 110
1644 87 64
1646 1644 1640
1648 1647 1636
1650 151 110
1652 150 110
1654 1651 110
1656 83 68
1658 1656 1652
1660 1659 1648
1662 253 110
1664 1663 110
1666 267 110
1668 1667 110
1670 1669 1665
1672 115 110
1674 1673 110
1676 1675 1670
1678 123 110
1680 1679 110
1682 1681 1676
1684 131 110
1686 1685 110
1688 1687 1682
1690 137 110
1692 1691 110
1694 1693 1688
1696 139 110
1698 1697 110
1700 1699 1694
1702 143 110
1704 1703 110
1706 1705 1700
1708 145 110
1710 1709 110
1712 1711 1706
1714 147 110
1716 1715 110
1718 1717 1712
1720 273 110
1722 1721 110
1724 1723 1718
1726 119 110
1728 1727 110
1730 1729 1724
1732 127 110
1734 1733 110
1736 1735 1730
1738 133 110
1740 1739 110
1742 1741 1736
1744 1742 1047
1746 1744 50
1748 1747 1660
1750 175 110
1752 174 110
1754 1751 110
1756 173 110
1758 172 110
1760 1757 110
1762 171 110
1764 170 110
1766 1763 110
1768 169 110
1770 168 110
1772 1769 110
1774 1773 1767
1776 1774 1761
1778 1776 1755
1780 1779 1754
1782 1780 1777
1784 1772 1764
1786 1785 1775
1788 1775 1758
1790 1789 1777
1792 1777 1755
1794 1776 1752
1796 1795 1793
1798 1786 1772
1800 1798 1790
1802 1800 1796
1804 1803 1783
1806 1804 1748
1808 1807 332
1810 564 48
1812 1810 105
1814 1812 59
1816 1814 52
1818 1816 37
1820 1816 36
1822 555 546
1824 1822 563
1826 1824 36
1828 552 549
1830 1828 563
1832 1830 36
1834 552 546
1836 1834 563
1838 1836 36
1840 560 556
1842 1840 36
1844 1820 1819
1846 1845 1819
1848 1821 1819
1850 1848 1826
1852 1851 1846
1854 1848 1827
1856 1854 1832
1858 1857 1852
1860 1854 1833
1862 1860 1838
1864 1863 1858
1866 1860 1839
1868 1866 1842
1870 1869 1864
1872 1843 546
1874 1872 1839
1876 1874 1833
1878 1877 1833
1880 1879 1827
1882 1880 1821
1884 1882 1819
1886 1885 1819
1888 1887 1871
1890 1870 546
1892 1891 1889
1894 1655 69
1896 1894 83
1898 1652 82
1900 1898 1897
1902 1901 1897
1904 1899 1652
1906 1904 1897
1908 1907 1897
1910 1909 1903
1912 1902 1652
1914 1913 1911
1916 1843 552
1918 1916 1839
1920 1918 1833
1922 1921 1833
1924 1923 1827
1926 1925 1827
1928 1927 1821
1930 1929 1821
1932 1931 1819
1934 1932 1871
1936 1870 552
1938 1937 1935
1940 1643 65
1942 1940 87
1944 1640 86
1946 1944 1943
1948 1947 1943
1950 1945 1640
1952 1950 1943
1954 1953 1943
1956 1955 1949
1958 1948 1640
1960 1959 1957
1962 1843 560
1964 1962 1839
1966 1965 1839
1968 1967 1833
1970 1968 1827
1972 1970 1821
1974 1972 1819
1976 1974 1871
1978 1870 560
1980 1979 1977
1982 163 110
1984 162 110
1986 1983 110
1988 1987 48
1990 1988 59
1992 1990 53
1994 1984 39
1996 1994 1993
1998 1997 1993
2000 1995 1984
2002 2000 1993
2004 2003 1993
2006 2005 1999
2008 1998 1984
2010 2009 2007
2012 1631 61
2014 2012 91
2016 1628 90
2018 2016 2015
2020 2019 2015
2022 2017 1628
2024 2022 2015
2026 2025 2015
2028 2027 2021
2030 2020 1628
2032 2031 2029
2034 257 110
2036 256 110
2038 2035 110
2040 259 110
2042 258 110
2044 2041 110
2046 261 110
2048 260 110
2050 2047 110
2052 263 110
2054 262 110
2056 2053 110
2058 264 110
2060 2043 2037
2062 2060 2049
2064 2062 2055
2066 2064 2059
2068 2066 539
2070 2043 2038
2072 2070 2049
2074 2072 2055
2076 2074 2059
2078 2076 564
2080 2044 2037
2082 2080 2049
2084 2082 2055
2086 2084 2059
2088 339 14
2090 2089 2086
2092 2044 2038
2094 2092 2049
2096 2094 2055
2098 2096 2059
2100 353 16
2102 2101 2098
2104 2060 2050
2106 2104 2055
2108 2106 2059
2110 369 18
2112 2111 2108
2114 2070 2050
2116 2114 2055
2118 2116 2059
2120 385 20
2122 2121 2118
2124 2080 2050
2126 2124 2055
2128 2126 2059
2130 399 22
2132 2131 2128
2134 2092 2050
2136 2134 2055
2138 2136 2059
2140 413 24
2142 2141 2138
2144 2062 2056
2146 2144 2059
2148 427 26
2150 2149 2146
2152 2072 2056
2154 2152 2059
2156 441 28
2158 2157 2154
2160 2082 2056
2162 2160 2059
2164 453 30
2166 2165 2162
2168 2094 2056
2170 2168 2059
2172 465 32
2174 2173 2170
2176 2104 2056
2178 2176 2059
2180 477 94
2182 2181 2178
2184 2114 2056
2186 2184 2059
2188 489 90
2190 2189 2186
2192 2124 2056
2194 2192 2059
2196 501 86
2198 2197 2194
2200 2134 2056
2202 2200 2059
2204 513 82
2206 2205 2202
2208 187 110
2210 186 110
2212 2209 110
2214 2213 1987
2216 2210 36
2218 2078 2069
2220 2219 2069
2222 2079 2069
2224 2222 2090
2226 2225 2220
2228 2222 2091
2230 2228 2102
2232 2231 2226
2234 2228 2103
2236 2234 2112
2238 2237 2232
2240 2234 2113
2242 2240 2122
2244 2243 2238
2246 2240 2123
2248 2246 2132
2250 2249 2244
2252 2246 2133
2254 2252 2142
2256 2255 2250
2258 2252 2143
2260 2258 2150
2262 2261 2256
2264 2258 2151
2266 2264 2158
2268 2267 2262
2270 2264 2159
2272 2270 2166
2274 2273 2268
2276 2270 2167
2278 2276 2174
2280 2279 2274
2282 2276 2175
2284 2282 2182
2286 2285 2280
2288 2282 2183
2290 2288 2190
2292 2291 2286
2294 2288 2191
2296 2294 2198
2298 2297 2292
2300 2294 2199
2302 2300 2206
2304 2303 2298
2306 2300 2207
2308 2306 2215
2310 2308 2216
2312 2311 2304
2314 2216 1773
2316 2217 1770
2318 2317 2315
2320 2214 1770
2322 2319 2215
2324 2323 2321
2326 2325 2207
2328 2326 2199
2330 2328 2191
2332 2330 2183
2334 2332 2175
2336 2334 2167
2338 2336 2159
2340 2338 2151
2342 2340 2143
2344 2342 2133
2346 2344 2123
2348 2346 2113
2350 2348 2103
2352 2350 2091
2354 2352 2079
2356 2354 2069
2358 1770 1767
2360 1771 1764
2362 2361 2359
2364 2363 2216
2366 2217 1764
2368 2367 2365
2370 2214 1764
2372 2369 2215
2374 2373 2371
2376 2375 2207
2378 2376 2199
2380 2378 2191
2382 2380 2183
2384 2382 2175
2386 2384 2167
2388 2386 2159
2390 2388 2151
2392 2390 2143
2394 2392 2133
2396 2394 2123
2398 2396 2113
2400 2398 2103
2402 2400 2091
2404 2402 2079
2406 2404 2069
2408 1770 1764
2410 2408 1761
2412 2409 1758
2414 2413 2411
2416 2415 2216
2418 2217 1758
2420 2419 2417
2422 2214 1758
2424 2421 2215
2426 2425 2423
2428 2427 2207
2430 2428 2199
2432 2430 2191
2434 2432 2183
2436 2434 2175
2438 2436 2167
2440 2438 2159
2442 2440 2151
2444 2442 2143
2446 2444 2133
2448 2446 2123
2450 2448 2113
2452 2450 2103
2454 2452 2091
2456 2454 2079
2458 2456 2069
2460 2408 1758
2462 2460 1755
2464 2461 1752
2466 2465 2463
2468 2467 2216
2470 2217 1752
2472 2471 2469
2474 2214 1752
2476 2473 2215
2478 2477 2475
2480 2479 2207
2482 2480 2199
2484 2482 2191
2486 2484 2183
2488 2486 2175
2490 2488 2167
2492 2490 2159
2494 2492 2151
2496 2494 2143
2498 2496 2133
2500 2498 2123
2502 2500 2113
2504 2502 2103
2506 2504 2091
2508 2506 2079
2510 2508 2069
2512 2356 2313
2514 2312 1770
2516 2515 2513
2518 2406 2313
2520 2312 1764
2522 2521 2519
2524 2458 2313
2526 2312 1758
2528 2527 2525
2530 2510 2313
2532 2312 1752
2534 2533 2531
2536 1619 55
2538 2536 95
2540 1616 94
2542 2540 2539
2544 2543 2539
2546 2541 1616
2548 2546 2539
2550 2549 2539
2552 2551 2545
2554 2544 1616
2556 2555 2553
2558 1511 73
2560 2558 17
2562 1508 16
2564 2562 2561
2566 2565 2561
2568 2563 1508
2570 2568 2561
2572 2571 2561
2574 2573 2567
2576 2566 1508
2578 2577 2575
2580 2306 2214
2582 2581 2304
2584 2582 2311
2586 2217 2210
2588 2586 2215
2590 2589 2215
2592 2591 2207
2594 2592 2199
2596 2594 2191
2598 2596 2183
2600 2598 2175
2602 2600 2167
2604 2602 2159
2606 2604 2151
2608 2606 2143
2610 2608 2133
2612 2610 2123
2614 2612 2113
2616 2614 2103
2618 2616 2091
2620 2618 2079
2622 2620 2069
2624 2622 2585
2626 2584 2210
2628 2627 2625
2630 105 48
2632 2630 59
2634 2632 53
2636 2634 539
2638 536 39
2640 2639 2637
2642 2635 536
2644 2643 2635
2646 536 38
2648 2645 539
2650 2646 536
2652 2651 2649
2654 2653 2641
2656 2640 536
2658 2657 2655
2660 1523 75
2662 2660 19
2664 1520 18
2666 2664 2663
2668 2667 2663
2670 2665 1520
2672 2670 2663
2674 2673 2663
2676 2675 2669
2678 2668 1520
2680 2679 2677
2682 1535 77
2684 2682 21
2686 1532 20
2688 2686 2685
2690 2689 2685
2692 2687 1532
2694 2692 2685
2696 2695 2685
2698 2697 2691
2700 2690 1532
2702 2701 2699
2704 1547 79
2706 2704 23
2708 1544 22
2710 2708 2707
2712 2711 2707
2714 2709 1544
2716 2714 2707
2718 2717 2707
2720 2719 2713
2722 2712 1544
2724 2723 2721
2726 1559 81
2728 2726 25
2730 1556 24
2732 2730 2729
2734 2733 2729
2736 2731 1556
2738 2736 2729
2740 2739 2729
2742 2741 2735
2744 2734 1556
2746 2745 2743
2748 1571 85
2750 2748 27
2752 1568 26
2754 2752 2751
2756 2755 2751
2758 2753 1568
2760 2758 2751
2762 2761 2751
2764 2763 2757
2766 2756 1568
2768 2767 2765
2770 1583 89
2772 2770 29
2774 1580 28
2776 2774 2773
2778 2777 2773
2780 2775 1580
2782 2780 2773
2784 2783 2773
2786 2785 2779
2788 2778 1580
2790 2789 2787
2792 1595 93
2794 2792 31
2796 1592 30
2798 2796 2795
2800 2799 2795
2802 2797 1592
2804 2802 2795
2806 2805 2795
2808 2807 2801
2810 2800 1592
2812 2811 2809
2814 1607 97
2816 2814 33
2818 1604 32
2820 2818 2817
2822 2821 2817
2824 2819 1604
2826 2824 2817
2828 2827 2817
2830 2829 2823
2832 2822 1604
2834 2833 2831
2836 2207 2036
2838 2836 2199
2840 2839 2199
2842 2841 2191
2844 2842 2183
2846 2845 2183
2848 2847 2175
2850 2848 2167
2852 2851 2167
2854 2853 2159
2856 2854 2151
2858 2857 2151
2860 2859 2143
2862 2860 2133
2864 2863 2133
2866 2865 2123
2868 2866 2113
2870 2869 2113
2872 2871 2103
2874 2872 2091
2876 2875 2091
2878 2877 2079
2880 2878 2069
2882 2881 2069
2884 2207 2042
2886 2884 2199
2888 2887 2199
2890 2889 2191
2892 2891 2191
2894 2893 2183
2896 2894 2175
2898 2896 2167
2900 2899 2167
2902 2901 2159
2904 2903 2159
2906 2905 2151
2908 2906 2143
2910 2908 2133
2912 2911 2133
2914 2913 2123
2916 2915 2123
2918 2917 2113
2920 2918 2103
2922 2920 2091
2924 2923 2091
2926 2925 2079
2928 2927 2079
2930 2929 2069
2932 2207 2048
2934 2932 2199
2936 2935 2199
2938 2937 2191
2940 2939 2191
2942 2941 2183
2944 2943 2183
2946 2945 2175
2948 2947 2175
2950 2949 2167
2952 2950 2159
2954 2952 2151
2956 2954 2143
2958 2956 2133
2960 2959 2133
2962 2961 2123
2964 2963 2123
2966 2965 2113
2968 2967 2113
2970 2969 2103
2972 2971 2103
2974 2973 2091
2976 2974 2079
2978 2976 2069
2980 2207 2054
2982 2980 2199
2984 2983 2199
2986 2985 2191
2988 2987 2191
2990 2989 2183
2992 2991 2183
2994 2993 2175
2996 2995 2175
2998 2997 2167
3000 2999 2167
3002 3001 2159
3004 3003 2159
3006 3005 2151
3008 3007 2151
3010 3009 2143
3012 3011 2143
3014 3013 2133
3016 3014 2123
3018 3016 2113
3020 3018 2103
3022 3020 2091
3024 3022 2079
3026 3024 2069
3028 2207 2058
3030 3028 2199
3032 3030 2191
3034 3032 2183
3036 3034 2175
3038 3036 2167
3040 3038 2159
3042 3040 2151
3044 3042 2143
3046 3044 2133
3048 3046 2123
3050 3048 2113
3052 3050 2103
3054 3052 2091
3056 3054 2079
3058 3056 2069
3060 2883 2305
3062 2304 2036
3064 3063 3061
3066 2930 2305
3068 2304 2042
3070 3069 3067
3072 2978 2305
3074 2304 2048
3076 3075 3073
3078 3026 2305
3080 2304 2054
3082 3081 3079
3084 3058 2305
3086 2304 2058
3088 3087 3085
i0 i_hlock5
i1 i_hlock6
i2 i_hlock7
i3 i_hlock8
i4 i_hlock9
i5 controllable_locked
i6 i_hbusreq0
i7 i_hbusreq1
i8 i_hbusreq2
i9 i_hbusreq3
i10 i_hbusreq4
i11 i_hbusreq5
i12 i_hbusreq6
i13 i_hbusreq7
i14 i_hbusreq8
i15 i_hbusreq9
i16 controllable_ndecide
i17 i_hready
i18 controllable_busreq
i19 i_hlock13
i20 i_hlock12
i21 i_hlock11
i22 i_hlock10
i23 controllable_hmastlock
i24 controllable_nhgrant0
i25 i_hburst1
i26 controllable_hgrant10
i27 controllable_hmaster3
i28 i_hburst0
i29 controllable_hgrant11
i30 controllable_hmaster2
i31 controllable_hgrant12
i32 controllable_hmaster1
i33 controllable_hgrant13
i34 controllable_hmaster0
i35 controllable_hgrant1
i36 controllable_hgrant2
i37 controllable_hgrant3
i38 controllable_hgrant4
i39 controllable_hgrant5
i40 i_hbusreq13
i41 controllable_hgrant6
i42 i_hbusreq12
i43 controllable_hgrant7
i44 i_hbusreq11
i45 controllable_hgrant8
i46 i_hbusreq10
i47 controllable_hgrant9
i48 i_hlock0
i49 i_hlock1
i50 i_hlock2
i51 controllable_nstart
i52 i_hlock3
i53 i_hlock4
l0 n111
l1 reg_controllable_hgrant13_out
l2 reg_i_hbusreq2_out
l3 reg_controllable_hgrant8_out
l4 reg_i_hbusreq11_out
l5 reg_controllable_hgrant12_out
l6 reg_i_hbusreq3_out
l7 reg_controllable_hgrant9_out
l8 reg_i_hbusreq12_out
l9 reg_controllable_hgrant11_out
l10 reg_i_hbusreq4_out
l11 reg_i_hbusreq13_out
l12 reg_controllable_hgrant10_out
l13 reg_i_hbusreq5_out
l14 reg_i_hbusreq6_out
l15 reg_controllable_nstart_out
l16 reg_i_hbusreq7_out
l17 reg_i_hbusreq8_out
l18 reg_i_hbusreq9_out
l19 reg_stateG3_0_out
l20 reg_stateG10_13_out
l21 reg_stateG3_1_out
l22 reg_stateG10_12_out
l23 reg_stateG3_2_out
l24 reg_i_hlock9_out
l25 reg_controllable_hmastlock_out
l26 reg_stateA1_out
l27 reg_stateG10_11_out
l28 reg_i_hlock8_out
l29 fair_cnt<0>_out
l30 fair_cnt<1>_out
l31 fair_cnt<2>_out
l32 fair_cnt<3>_out
l33 reg_stateG10_10_out
l34 reg_i_hlock7_out
l35 reg_controllable_hmaster0_out
l36 reg_stateG10_1_out
l37 reg_i_hlock6_out
l38 next_env_fair_out
l39 reg_controllable_hmaster1_out
l40 reg_stateG2_out
l41 reg_stateG10_2_out
l42 reg_i_hlock5_out
l43 reg_controllable_hmaster2_out
l44 reg_stateG10_3_out
l45 reg_i_hlock4_out
l46 reg_controllable_hmaster3_out
l47 reg_stateG10_4_out
l48 reg_i_hready_out
l49 reg_i_hlock3_out
l50 reg_i_hlock10_out
l51 reg_controllable_ndecide_out
l52 reg_controllable_busreq_out
l53 reg_stateG10_5_out
l54 reg_controllable_hgrant1_out
l55 reg_i_hlock2_out
l56 reg_i_hlock11_out
l57 reg_stateG10_6_out
l58 reg_i_hlock1_out
l59 reg_i_hlock12_out
l60 reg_controllable_hgrant2_out
l61 reg_stateG10_7_out
l62 reg_i_hlock0_out
l63 reg_i_hlock13_out
l64 reg_controllable_nhgrant0_out
l65 reg_controllable_hgrant3_out
l66 reg_stateG10_8_out
l67 env_safe_err_happened_out
l68 reg_controllable_hgrant4_out
l69 reg_stateG10_9_out
l70 reg_controllable_hgrant5_out
l71 reg_i_hbusreq0_out
l72 reg_controllable_hgrant6_out
l73 next_sys_fair<0>_out
l74 next_sys_fair<1>_out
l75 next_sys_fair<2>_out
l76 next_sys_fair<3>_out
l77 next_sys_fair<4>_out
l78 reg_i_hbusreq1_out
l79 reg_controllable_hgrant7_out
l80 reg_controllable_locked_out
l81 reg_i_hbusreq10_out
o0 o_err
c
amba_14_new_9
This file was written by ABC on Tue May  5 17:01:18 2015
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv amba14c9.v   ---gives--> amba14c9.mv
> abc -c "read_blif_mv amba14c9.mv; write_aiger -s amba14c9n.aig"   ---gives--> amba14c9n.aig
> aigtoaig amba14c9n.aig amba14c9n.aag   ---gives--> amba14c9n.aag (this file)
Content of amba14c9.v:
module amba_14_new_9(
        o_err,
        i_clk,
        i_hready,
        i_hbusreq0,
        i_hlock0,
        i_hbusreq1,
        i_hlock1,
        i_hbusreq2,
        i_hlock2,
        i_hbusreq3,
        i_hlock3,
        i_hbusreq4,
        i_hlock4,
        i_hbusreq5,
        i_hlock5,
        i_hbusreq6,
        i_hlock6,
        i_hbusreq7,
        i_hlock7,
        i_hbusreq8,
        i_hlock8,
        i_hbusreq9,
        i_hlock9,
        i_hbusreq10,
        i_hlock10,
        i_hbusreq11,
        i_hlock11,
        i_hbusreq12,
        i_hlock12,
        i_hbusreq13,
        i_hlock13,
        i_hburst0,
        i_hburst1,
        controllable_hmaster0,
        controllable_hmaster1,
        controllable_hmaster2,
        controllable_hmaster3,
        controllable_hmastlock,
        controllable_nstart,
        controllable_ndecide,
        controllable_locked,
        controllable_nhgrant0,
        controllable_hgrant1,
        controllable_hgrant2,
        controllable_hgrant3,
        controllable_hgrant4,
        controllable_hgrant5,
        controllable_hgrant6,
        controllable_hgrant7,
        controllable_hgrant8,
        controllable_hgrant9,
        controllable_hgrant10,
        controllable_hgrant11,
        controllable_hgrant12,
        controllable_hgrant13,
        controllable_busreq);

input i_clk;
input i_hready;
input i_hbusreq0;
input i_hlock0;
input i_hbusreq1;
input i_hlock1;
input i_hbusreq2;
input i_hlock2;
input i_hbusreq3;
input i_hlock3;
input i_hbusreq4;
input i_hlock4;
input i_hbusreq5;
input i_hlock5;
input i_hbusreq6;
input i_hlock6;
input i_hbusreq7;
input i_hlock7;
input i_hbusreq8;
input i_hlock8;
input i_hbusreq9;
input i_hlock9;
input i_hbusreq10;
input i_hlock10;
input i_hbusreq11;
input i_hlock11;
input i_hbusreq12;
input i_hlock12;
input i_hbusreq13;
input i_hlock13;
input i_hburst0;
input i_hburst1;
input controllable_hmaster0;
input controllable_hmaster1;
input controllable_hmaster2;
input controllable_hmaster3;
input controllable_hmastlock;
input controllable_nstart;
input controllable_ndecide;
input controllable_locked;
input controllable_nhgrant0;
input controllable_hgrant1;
input controllable_hgrant2;
input controllable_hgrant3;
input controllable_hgrant4;
input controllable_hgrant5;
input controllable_hgrant6;
input controllable_hgrant7;
input controllable_hgrant8;
input controllable_hgrant9;
input controllable_hgrant10;
input controllable_hgrant11;
input controllable_hgrant12;
input controllable_hgrant13;
input controllable_busreq;
output o_err;

reg reg_i_hready;
reg reg_i_hbusreq0;
reg reg_i_hlock0;
reg reg_i_hbusreq1;
reg reg_i_hlock1;
reg reg_i_hbusreq2;
reg reg_i_hlock2;
reg reg_i_hbusreq3;
reg reg_i_hlock3;
reg reg_i_hbusreq4;
reg reg_i_hlock4;
reg reg_i_hbusreq5;
reg reg_i_hlock5;
reg reg_i_hbusreq6;
reg reg_i_hlock6;
reg reg_i_hbusreq7;
reg reg_i_hlock7;
reg reg_i_hbusreq8;
reg reg_i_hlock8;
reg reg_i_hbusreq9;
reg reg_i_hlock9;
reg reg_i_hbusreq10;
reg reg_i_hlock10;
reg reg_i_hbusreq11;
reg reg_i_hlock11;
reg reg_i_hbusreq12;
reg reg_i_hlock12;
reg reg_i_hbusreq13;
reg reg_i_hlock13;
reg reg_controllable_hmaster0;
reg reg_controllable_hmaster1;
reg reg_controllable_hmaster2;
reg reg_controllable_hmaster3;
reg reg_controllable_hmastlock;
reg reg_controllable_nstart;
reg reg_controllable_ndecide;
reg reg_controllable_locked;
reg reg_controllable_nhgrant0;
reg reg_controllable_hgrant1;
reg reg_controllable_hgrant2;
reg reg_controllable_hgrant3;
reg reg_controllable_hgrant4;
reg reg_controllable_hgrant5;
reg reg_controllable_hgrant6;
reg reg_controllable_hgrant7;
reg reg_controllable_hgrant8;
reg reg_controllable_hgrant9;
reg reg_controllable_hgrant10;
reg reg_controllable_hgrant11;
reg reg_controllable_hgrant12;
reg reg_controllable_hgrant13;
reg reg_controllable_busreq;
reg reg_stateA1;
reg reg_stateG2;
reg reg_stateG3_0;
reg reg_stateG3_1;
reg reg_stateG3_2;
reg reg_stateG10_1;
reg reg_stateG10_2;
reg reg_stateG10_3;
reg reg_stateG10_4;
reg reg_stateG10_5;
reg reg_stateG10_6;
reg reg_stateG10_7;
reg reg_stateG10_8;
reg reg_stateG10_9;
reg reg_stateG10_10;
reg reg_stateG10_11;
reg reg_stateG10_12;
reg reg_stateG10_13;
reg env_safe_err_happened;
reg next_env_fair;
reg [3:0] fair_cnt;
reg [4:0] next_sys_fair;

wire env_safe_err0;
wire env_safe_err1;
wire env_safe_err2;
wire env_safe_err3;
wire env_safe_err4;
wire env_safe_err5;
wire env_safe_err6;
wire env_safe_err7;
wire env_safe_err8;
wire env_safe_err9;
wire env_safe_err10;
wire env_safe_err11;
wire env_safe_err12;
wire env_safe_err13;
wire env_safe_err;

wire sys_safe_err0;
wire sys_safe_err1;
wire sys_safe_err2;
wire sys_safe_err3;
wire sys_safe_err4;
wire sys_safe_err5;
wire sys_safe_err6;
wire sys_safe_err7;
wire sys_safe_err8;
wire sys_safe_err9;
wire sys_safe_err10;
wire sys_safe_err11;
wire sys_safe_err12;
wire sys_safe_err13;
wire sys_safe_err14;
wire sys_safe_err15;
wire sys_safe_err16;
wire sys_safe_err17;
wire sys_safe_err18;
wire sys_safe_err19;
wire sys_safe_err20;
wire sys_safe_err21;
wire sys_safe_err22;
wire sys_safe_err23;
wire sys_safe_err24;
wire sys_safe_err25;
wire sys_safe_err26;
wire sys_safe_err27;
wire sys_safe_err28;
wire sys_safe_err29;
wire sys_safe_err30;
wire sys_safe_err31;
wire sys_safe_err32;
wire sys_safe_err33;
wire sys_safe_err34;
wire sys_safe_err35;
wire sys_safe_err36;
wire sys_safe_err37;
wire sys_safe_err38;
wire sys_safe_err39;
wire sys_safe_err40;
wire sys_safe_err41;
wire sys_safe_err42;
wire sys_safe_err43;
wire sys_safe_err44;
wire sys_safe_err45;
wire sys_safe_err46;
wire sys_safe_err47;
wire sys_safe_err48;
wire sys_safe_err49;
wire sys_safe_err50;
wire sys_safe_err51;
wire sys_safe_err52;
wire sys_safe_err53;
wire sys_safe_err54;
wire sys_safe_err55;
wire sys_safe_err56;
wire sys_safe_err57;
wire sys_safe_err58;
wire sys_safe_err59;
wire sys_safe_err60;
wire sys_safe_err61;
wire sys_safe_err62;
wire sys_safe_err63;
wire sys_safe_err64;
wire sys_safe_err65;
wire sys_safe_err66;
wire sys_safe_err67;
wire sys_safe_err68;
wire sys_safe_err69;
wire sys_safe_err70;
wire sys_safe_err71;
wire sys_safe_err72;
wire sys_safe_err73;
wire sys_safe_err74;
wire sys_safe_err75;
wire sys_safe_err76;
wire sys_safe_err77;
wire sys_safe_err78;
wire sys_safe_err79;
wire sys_safe_err80;
wire sys_safe_err81;
wire sys_safe_err82;
wire sys_safe_err83;
wire sys_safe_err84;
wire sys_safe_err85;
wire sys_safe_err86;
wire sys_safe_err87;
wire sys_safe_err88;
wire sys_safe_err89;
wire sys_safe_err90;
wire sys_safe_err91;
wire sys_safe_err92;
wire sys_safe_err93;
wire sys_safe_err94;
wire sys_safe_err95;
wire sys_safe_err96;
wire sys_safe_err97;
wire sys_safe_err98;
wire sys_safe_err99;
wire sys_safe_err100;
wire sys_safe_err101;
wire sys_safe_err102;
wire sys_safe_err103;
wire sys_safe_err;

wire env_fair0;
wire env_fair1;

wire sys_fair0;
wire sys_fair1;
wire sys_fair2;
wire sys_fair3;
wire sys_fair4;
wire sys_fair5;
wire sys_fair6;
wire sys_fair7;
wire sys_fair8;
wire sys_fair9;
wire sys_fair10;
wire sys_fair11;
wire sys_fair12;
wire sys_fair13;
wire sys_fair14;
wire sys_fair15;
wire fair_err;
wire o_err;

// =============================================================
//                        ENV_TRANSITION:
// =============================================================
// Assumption 3:
// G( hlock0=1 -> hbusreq0=1 );
assign env_safe_err0 =  ~(~ i_hlock0 | i_hbusreq0);

// Assumption 3:
// G( hlock1=1 -> hbusreq1=1 );
assign env_safe_err1 =  ~(~ i_hlock1 | i_hbusreq1);

// Assumption 3:
// G( hlock2=1 -> hbusreq2=1 );
assign env_safe_err2 =  ~(~ i_hlock2 | i_hbusreq2);

// Assumption 3:
// G( hlock3=1 -> hbusreq3=1 );
assign env_safe_err3 =  ~(~ i_hlock3 | i_hbusreq3);

// Assumption 3:
// G( hlock4=1 -> hbusreq4=1 );
assign env_safe_err4 =  ~(~ i_hlock4 | i_hbusreq4);

// Assumption 3:
// G( hlock5=1 -> hbusreq5=1 );
assign env_safe_err5 =  ~(~ i_hlock5 | i_hbusreq5);

// Assumption 3:
// G( hlock6=1 -> hbusreq6=1 );
assign env_safe_err6 =  ~(~ i_hlock6 | i_hbusreq6);

// Assumption 3:
// G( hlock7=1 -> hbusreq7=1 );
assign env_safe_err7 =  ~(~ i_hlock7 | i_hbusreq7);

// Assumption 3:
// G( hlock8=1 -> hbusreq8=1 );
assign env_safe_err8 =  ~(~ i_hlock8 | i_hbusreq8);

// Assumption 3:
// G( hlock9=1 -> hbusreq9=1 );
assign env_safe_err9 =  ~(~ i_hlock9 | i_hbusreq9);

// Assumption 3:
// G( hlock10=1 -> hbusreq10=1 );
assign env_safe_err10 =  ~(~ i_hlock10 | i_hbusreq10);

// Assumption 3:
// G( hlock11=1 -> hbusreq11=1 );
assign env_safe_err11 =  ~(~ i_hlock11 | i_hbusreq11);

// Assumption 3:
// G( hlock12=1 -> hbusreq12=1 );
assign env_safe_err12 =  ~(~ i_hlock12 | i_hbusreq12);

// Assumption 3:
// G( hlock13=1 -> hbusreq13=1 );
assign env_safe_err13 =  ~(~ i_hlock13 | i_hbusreq13);

// collecting together the safety error bits:
assign env_safe_err = env_safe_err0 |
                      env_safe_err1 |
                      env_safe_err2 |
                      env_safe_err3 |
                      env_safe_err4 |
                      env_safe_err5 |
                      env_safe_err6 |
                      env_safe_err7 |
                      env_safe_err8 |
                      env_safe_err9 |
                      env_safe_err10 |
                      env_safe_err11 |
                      env_safe_err12 |
                      env_safe_err13;

// =============================================================
//                        SYS_TRANSITION:
// =============================================================
// G((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0) -> (hbusreq0=0 <-> busreq=0));
assign sys_safe_err0 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq0 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0) -> (hbusreq1=0 <-> busreq=0));
assign sys_safe_err1 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq1 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0) -> (hbusreq2=0 <-> busreq=0));
assign sys_safe_err2 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq2 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0) -> (hbusreq3=0 <-> busreq=0));
assign sys_safe_err3 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq3 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0) -> (hbusreq4=0 <-> busreq=0));
assign sys_safe_err4 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq4 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0) -> (hbusreq5=0 <-> busreq=0));
assign sys_safe_err5 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq5 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0) -> (hbusreq6=0 <-> busreq=0));
assign sys_safe_err6 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq6 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0) -> (hbusreq7=0 <-> busreq=0));
assign sys_safe_err7 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq7 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1) -> (hbusreq8=0 <-> busreq=0));
assign sys_safe_err8 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq8 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1) -> (hbusreq9=0 <-> busreq=0));
assign sys_safe_err9 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq9 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1) -> (hbusreq10=0 <-> busreq=0));
assign sys_safe_err10 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq10 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1) -> (hbusreq11=0 <-> busreq=0));
assign sys_safe_err11 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq11 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1) -> (hbusreq12=0 <-> busreq=0));
assign sys_safe_err12 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 )|(~i_hbusreq12 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1) -> (hbusreq13=0 <-> busreq=0));
assign sys_safe_err13 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 )|(~i_hbusreq13 ^~ (~controllable_busreq)));

// Guarantee 1:
// G((hready=0) -> X(start=0));
assign sys_safe_err14 =  ~( reg_i_hready | controllable_nstart );

// G(((stateG2=1) * (start=1)) -> FALSE;
assign sys_safe_err15 =  ~( ~(reg_stateG2 & ~controllable_nstart) | 0 );

// G(((stateG3_0=1) * (stateG3_1=0) * (stateG3_2=0) * ((start=1))) -> FALSE);
// G(((stateG3_0=0) * (stateG3_1=1) * (stateG3_2=0) * ((start=1))) -> FALSE);
// G(((stateG3_0=1) * (stateG3_1=1) * (stateG3_2=0) * ((start=1))) -> FALSE);
// G(((stateG3_0=0) * (stateG3_1=0) * (stateG3_2=1) * ((start=1))) -> FALSE);
// all these rules can be summarized as: only in state 000, start=1 is allowed:
assign sys_safe_err16 =  (reg_stateG3_0 | reg_stateG3_1 | reg_stateG3_2) & ~controllable_nstart;

// G( (hready=1) -> (   (hgrant0=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err17 =  ~( ~(reg_i_hready) | ( ~reg_controllable_nhgrant0 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant1=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err18 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant1 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant2=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err19 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant2 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant3=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err20 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant3 ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant4=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err21 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant4 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant5=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err22 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant5 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant6=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err23 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant6 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant7=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err24 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant7 ^~ ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant8=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err25 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant8 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant9=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err26 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant9 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant10=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err27 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant10 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant11=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err28 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant11 ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant12=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=1))  ) );
assign sys_safe_err29 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant12 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant13=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=1))  ) );
assign sys_safe_err30 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant13 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 ) ) );

// HMASTLOCK:
// G(  (hready=1) -> (locked=0 <-> X(hmastlock=0) ) );
assign sys_safe_err31 =  ~( ~(reg_i_hready) | (~reg_controllable_locked ^~ ~controllable_hmastlock) );

// Master 0:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err32 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 1:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err33 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 2:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err34 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 3:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err35 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 4:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err36 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 5:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err37 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 6:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err38 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 7:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err39 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 8:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err40 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 9:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err41 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 10:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err42 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 11:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err43 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 12:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=1)) ) );
assign sys_safe_err44 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & reg_controllable_hmaster3 ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 )) );

// Master 13:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=1)) ) );
assign sys_safe_err45 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & reg_controllable_hmaster3 ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 )) );

// Guarantee 6.2:
// G( ((X(start=0))) -> ( (hmastlock=1) <-> X(hmastlock=1)) );
assign sys_safe_err46 =  ~( ~(controllable_nstart) | ( reg_controllable_hmastlock ^~ controllable_hmastlock) );

// G( (decide=1  *  hlock0=1  *  X(hgrant0=1) )->X(locked=1));
assign sys_safe_err47 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock0 & ~controllable_nhgrant0) | (controllable_locked) );

// G((decide=1  *  hlock0=0  *  X(hgrant0=1))->X(locked=0));
assign sys_safe_err48 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock0 & ~controllable_nhgrant0) | (~controllable_locked) );

// G( (decide=1  *  hlock1=1  *  X(hgrant1=1) )->X(locked=1));
assign sys_safe_err49 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock1 & controllable_hgrant1) | (controllable_locked) );

// G((decide=1  *  hlock1=0  *  X(hgrant1=1))->X(locked=0));
assign sys_safe_err50 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock1 & controllable_hgrant1) | (~controllable_locked) );

// G( (decide=1  *  hlock2=1  *  X(hgrant2=1) )->X(locked=1));
assign sys_safe_err51 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock2 & controllable_hgrant2) | (controllable_locked) );

// G((decide=1  *  hlock2=0  *  X(hgrant2=1))->X(locked=0));
assign sys_safe_err52 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock2 & controllable_hgrant2) | (~controllable_locked) );

// G( (decide=1  *  hlock3=1  *  X(hgrant3=1) )->X(locked=1));
assign sys_safe_err53 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock3 & controllable_hgrant3) | (controllable_locked) );

// G((decide=1  *  hlock3=0  *  X(hgrant3=1))->X(locked=0));
assign sys_safe_err54 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock3 & controllable_hgrant3) | (~controllable_locked) );

// G( (decide=1  *  hlock4=1  *  X(hgrant4=1) )->X(locked=1));
assign sys_safe_err55 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock4 & controllable_hgrant4) | (controllable_locked) );

// G((decide=1  *  hlock4=0  *  X(hgrant4=1))->X(locked=0));
assign sys_safe_err56 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock4 & controllable_hgrant4) | (~controllable_locked) );

// G( (decide=1  *  hlock5=1  *  X(hgrant5=1) )->X(locked=1));
assign sys_safe_err57 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock5 & controllable_hgrant5) | (controllable_locked) );

// G((decide=1  *  hlock5=0  *  X(hgrant5=1))->X(locked=0));
assign sys_safe_err58 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock5 & controllable_hgrant5) | (~controllable_locked) );

// G( (decide=1  *  hlock6=1  *  X(hgrant6=1) )->X(locked=1));
assign sys_safe_err59 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock6 & controllable_hgrant6) | (controllable_locked) );

// G((decide=1  *  hlock6=0  *  X(hgrant6=1))->X(locked=0));
assign sys_safe_err60 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock6 & controllable_hgrant6) | (~controllable_locked) );

// G( (decide=1  *  hlock7=1  *  X(hgrant7=1) )->X(locked=1));
assign sys_safe_err61 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock7 & controllable_hgrant7) | (controllable_locked) );

// G((decide=1  *  hlock7=0  *  X(hgrant7=1))->X(locked=0));
assign sys_safe_err62 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock7 & controllable_hgrant7) | (~controllable_locked) );

// G( (decide=1  *  hlock8=1  *  X(hgrant8=1) )->X(locked=1));
assign sys_safe_err63 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock8 & controllable_hgrant8) | (controllable_locked) );

// G((decide=1  *  hlock8=0  *  X(hgrant8=1))->X(locked=0));
assign sys_safe_err64 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock8 & controllable_hgrant8) | (~controllable_locked) );

// G( (decide=1  *  hlock9=1  *  X(hgrant9=1) )->X(locked=1));
assign sys_safe_err65 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock9 & controllable_hgrant9) | (controllable_locked) );

// G((decide=1  *  hlock9=0  *  X(hgrant9=1))->X(locked=0));
assign sys_safe_err66 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock9 & controllable_hgrant9) | (~controllable_locked) );

// G( (decide=1  *  hlock10=1  *  X(hgrant10=1) )->X(locked=1));
assign sys_safe_err67 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock10 & controllable_hgrant10) | (controllable_locked) );

// G((decide=1  *  hlock10=0  *  X(hgrant10=1))->X(locked=0));
assign sys_safe_err68 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock10 & controllable_hgrant10) | (~controllable_locked) );

// G( (decide=1  *  hlock11=1  *  X(hgrant11=1) )->X(locked=1));
assign sys_safe_err69 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock11 & controllable_hgrant11) | (controllable_locked) );

// G((decide=1  *  hlock11=0  *  X(hgrant11=1))->X(locked=0));
assign sys_safe_err70 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock11 & controllable_hgrant11) | (~controllable_locked) );

// G( (decide=1  *  hlock12=1  *  X(hgrant12=1) )->X(locked=1));
assign sys_safe_err71 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock12 & controllable_hgrant12) | (controllable_locked) );

// G((decide=1  *  hlock12=0  *  X(hgrant12=1))->X(locked=0));
assign sys_safe_err72 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock12 & controllable_hgrant12) | (~controllable_locked) );

// G( (decide=1  *  hlock13=1  *  X(hgrant13=1) )->X(locked=1));
assign sys_safe_err73 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock13 & controllable_hgrant13) | (controllable_locked) );

// G((decide=1  *  hlock13=0  *  X(hgrant13=1))->X(locked=0));
assign sys_safe_err74 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock13 & controllable_hgrant13) | (~controllable_locked) );

// G( (decide=0) -> (  ((hgrant0=0)<->X(hgrant0=0))  ));
assign sys_safe_err75 =  ~( ~(reg_controllable_ndecide) | (reg_controllable_nhgrant0 ^~ controllable_nhgrant0) );

// G( (decide=0) -> (  ((hgrant1=0)<->X(hgrant1=0))  ));
assign sys_safe_err76 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant1 ^~ ~controllable_hgrant1) );

// G( (decide=0) -> (  ((hgrant2=0)<->X(hgrant2=0))  ));
assign sys_safe_err77 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant2 ^~ ~controllable_hgrant2) );

// G( (decide=0) -> (  ((hgrant3=0)<->X(hgrant3=0))  ));
assign sys_safe_err78 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant3 ^~ ~controllable_hgrant3) );

// G( (decide=0) -> (  ((hgrant4=0)<->X(hgrant4=0))  ));
assign sys_safe_err79 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant4 ^~ ~controllable_hgrant4) );

// G( (decide=0) -> (  ((hgrant5=0)<->X(hgrant5=0))  ));
assign sys_safe_err80 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant5 ^~ ~controllable_hgrant5) );

// G( (decide=0) -> (  ((hgrant6=0)<->X(hgrant6=0))  ));
assign sys_safe_err81 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant6 ^~ ~controllable_hgrant6) );

// G( (decide=0) -> (  ((hgrant7=0)<->X(hgrant7=0))  ));
assign sys_safe_err82 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant7 ^~ ~controllable_hgrant7) );

// G( (decide=0) -> (  ((hgrant8=0)<->X(hgrant8=0))  ));
assign sys_safe_err83 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant8 ^~ ~controllable_hgrant8) );

// G( (decide=0) -> (  ((hgrant9=0)<->X(hgrant9=0))  ));
assign sys_safe_err84 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant9 ^~ ~controllable_hgrant9) );

// G( (decide=0) -> (  ((hgrant10=0)<->X(hgrant10=0))  ));
assign sys_safe_err85 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant10 ^~ ~controllable_hgrant10) );

// G( (decide=0) -> (  ((hgrant11=0)<->X(hgrant11=0))  ));
assign sys_safe_err86 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant11 ^~ ~controllable_hgrant11) );

// G( (decide=0) -> (  ((hgrant12=0)<->X(hgrant12=0))  ));
assign sys_safe_err87 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant12 ^~ ~controllable_hgrant12) );

// G( (decide=0) -> (  ((hgrant13=0)<->X(hgrant13=0))  ));
assign sys_safe_err88 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant13 ^~ ~controllable_hgrant13) );

// G((decide=0)->(locked=0 <-> X(locked=0)));
assign sys_safe_err89 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_locked ^~ ~controllable_locked) );

// G(((stateG10_1=1) * (((hgrant1=1)) * (hbusreq1=0)))->FALSE);
assign sys_safe_err90 =  ~( ~(reg_stateG10_1 & (controllable_hgrant1 & ~i_hbusreq1)) | 0 );

// G(((stateG10_2=1) * (((hgrant2=1)) * (hbusreq2=0)))->FALSE);
assign sys_safe_err91 =  ~( ~(reg_stateG10_2 & (controllable_hgrant2 & ~i_hbusreq2)) | 0 );

// G(((stateG10_3=1) * (((hgrant3=1)) * (hbusreq3=0)))->FALSE);
assign sys_safe_err92 =  ~( ~(reg_stateG10_3 & (controllable_hgrant3 & ~i_hbusreq3)) | 0 );

// G(((stateG10_4=1) * (((hgrant4=1)) * (hbusreq4=0)))->FALSE);
assign sys_safe_err93 =  ~( ~(reg_stateG10_4 & (controllable_hgrant4 & ~i_hbusreq4)) | 0 );

// G(((stateG10_5=1) * (((hgrant5=1)) * (hbusreq5=0)))->FALSE);
assign sys_safe_err94 =  ~( ~(reg_stateG10_5 & (controllable_hgrant5 & ~i_hbusreq5)) | 0 );

// G(((stateG10_6=1) * (((hgrant6=1)) * (hbusreq6=0)))->FALSE);
assign sys_safe_err95 =  ~( ~(reg_stateG10_6 & (controllable_hgrant6 & ~i_hbusreq6)) | 0 );

// G(((stateG10_7=1) * (((hgrant7=1)) * (hbusreq7=0)))->FALSE);
assign sys_safe_err96 =  ~( ~(reg_stateG10_7 & (controllable_hgrant7 & ~i_hbusreq7)) | 0 );

// G(((stateG10_8=1) * (((hgrant8=1)) * (hbusreq8=0)))->FALSE);
assign sys_safe_err97 =  ~( ~(reg_stateG10_8 & (controllable_hgrant8 & ~i_hbusreq8)) | 0 );

// G(((stateG10_9=1) * (((hgrant9=1)) * (hbusreq9=0)))->FALSE);
assign sys_safe_err98 =  ~( ~(reg_stateG10_9 & (controllable_hgrant9 & ~i_hbusreq9)) | 0 );

// G(((stateG10_10=1) * (((hgrant10=1)) * (hbusreq10=0)))->FALSE);
assign sys_safe_err99 =  ~( ~(reg_stateG10_10 & (controllable_hgrant10 & ~i_hbusreq10)) | 0 );

// G(((stateG10_11=1) * (((hgrant11=1)) * (hbusreq11=0)))->FALSE);
assign sys_safe_err100 =  ~( ~(reg_stateG10_11 & (controllable_hgrant11 & ~i_hbusreq11)) | 0 );

// G(((stateG10_12=1) * (((hgrant12=1)) * (hbusreq12=0)))->FALSE);
assign sys_safe_err101 =  ~( ~(reg_stateG10_12 & (controllable_hgrant12 & ~i_hbusreq12)) | 0 );

// G(((stateG10_13=1) * (((hgrant13=1)) * (hbusreq13=0)))->FALSE);
assign sys_safe_err102 =  ~( ~(reg_stateG10_13 & (controllable_hgrant13 & ~i_hbusreq13)) | 0 );

// default master
// G((decide=1  *  hbusreq0=0  *  hbusreq1=0  *  hbusreq2=0  *  hbusreq3=0  *  hbusreq4=0  *  hbusreq5=0  *  hbusreq6=0  *  hbusreq7=0  *  hbusreq8=0  *  hbusreq9=0  *  hbusreq10=0  *  hbusreq11=0  *  hbusreq12=0  *  hbusreq13=0) -> X(hgrant0=1));
assign sys_safe_err103 =  ~( ~(~reg_controllable_ndecide & (~reg_i_hbusreq0 & ~reg_i_hbusreq1 & ~reg_i_hbusreq2 & ~reg_i_hbusreq3 & ~reg_i_hbusreq4 & ~reg_i_hbusreq5 & ~reg_i_hbusreq6 & ~reg_i_hbusreq7 & ~reg_i_hbusreq8 & ~reg_i_hbusreq9 & ~reg_i_hbusreq10 & ~reg_i_hbusreq11 & ~reg_i_hbusreq12 & ~reg_i_hbusreq13)) | (~controllable_nhgrant0) );

// collecting together the safety error bits:
assign sys_safe_err = sys_safe_err0 |
                      sys_safe_err1 |
                      sys_safe_err2 |
                      sys_safe_err3 |
                      sys_safe_err4 |
                      sys_safe_err5 |
                      sys_safe_err6 |
                      sys_safe_err7 |
                      sys_safe_err8 |
                      sys_safe_err9 |
                      sys_safe_err10 |
                      sys_safe_err11 |
                      sys_safe_err12 |
                      sys_safe_err13 |
                      sys_safe_err14 |
                      sys_safe_err15 |
                      sys_safe_err16 |
                      sys_safe_err17 |
                      sys_safe_err18 |
                      sys_safe_err19 |
                      sys_safe_err20 |
                      sys_safe_err21 |
                      sys_safe_err22 |
                      sys_safe_err23 |
                      sys_safe_err24 |
                      sys_safe_err25 |
                      sys_safe_err26 |
                      sys_safe_err27 |
                      sys_safe_err28 |
                      sys_safe_err29 |
                      sys_safe_err30 |
                      sys_safe_err31 |
                      sys_safe_err32 |
                      sys_safe_err33 |
                      sys_safe_err34 |
                      sys_safe_err35 |
                      sys_safe_err36 |
                      sys_safe_err37 |
                      sys_safe_err38 |
                      sys_safe_err39 |
                      sys_safe_err40 |
                      sys_safe_err41 |
                      sys_safe_err42 |
                      sys_safe_err43 |
                      sys_safe_err44 |
                      sys_safe_err45 |
                      sys_safe_err46 |
                      sys_safe_err47 |
                      sys_safe_err48 |
                      sys_safe_err49 |
                      sys_safe_err50 |
                      sys_safe_err51 |
                      sys_safe_err52 |
                      sys_safe_err53 |
                      sys_safe_err54 |
                      sys_safe_err55 |
                      sys_safe_err56 |
                      sys_safe_err57 |
                      sys_safe_err58 |
                      sys_safe_err59 |
                      sys_safe_err60 |
                      sys_safe_err61 |
                      sys_safe_err62 |
                      sys_safe_err63 |
                      sys_safe_err64 |
                      sys_safe_err65 |
                      sys_safe_err66 |
                      sys_safe_err67 |
                      sys_safe_err68 |
                      sys_safe_err69 |
                      sys_safe_err70 |
                      sys_safe_err71 |
                      sys_safe_err72 |
                      sys_safe_err73 |
                      sys_safe_err74 |
                      sys_safe_err75 |
                      sys_safe_err76 |
                      sys_safe_err77 |
                      sys_safe_err78 |
                      sys_safe_err79 |
                      sys_safe_err80 |
                      sys_safe_err81 |
                      sys_safe_err82 |
                      sys_safe_err83 |
                      sys_safe_err84 |
                      sys_safe_err85 |
                      sys_safe_err86 |
                      sys_safe_err87 |
                      sys_safe_err88 |
                      sys_safe_err89 |
                      sys_safe_err90 |
                      sys_safe_err91 |
                      sys_safe_err92 |
                      sys_safe_err93 |
                      sys_safe_err94 |
                      sys_safe_err95 |
                      sys_safe_err96 |
                      sys_safe_err97 |
                      sys_safe_err98 |
                      sys_safe_err99 |
                      sys_safe_err100 |
                      sys_safe_err101 |
                      sys_safe_err102 |
                      sys_safe_err103;

// =============================================================
//                          ENV_FAIRNESS:
// =============================================================
// Assumption 1: 
// G(F(stateA1=0));
assign env_fair0 =  ~reg_stateA1;

// Assumption 2:
// G(F(hready=1));
assign env_fair1 =  i_hready;


// =============================================================
//                          SYS_FAIRNESS:
// =============================================================
// Guarantee 2:
// G(F(stateG2=0));
assign sys_fair0 = ~reg_stateG2;

// Guarantee 3:
// G(F((stateG3_0=0)  *  (stateG3_1=0)  *  (stateG3_2=0)));
assign sys_fair1 =  (~reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2);

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0))  |  hbusreq0=0));
assign sys_fair2 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq0;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0))  |  hbusreq1=0));
assign sys_fair3 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq1;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0))  |  hbusreq2=0));
assign sys_fair4 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq2;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0))  |  hbusreq3=0));
assign sys_fair5 =  ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq3;

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0))  |  hbusreq4=0));
assign sys_fair6 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq4;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0))  |  hbusreq5=0));
assign sys_fair7 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq5;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0))  |  hbusreq6=0));
assign sys_fair8 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq6;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0))  |  hbusreq7=0));
assign sys_fair9 =  ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq7;

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1))  |  hbusreq8=0));
assign sys_fair10 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq8;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1))  |  hbusreq9=0));
assign sys_fair11 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq9;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1))  |  hbusreq10=0));
assign sys_fair12 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq10;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1))  |  hbusreq11=0));
assign sys_fair13 =  ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq11;

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1))  |  hbusreq12=0));
assign sys_fair14 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 ) | ~i_hbusreq12;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1))  |  hbusreq13=0));
assign sys_fair15 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 ) | ~i_hbusreq13;

assign fair_err = (fair_cnt >= 4'b1001);

// computing the error output bit:
assign o_err = ~env_safe_err & ~env_safe_err_happened & (sys_safe_err | fair_err);

initial
 begin
  reg_i_hready = 0;
  reg_i_hbusreq0 = 0;
  reg_i_hlock0 = 0;
  reg_i_hbusreq1 = 0;
  reg_i_hlock1 = 0;
  reg_i_hbusreq2 = 0;
  reg_i_hlock2 = 0;
  reg_i_hbusreq3 = 0;
  reg_i_hlock3 = 0;
  reg_i_hbusreq4 = 0;
  reg_i_hlock4 = 0;
  reg_i_hbusreq5 = 0;
  reg_i_hlock5 = 0;
  reg_i_hbusreq6 = 0;
  reg_i_hlock6 = 0;
  reg_i_hbusreq7 = 0;
  reg_i_hlock7 = 0;
  reg_i_hbusreq8 = 0;
  reg_i_hlock8 = 0;
  reg_i_hbusreq9 = 0;
  reg_i_hlock9 = 0;
  reg_i_hbusreq10 = 0;
  reg_i_hlock10 = 0;
  reg_i_hbusreq11 = 0;
  reg_i_hlock11 = 0;
  reg_i_hbusreq12 = 0;
  reg_i_hlock12 = 0;
  reg_i_hbusreq13 = 0;
  reg_i_hlock13 = 0;
  reg_controllable_hmaster0 = 0;
  reg_controllable_hmaster1 = 0;
  reg_controllable_hmaster2 = 0;
  reg_controllable_hmaster3 = 0;
  reg_controllable_hmastlock = 0;
  reg_controllable_nstart = 0;
  reg_controllable_ndecide = 0;
  reg_controllable_locked = 0;
  reg_controllable_nhgrant0 = 0;
  reg_controllable_hgrant1 = 0;
  reg_controllable_hgrant2 = 0;
  reg_controllable_hgrant3 = 0;
  reg_controllable_hgrant4 = 0;
  reg_controllable_hgrant5 = 0;
  reg_controllable_hgrant6 = 0;
  reg_controllable_hgrant7 = 0;
  reg_controllable_hgrant8 = 0;
  reg_controllable_hgrant9 = 0;
  reg_controllable_hgrant10 = 0;
  reg_controllable_hgrant11 = 0;
  reg_controllable_hgrant12 = 0;
  reg_controllable_hgrant13 = 0;
  reg_controllable_busreq = 0;
  reg_stateA1 = 0;
  reg_stateG2 = 0;
  reg_stateG3_0 = 0;
  reg_stateG3_1 = 0;
  reg_stateG3_2 = 0;
  reg_stateG10_1 = 0;
  reg_stateG10_2 = 0;
  reg_stateG10_3 = 0;
  reg_stateG10_4 = 0;
  reg_stateG10_5 = 0;
  reg_stateG10_6 = 0;
  reg_stateG10_7 = 0;
  reg_stateG10_8 = 0;
  reg_stateG10_9 = 0;
  reg_stateG10_10 = 0;
  reg_stateG10_11 = 0;
  reg_stateG10_12 = 0;
  reg_stateG10_13 = 0;
  env_safe_err_happened = 0;
  next_env_fair = 0;
  fair_cnt = 0;
  next_sys_fair = 0;
 end


always @(posedge i_clk)
 begin
   // We remember if an environment error occurred:
   env_safe_err_happened = env_safe_err_happened | env_safe_err;

   // Updating the fairness counters: 
   if((next_sys_fair == 0) & sys_fair0)
    begin
      next_sys_fair = 1;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 1) & sys_fair1)
    begin
      next_sys_fair = 2;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 2) & sys_fair2)
    begin
      next_sys_fair = 3;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 3) & sys_fair3)
    begin
      next_sys_fair = 4;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 4) & sys_fair4)
    begin
      next_sys_fair = 5;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 5) & sys_fair5)
    begin
      next_sys_fair = 6;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 6) & sys_fair6)
    begin
      next_sys_fair = 7;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 7) & sys_fair7)
    begin
      next_sys_fair = 8;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 8) & sys_fair8)
    begin
      next_sys_fair = 9;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 9) & sys_fair9)
    begin
      next_sys_fair = 10;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 10) & sys_fair10)
    begin
      next_sys_fair = 11;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 11) & sys_fair11)
    begin
      next_sys_fair = 12;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 12) & sys_fair12)
    begin
      next_sys_fair = 13;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 13) & sys_fair13)
    begin
      next_sys_fair = 14;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 14) & sys_fair14)
    begin
      next_sys_fair = 15;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 15) & sys_fair15)
    begin
      next_sys_fair = 0;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if(~next_env_fair & env_fair0)
    begin
      next_env_fair = 1;
    end
   else if(next_env_fair & env_fair1)
    begin
      next_env_fair = 0;
      fair_cnt = fair_cnt + 1;
    end

   // Updating the automata: 
   // Automaton A1: 
   if(~reg_stateA1 & controllable_hmastlock & ~i_hburst0 & ~i_hburst1)
    begin
      reg_stateA1 = 1'b1;
    end
   else if(reg_stateA1 & ~controllable_busreq)
    begin
      reg_stateA1 = 1'b0;
    end

   // Automaton G2: 
   if(~reg_stateG2)
    begin
      if(controllable_hmastlock & ~controllable_nstart & ~i_hburst0 & ~i_hburst1)
       begin
         reg_stateG2 = 1'b1;
       end
    end
   else // if(reg_stateG2)
    begin
      if(~controllable_busreq)
       begin
         reg_stateG2 = 1'b0;
       end
    end

   // Automaton G3: 
   if(~reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2 & controllable_hmastlock & ~controllable_nstart &  ~i_hburst0 & i_hburst1 & ~i_hready)
    begin
      reg_stateG3_0 = 1'b1;
      reg_stateG3_1 = 1'b0;
      reg_stateG3_2 = 1'b0;
    end
   else if(~reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2 & controllable_hmastlock & ~controllable_nstart &  ~i_hburst0 & i_hburst1 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b1;
      reg_stateG3_2 = 1'b0;
    end
   else if(reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b1;
      reg_stateG3_2 = 1'b0;
    end
   else if(~reg_stateG3_0 & reg_stateG3_1 & ~reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b1;
      reg_stateG3_1 = 1'b1;
      reg_stateG3_2 = 1'b0;
    end
   else if(reg_stateG3_0 & reg_stateG3_1 & ~reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b0;
      reg_stateG3_2 = 1'b1;
    end
   else if(~reg_stateG3_0 & ~reg_stateG3_1 & reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b0;
      reg_stateG3_2 = 1'b0;
    end

   // Automaton G10_1: 
   if(~reg_stateG10_1 & ~controllable_hgrant1 & ~i_hbusreq1)
    begin
      reg_stateG10_1 = 1'b1;
    end
   else if(reg_stateG10_1 & i_hbusreq1)
    begin
      reg_stateG10_1 = 1'b0;
    end

   // Automaton G10_2: 
   if(~reg_stateG10_2 & ~controllable_hgrant2 & ~i_hbusreq2)
    begin
      reg_stateG10_2 = 1'b1;
    end
   else if(reg_stateG10_2 & i_hbusreq2)
    begin
      reg_stateG10_2 = 1'b0;
    end

   // Automaton G10_3: 
   if(~reg_stateG10_3 & ~controllable_hgrant3 & ~i_hbusreq3)
    begin
      reg_stateG10_3 = 1'b1;
    end
   else if(reg_stateG10_3 & i_hbusreq3)
    begin
      reg_stateG10_3 = 1'b0;
    end

   // Automaton G10_4: 
   if(~reg_stateG10_4 & ~controllable_hgrant4 & ~i_hbusreq4)
    begin
      reg_stateG10_4 = 1'b1;
    end
   else if(reg_stateG10_4 & i_hbusreq4)
    begin
      reg_stateG10_4 = 1'b0;
    end

   // Automaton G10_5: 
   if(~reg_stateG10_5 & ~controllable_hgrant5 & ~i_hbusreq5)
    begin
      reg_stateG10_5 = 1'b1;
    end
   else if(reg_stateG10_5 & i_hbusreq5)
    begin
      reg_stateG10_5 = 1'b0;
    end

   // Automaton G10_6: 
   if(~reg_stateG10_6 & ~controllable_hgrant6 & ~i_hbusreq6)
    begin
      reg_stateG10_6 = 1'b1;
    end
   else if(reg_stateG10_6 & i_hbusreq6)
    begin
      reg_stateG10_6 = 1'b0;
    end

   // Automaton G10_7: 
   if(~reg_stateG10_7 & ~controllable_hgrant7 & ~i_hbusreq7)
    begin
      reg_stateG10_7 = 1'b1;
    end
   else if(reg_stateG10_7 & i_hbusreq7)
    begin
      reg_stateG10_7 = 1'b0;
    end

   // Automaton G10_8: 
   if(~reg_stateG10_8 & ~controllable_hgrant8 & ~i_hbusreq8)
    begin
      reg_stateG10_8 = 1'b1;
    end
   else if(reg_stateG10_8 & i_hbusreq8)
    begin
      reg_stateG10_8 = 1'b0;
    end

   // Automaton G10_9: 
   if(~reg_stateG10_9 & ~controllable_hgrant9 & ~i_hbusreq9)
    begin
      reg_stateG10_9 = 1'b1;
    end
   else if(reg_stateG10_9 & i_hbusreq9)
    begin
      reg_stateG10_9 = 1'b0;
    end

   // Automaton G10_10: 
   if(~reg_stateG10_10 & ~controllable_hgrant10 & ~i_hbusreq10)
    begin
      reg_stateG10_10 = 1'b1;
    end
   else if(reg_stateG10_10 & i_hbusreq10)
    begin
      reg_stateG10_10 = 1'b0;
    end

   // Automaton G10_11: 
   if(~reg_stateG10_11 & ~controllable_hgrant11 & ~i_hbusreq11)
    begin
      reg_stateG10_11 = 1'b1;
    end
   else if(reg_stateG10_11 & i_hbusreq11)
    begin
      reg_stateG10_11 = 1'b0;
    end

   // Automaton G10_12: 
   if(~reg_stateG10_12 & ~controllable_hgrant12 & ~i_hbusreq12)
    begin
      reg_stateG10_12 = 1'b1;
    end
   else if(reg_stateG10_12 & i_hbusreq12)
    begin
      reg_stateG10_12 = 1'b0;
    end

   // Automaton G10_13: 
   if(~reg_stateG10_13 & ~controllable_hgrant13 & ~i_hbusreq13)
    begin
      reg_stateG10_13 = 1'b1;
    end
   else if(reg_stateG10_13 & i_hbusreq13)
    begin
      reg_stateG10_13 = 1'b0;
    end

   // Latching the previous input:
   reg_i_hready =  i_hready;
   reg_i_hbusreq0 =  i_hbusreq0;
   reg_i_hlock0 =  i_hlock0;
   reg_i_hbusreq1 =  i_hbusreq1;
   reg_i_hlock1 =  i_hlock1;
   reg_i_hbusreq2 =  i_hbusreq2;
   reg_i_hlock2 =  i_hlock2;
   reg_i_hbusreq3 =  i_hbusreq3;
   reg_i_hlock3 =  i_hlock3;
   reg_i_hbusreq4 =  i_hbusreq4;
   reg_i_hlock4 =  i_hlock4;
   reg_i_hbusreq5 =  i_hbusreq5;
   reg_i_hlock5 =  i_hlock5;
   reg_i_hbusreq6 =  i_hbusreq6;
   reg_i_hlock6 =  i_hlock6;
   reg_i_hbusreq7 =  i_hbusreq7;
   reg_i_hlock7 =  i_hlock7;
   reg_i_hbusreq8 =  i_hbusreq8;
   reg_i_hlock8 =  i_hlock8;
   reg_i_hbusreq9 =  i_hbusreq9;
   reg_i_hlock9 =  i_hlock9;
   reg_i_hbusreq10 =  i_hbusreq10;
   reg_i_hlock10 =  i_hlock10;
   reg_i_hbusreq11 =  i_hbusreq11;
   reg_i_hlock11 =  i_hlock11;
   reg_i_hbusreq12 =  i_hbusreq12;
   reg_i_hlock12 =  i_hlock12;
   reg_i_hbusreq13 =  i_hbusreq13;
   reg_i_hlock13 =  i_hlock13;
   reg_controllable_hmaster0 =  controllable_hmaster0;
   reg_controllable_hmaster1 =  controllable_hmaster1;
   reg_controllable_hmaster2 =  controllable_hmaster2;
   reg_controllable_hmaster3 =  controllable_hmaster3;
   reg_controllable_hmastlock =  controllable_hmastlock;
   reg_controllable_nstart =  controllable_nstart;
   reg_controllable_ndecide =  controllable_ndecide;
   reg_controllable_locked =  controllable_locked;
   reg_controllable_nhgrant0 =  controllable_nhgrant0;
   reg_controllable_hgrant1 =  controllable_hgrant1;
   reg_controllable_hgrant2 =  controllable_hgrant2;
   reg_controllable_hgrant3 =  controllable_hgrant3;
   reg_controllable_hgrant4 =  controllable_hgrant4;
   reg_controllable_hgrant5 =  controllable_hgrant5;
   reg_controllable_hgrant6 =  controllable_hgrant6;
   reg_controllable_hgrant7 =  controllable_hgrant7;
   reg_controllable_hgrant8 =  controllable_hgrant8;
   reg_controllable_hgrant9 =  controllable_hgrant9;
   reg_controllable_hgrant10 =  controllable_hgrant10;
   reg_controllable_hgrant11 =  controllable_hgrant11;
   reg_controllable_hgrant12 =  controllable_hgrant12;
   reg_controllable_hgrant13 =  controllable_hgrant13;
   reg_controllable_busreq =  controllable_busreq;

 end
endmodule

-------------------------------

aag 1645 60 105 1 1480
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106
108
110
112
114
116
118
120
122 1
124 72
126 2373
128 18
130 104
132 102
134 68
136 20
138 2387
140 108
142 98
144 64
146 2401
148 2447
150 22
152 2461
154 94
156 58
158 24
160 90
162 2475
164 2489
166 86
168 26
170 2503
172 116
174 28
176 2525
178 30
180 2539
182 2553
184 2575
186 32
188 2659
190 2673
192 2685
194 2707
196 2731
198 2753
200 2773
202 2787
204 10
206 52
208 2811
210 2833
212 2847
214 8
216 2869
218 2955
220 2961
222 2967
224 2973
226 2979
228 6
230 2993
232 74
234 3015
236 4
238 70
240 3045
242 3067
244 2
246 66
248 3089
250 120
252 3103
254 60
256 3125
258 118
260 36
262 50
264 34
266 42
268 3147
270 114
272 80
274 48
276 3161
278 3183
280 112
282 46
284 82
286 3197
288 3219
290 110
292 44
294 54
296 84
298 3241
300 399
302 40
304 88
306 3263
308 38
310 3277
312 92
314 78
316 14
318 96
320 3291
322 76
324 12
326 16
328 100
330 106
2074
332 110 15
334 112 17
336 335 333
338 114 19
340 339 336
342 118 21
344 343 340
346 120 23
348 347 344
350 25 2
352 351 348
354 27 4
356 355 352
358 29 6
360 359 356
362 31 8
364 363 360
366 33 10
368 367 364
370 107 50
372 371 368
374 103 48
376 375 372
378 99 46
380 379 376
382 95 44
384 383 380
386 91 40
388 387 384
390 87 38
392 391 388
394 301 122
396 395 122
398 397 392
400 75 71
402 400 67
404 402 61
406 43 14
408 42 15
410 409 407
412 411 404
414 74 71
416 414 67
418 416 61
420 43 16
422 42 17
424 423 421
426 425 418
428 427 413
430 75 70
432 430 67
434 432 61
436 43 18
438 42 19
440 439 437
442 441 434
444 443 428
446 74 70
448 446 67
450 448 61
452 43 20
454 42 21
456 455 453
458 457 450
460 459 444
462 400 66
464 462 61
466 43 22
468 42 23
470 469 467
472 471 464
474 473 460
476 414 66
478 476 61
480 43 24
482 42 25
484 483 481
486 485 478
488 487 474
490 430 66
492 490 61
494 43 26
496 42 27
498 497 495
500 499 492
502 501 488
504 446 66
506 504 61
508 43 28
510 42 29
512 511 509
514 513 506
516 515 502
518 402 60
520 43 30
522 42 31
524 523 521
526 525 518
528 527 516
530 416 60
532 43 32
534 42 33
536 535 533
538 537 530
540 539 528
542 432 60
544 106 43
546 107 42
548 547 545
550 549 542
552 551 540
554 448 60
556 102 43
558 103 42
560 559 557
562 561 554
564 563 552
566 462 60
568 98 43
570 99 42
572 571 569
574 573 566
576 575 564
578 476 60
580 94 43
582 95 42
584 583 581
586 585 578
588 587 576
590 490 60
592 90 43
594 91 42
596 595 593
598 597 590
600 599 588
602 504 60
604 86 43
606 87 42
608 607 605
610 609 602
612 611 600
614 261 122
616 260 122
618 615 122
620 619 117
622 621 612
624 241 122
626 240 122
628 625 122
630 626 117
632 631 622
634 189 122
636 188 122
638 635 122
640 197 122
642 196 122
644 641 122
646 645 639
648 201 122
650 200 122
652 649 122
654 653 646
656 655 117
658 657 632
660 295 122
662 294 122
664 661 122
666 662 404
668 665 405
670 669 667
672 671 616
674 673 658
676 273 122
678 272 122
680 677 122
682 681 418
684 678 419
686 685 683
688 687 616
690 689 674
692 285 122
694 284 122
696 693 122
698 697 434
700 694 435
702 701 699
704 703 616
706 705 690
708 297 122
710 296 122
712 709 122
714 713 450
716 710 451
718 717 715
720 719 616
722 721 706
724 305 122
726 304 122
728 725 122
730 729 464
732 726 465
734 733 731
736 735 616
738 737 722
740 313 122
742 312 122
744 741 122
746 745 478
748 742 479
750 749 747
752 751 616
754 753 738
756 319 122
758 318 122
760 757 122
762 761 492
764 758 493
766 765 763
768 767 616
770 769 754
772 329 122
774 328 122
776 773 122
778 777 506
780 774 507
782 781 779
784 783 616
786 785 770
788 131 122
790 130 122
792 789 122
794 793 518
796 790 519
798 797 795
800 799 616
802 801 786
804 141 122
806 140 122
808 805 122
810 809 530
812 806 531
814 813 811
816 815 616
818 817 802
820 157 122
822 156 122
824 821 122
826 825 542
828 822 543
830 829 827
832 831 616
834 833 818
836 145 122
838 144 122
840 837 122
842 841 554
844 838 555
846 845 843
848 847 616
850 849 834
852 135 122
854 134 122
856 853 122
858 857 566
860 854 567
862 861 859
864 863 616
866 865 850
868 125 122
870 124 122
872 869 122
874 873 578
876 870 579
878 877 875
880 879 616
882 881 866
884 323 122
886 322 122
888 885 122
890 889 590
892 886 591
894 893 891
896 895 616
898 897 882
900 315 122
902 314 122
904 901 122
906 905 602
908 902 603
910 909 907
912 911 616
914 913 898
916 325 122
918 324 122
920 917 122
922 918 53
924 921 52
926 925 923
928 927 616
930 929 914
932 233 122
934 232 122
936 933 122
938 239 122
940 238 122
942 939 122
944 943 937
946 247 122
948 246 122
950 947 122
952 951 944
954 255 122
956 254 122
958 955 122
960 959 952
962 961 404
964 960 405
966 965 963
968 967 116
970 969 930
972 943 934
974 972 951
976 974 959
978 977 418
980 976 419
982 981 979
984 983 116
986 985 970
988 940 937
990 988 951
992 990 959
994 993 434
996 992 435
998 997 995
1000 999 116
1002 1001 986
1004 940 934
1006 1004 951
1008 1006 959
1010 1009 450
1012 1008 451
1014 1013 1011
1016 1015 116
1018 1017 1002
1020 948 944
1022 1020 959
1024 1023 464
1026 1022 465
1028 1027 1025
1030 1029 116
1032 1031 1018
1034 972 948
1036 1034 959
1038 1037 478
1040 1036 479
1042 1041 1039
1044 1043 116
1046 1045 1032
1048 988 948
1050 1048 959
1052 1051 492
1054 1050 493
1056 1055 1053
1058 1057 116
1060 1059 1046
1062 1004 948
1064 1062 959
1066 1065 506
1068 1064 507
1070 1069 1067
1072 1071 116
1074 1073 1060
1076 956 952
1078 1077 518
1080 1076 519
1082 1081 1079
1084 1083 116
1086 1085 1074
1088 974 956
1090 1089 530
1092 1088 531
1094 1093 1091
1096 1095 116
1098 1097 1086
1100 990 956
1102 1101 542
1104 1100 543
1106 1105 1103
1108 1107 116
1110 1109 1098
1112 1006 956
1114 1113 554
1116 1112 555
1118 1117 1115
1120 1119 116
1122 1121 1110
1124 1020 956
1126 1125 566
1128 1124 567
1130 1129 1127
1132 1131 116
1134 1133 1122
1136 1034 956
1138 1137 578
1140 1136 579
1142 1141 1139
1144 1143 116
1146 1145 1134
1148 1048 956
1150 1149 590
1152 1148 591
1154 1153 1151
1156 1155 116
1158 1157 1146
1160 1062 956
1162 1161 602
1164 1160 603
1166 1165 1163
1168 1167 116
1170 1169 1158
1172 207 122
1174 206 122
1176 1173 122
1178 1177 52
1180 1174 53
1182 1181 1179
1184 1183 116
1186 1185 1170
1188 265 122
1190 264 122
1192 1189 122
1194 291 122
1196 290 122
1198 1195 122
1200 1196 1193
1202 1200 55
1204 1202 13
1206 1205 1186
1208 1199 1193
1210 1208 55
1212 1210 12
1214 1213 1206
1216 281 122
1218 280 122
1220 1217 122
1222 1218 1193
1224 1222 80
1226 1224 13
1228 1227 1214
1230 1221 1193
1232 1230 80
1234 1232 12
1236 1235 1228
1238 271 122
1240 270 122
1242 1239 122
1244 1240 1193
1246 1244 82
1248 1246 13
1250 1249 1236
1252 1243 1193
1254 1252 82
1256 1254 12
1258 1257 1250
1260 259 122
1262 258 122
1264 1261 122
1266 1262 1193
1268 1266 84
1270 1268 13
1272 1271 1258
1274 1265 1193
1276 1274 84
1278 1276 12
1280 1279 1272
1282 251 122
1284 250 122
1286 1283 122
1288 1284 1193
1290 1288 88
1292 1290 13
1294 1293 1280
1296 1287 1193
1298 1296 88
1300 1298 12
1302 1301 1294
1304 245 122
1306 244 122
1308 1305 122
1310 1306 1193
1312 1310 92
1314 1312 13
1316 1315 1302
1318 1309 1193
1320 1318 92
1322 1320 12
1324 1323 1316
1326 237 122
1328 236 122
1330 1327 122
1332 1328 1193
1334 1332 96
1336 1334 13
1338 1337 1324
1340 1331 1193
1342 1340 96
1344 1342 12
1346 1345 1338
1348 229 122
1350 228 122
1352 1349 122
1354 1350 1193
1356 1354 100
1358 1356 13
1360 1359 1346
1362 1353 1193
1364 1362 100
1366 1364 12
1368 1367 1360
1370 215 122
1372 214 122
1374 1371 122
1376 1372 1193
1378 1376 104
1380 1378 13
1382 1381 1368
1384 1375 1193
1386 1384 104
1388 1386 12
1390 1389 1382
1392 205 122
1394 204 122
1396 1393 122
1398 1394 1193
1400 1398 108
1402 1400 13
1404 1403 1390
1406 1397 1193
1408 1406 108
1410 1408 12
1412 1411 1404
1414 263 122
1416 262 122
1418 1415 122
1420 1416 1193
1422 1420 58
1424 1422 13
1426 1425 1412
1428 1419 1193
1430 1428 58
1432 1430 12
1434 1433 1426
1436 275 122
1438 274 122
1440 1437 122
1442 1438 1193
1444 1442 64
1446 1444 13
1448 1447 1434
1450 1441 1193
1452 1450 64
1454 1452 12
1456 1455 1448
1458 283 122
1460 282 122
1462 1459 122
1464 1460 1193
1466 1464 68
1468 1466 13
1470 1469 1456
1472 1463 1193
1474 1472 68
1476 1474 12
1478 1477 1470
1480 293 122
1482 292 122
1484 1481 122
1486 1482 1193
1488 1486 72
1490 1488 13
1492 1491 1478
1494 1485 1193
1496 1494 72
1498 1496 12
1500 1499 1492
1502 303 122
1504 302 122
1506 1503 122
1508 1504 1193
1510 1508 76
1512 1510 13
1514 1513 1500
1516 1507 1193
1518 1516 76
1520 1518 12
1522 1521 1514
1524 309 122
1526 308 122
1528 1525 122
1530 1526 1193
1532 1530 78
1534 1532 13
1536 1535 1522
1538 1529 1193
1540 1538 78
1542 1540 12
1544 1543 1536
1546 665 54
1548 662 55
1550 1549 1547
1552 1551 1190
1554 1553 1544
1556 678 81
1558 681 80
1560 1559 1557
1562 1561 1190
1564 1563 1554
1566 694 83
1568 697 82
1570 1569 1567
1572 1571 1190
1574 1573 1564
1576 710 85
1578 713 84
1580 1579 1577
1582 1581 1190
1584 1583 1574
1586 726 89
1588 729 88
1590 1589 1587
1592 1591 1190
1594 1593 1584
1596 742 93
1598 745 92
1600 1599 1597
1602 1601 1190
1604 1603 1594
1606 758 97
1608 761 96
1610 1609 1607
1612 1611 1190
1614 1613 1604
1616 774 101
1618 777 100
1620 1619 1617
1622 1621 1190
1624 1623 1614
1626 790 105
1628 793 104
1630 1629 1627
1632 1631 1190
1634 1633 1624
1636 806 109
1638 809 108
1640 1639 1637
1642 1641 1190
1644 1643 1634
1646 822 59
1648 825 58
1650 1649 1647
1652 1651 1190
1654 1653 1644
1656 838 65
1658 841 64
1660 1659 1657
1662 1661 1190
1664 1663 1654
1666 854 69
1668 857 68
1670 1669 1667
1672 1671 1190
1674 1673 1664
1676 870 73
1678 873 72
1680 1679 1677
1682 1681 1190
1684 1683 1674
1686 886 77
1688 889 76
1690 1689 1687
1692 1691 1190
1694 1693 1684
1696 902 79
1698 905 78
1700 1699 1697
1702 1701 1190
1704 1703 1694
1706 918 13
1708 921 12
1710 1709 1707
1712 1711 1190
1714 1713 1704
1716 235 122
1718 234 122
1720 1717 122
1722 80 17
1724 1722 1718
1726 1725 1714
1728 243 122
1730 242 122
1732 1729 122
1734 82 19
1736 1734 1730
1738 1737 1726
1740 249 122
1742 248 122
1744 1741 122
1746 84 21
1748 1746 1742
1750 1749 1738
1752 257 122
1754 256 122
1756 1753 122
1758 88 23
1760 1758 1754
1762 1761 1750
1764 269 122
1766 268 122
1768 1765 122
1770 92 25
1772 1770 1766
1774 1773 1762
1776 279 122
1778 278 122
1780 1777 122
1782 96 27
1784 1782 1778
1786 1785 1774
1788 289 122
1790 288 122
1792 1789 122
1794 100 29
1796 1794 1790
1798 1797 1786
1800 299 122
1802 298 122
1804 1801 122
1806 104 31
1808 1806 1802
1810 1809 1798
1812 307 122
1814 306 122
1816 1813 122
1818 108 33
1820 1818 1814
1822 1821 1810
1824 217 122
1826 216 122
1828 1825 122
1830 107 58
1832 1830 1826
1834 1833 1822
1836 211 122
1838 210 122
1840 1837 122
1842 103 64
1844 1842 1838
1846 1845 1834
1848 199 122
1850 198 122
1852 1849 122
1854 99 68
1856 1854 1850
1858 1857 1846
1860 195 122
1862 194 122
1864 1861 122
1866 95 72
1868 1866 1862
1870 1869 1858
1872 185 122
1874 184 122
1876 1873 122
1878 91 76
1880 1878 1874
1882 1881 1870
1884 177 122
1886 176 122
1888 1885 122
1890 87 78
1892 1890 1886
1894 1893 1882
1896 317 122
1898 1897 122
1900 327 122
1902 1901 122
1904 1903 1899
1906 129 122
1908 1907 122
1910 1909 1904
1912 137 122
1914 1913 122
1916 1915 1910
1918 151 122
1920 1919 122
1922 1921 1916
1924 159 122
1926 1925 122
1928 1927 1922
1930 169 122
1932 1931 122
1934 1933 1928
1936 175 122
1938 1937 122
1940 1939 1934
1942 179 122
1944 1943 122
1946 1945 1940
1948 187 122
1950 1949 122
1952 1951 1946
1954 331 122
1956 1955 122
1958 1957 1952
1960 133 122
1962 1961 122
1964 1963 1958
1966 143 122
1968 1967 122
1970 1969 1964
1972 155 122
1974 1973 122
1976 1975 1970
1978 161 122
1980 1979 122
1982 1981 1976
1984 167 122
1986 1985 122
1988 1987 1982
1990 1988 1193
1992 1990 54
1994 1993 1894
1996 227 122
1998 226 122
2000 1997 122
2002 225 122
2004 224 122
2006 2003 122
2008 223 122
2010 222 122
2012 2009 122
2014 221 122
2016 220 122
2018 2015 122
2020 219 122
2022 218 122
2024 2021 122
2026 2019 2013
2028 2027 2012
2030 2028 2018
2032 2031 2007
2034 2033 2006
2036 2034 2030
2038 2037 2001
2040 2039 2000
2042 2040 2036
2044 2018 2013
2046 2019 2010
2048 2047 2045
2050 2030 2007
2052 2031 2004
2054 2053 2051
2056 2036 2001
2058 2037 1998
2060 2059 2057
2062 2023 2018
2064 2062 2048
2066 2064 2054
2068 2066 2060
2070 2069 2043
2072 2070 1994
2074 2073 398
2076 277 122
2078 276 122
2080 2077 122
2082 2081 626
2084 253 122
2086 252 122
2088 2085 122
2090 2089 655
2092 2091 2083
2094 231 122
2096 230 122
2098 2095 122
2100 405 14
2102 2100 2099
2104 2103 2092
2106 213 122
2108 212 122
2110 2107 122
2112 419 16
2114 2112 2111
2116 2115 2104
2118 191 122
2120 190 122
2122 2119 122
2124 435 18
2126 2124 2123
2128 2127 2116
2130 181 122
2132 180 122
2134 2131 122
2136 451 20
2138 2136 2135
2140 2139 2128
2142 165 122
2144 164 122
2146 2143 122
2148 465 22
2150 2148 2147
2152 2151 2140
2154 153 122
2156 152 122
2158 2155 122
2160 479 24
2162 2160 2159
2164 2163 2152
2166 127 122
2168 126 122
2170 2167 122
2172 493 26
2174 2172 2171
2176 2175 2164
2178 147 122
2180 146 122
2182 2179 122
2184 507 28
2186 2184 2183
2188 2187 2176
2190 163 122
2192 162 122
2194 2191 122
2196 519 30
2198 2196 2195
2200 2199 2188
2202 171 122
2204 170 122
2206 2203 122
2208 531 32
2210 2208 2207
2212 2211 2200
2214 183 122
2216 182 122
2218 2215 122
2220 543 106
2222 2220 2219
2224 2223 2212
2226 203 122
2228 202 122
2230 2227 122
2232 555 102
2234 2232 2231
2236 2235 2224
2238 139 122
2240 138 122
2242 2239 122
2244 567 98
2246 2244 2243
2248 2247 2236
2250 321 122
2252 320 122
2254 2251 122
2256 579 94
2258 2256 2255
2260 2259 2248
2262 311 122
2264 310 122
2266 2263 122
2268 591 90
2270 2268 2267
2272 2271 2260
2274 287 122
2276 286 122
2278 2275 122
2280 603 86
2282 2280 2279
2284 2283 2272
2286 2081 629
2288 2089 654
2290 2289 2287
2292 2101 2099
2294 2293 2290
2296 2113 2111
2298 2297 2294
2300 2125 2123
2302 2301 2298
2304 2137 2135
2306 2305 2302
2308 2149 2147
2310 2309 2306
2312 2161 2159
2314 2313 2310
2316 2173 2171
2318 2317 2314
2320 2185 2183
2322 2321 2318
2324 2197 2195
2326 2325 2322
2328 2209 2207
2330 2329 2326
2332 2221 2219
2334 2333 2330
2336 2233 2231
2338 2337 2334
2340 2245 2243
2342 2341 2338
2344 2257 2255
2346 2345 2342
2348 2269 2267
2350 2349 2346
2352 2281 2279
2354 2353 2350
2356 2355 2285
2358 2357 2285
2360 2355 2175
2362 2354 2168
2364 2363 2361
2366 2365 2285
2368 2366 2359
2370 2358 2168
2372 2371 2369
2374 2355 2247
2376 2354 2240
2378 2377 2375
2380 2379 2285
2382 2380 2359
2384 2358 2240
2386 2385 2383
2388 2355 2187
2390 2354 2180
2392 2391 2389
2394 2393 2285
2396 2394 2359
2398 2358 2180
2400 2399 2397
2402 193 122
2404 192 122
2406 2403 122
2408 209 122
2410 208 122
2412 2409 122
2414 2410 2407
2416 149 122
2418 148 122
2420 2417 122
2422 2421 37
2424 2423 2415
2426 2354 2285
2428 2426 2424
2430 2429 2358
2432 2426 2425
2434 2433 2430
2436 2425 2423
2438 2436 2354
2440 2438 2285
2442 2440 2435
2444 2434 2418
2446 2445 2443
2448 2355 2163
2450 2354 2156
2452 2451 2449
2454 2453 2285
2456 2454 2359
2458 2358 2156
2460 2459 2457
2462 2355 2199
2464 2354 2192
2466 2465 2463
2468 2467 2285
2470 2468 2359
2472 2358 2192
2474 2473 2471
2476 2355 2151
2478 2354 2144
2480 2479 2477
2482 2481 2285
2484 2482 2359
2486 2358 2144
2488 2487 2485
2490 2355 2211
2492 2354 2204
2494 2493 2491
2496 2495 2285
2498 2496 2359
2500 2358 2204
2502 2501 2499
2504 1889 79
2506 2504 87
2508 1886 86
2510 2508 2507
2512 2511 2507
2514 2509 1886
2516 2514 2507
2518 2517 2507
2520 2519 2513
2522 2512 1886
2524 2523 2521
2526 2355 2139
2528 2354 2132
2530 2529 2527
2532 2531 2285
2534 2532 2359
2536 2358 2132
2538 2537 2535
2540 2355 2223
2542 2354 2216
2544 2543 2541
2546 2545 2285
2548 2546 2359
2550 2358 2216
2552 2551 2549
2554 1877 77
2556 2554 91
2558 1874 90
2560 2558 2557
2562 2561 2557
2564 2559 1874
2566 2564 2557
2568 2567 2557
2570 2569 2563
2572 2562 1874
2574 2573 2571
2576 654 52
2578 2576 117
2580 2578 63
2582 2580 56
2584 2582 37
2586 2582 36
2588 645 636
2590 2588 653
2592 2590 36
2594 642 639
2596 2594 653
2598 2596 36
2600 642 636
2602 2600 653
2604 2602 36
2606 650 646
2608 2606 36
2610 2586 2585
2612 2611 2585
2614 2587 2585
2616 2614 2592
2618 2617 2612
2620 2614 2593
2622 2620 2598
2624 2623 2618
2626 2620 2599
2628 2626 2604
2630 2629 2624
2632 2626 2605
2634 2632 2608
2636 2635 2630
2638 2609 636
2640 2638 2605
2642 2640 2599
2644 2643 2599
2646 2645 2593
2648 2646 2587
2650 2648 2585
2652 2651 2585
2654 2653 2637
2656 2636 636
2658 2657 2655
2660 2355 2127
2662 2354 2120
2664 2663 2661
2666 2665 2285
2668 2666 2359
2670 2358 2120
2672 2671 2669
2674 2425 2415
2676 2674 2354
2678 2676 2285
2680 2678 2435
2682 2434 2404
2684 2683 2681
2686 1865 73
2688 2686 95
2690 1862 94
2692 2690 2689
2694 2693 2689
2696 2691 1862
2698 2696 2689
2700 2699 2689
2702 2701 2695
2704 2694 1862
2706 2705 2703
2708 2609 642
2710 2708 2605
2712 2710 2599
2714 2713 2599
2716 2715 2593
2718 2717 2593
2720 2719 2587
2722 2721 2587
2724 2723 2585
2726 2724 2637
2728 2636 642
2730 2729 2727
2732 1853 69
2734 2732 99
2736 1850 98
2738 2736 2735
2740 2739 2735
2742 2737 1850
2744 2742 2735
2746 2745 2735
2748 2747 2741
2750 2740 1850
2752 2751 2749
2754 2609 650
2756 2754 2605
2758 2757 2605
2760 2759 2599
2762 2760 2593
2764 2762 2587
2766 2764 2585
2768 2766 2637
2770 2636 650
2772 2771 2769
2774 2355 2235
2776 2354 2228
2778 2777 2775
2780 2779 2285
2782 2780 2359
2784 2358 2228
2786 2785 2783
2788 2413 52
2790 2788 63
2792 2790 57
2794 2410 43
2796 2794 2793
2798 2797 2793
2800 2795 2410
2802 2800 2793
2804 2803 2793
2806 2805 2799
2808 2798 2410
2810 2809 2807
2812 1841 65
2814 2812 103
2816 1838 102
2818 2816 2815
2820 2819 2815
2822 2817 1838
2824 2822 2815
2826 2825 2815
2828 2827 2821
2830 2820 1838
2832 2831 2829
2834 2355 2115
2836 2354 2108
2838 2837 2835
2840 2839 2285
2842 2840 2359
2844 2358 2108
2846 2845 2843
2848 1829 59
2850 2848 107
2852 1826 106
2854 2852 2851
2856 2855 2851
2858 2853 1826
2860 2858 2851
2862 2861 2851
2864 2863 2857
2866 2856 1826
2868 2867 2865
2870 2424 2025
2872 2425 2022
2874 2873 2871
2876 2875 2354
2878 2876 2285
2880 2022 2019
2882 2023 2016
2884 2883 2881
2886 2885 2424
2888 2425 2016
2890 2889 2887
2892 2891 2354
2894 2892 2285
2896 2022 2016
2898 2896 2013
2900 2897 2010
2902 2901 2899
2904 2903 2424
2906 2425 2010
2908 2907 2905
2910 2909 2354
2912 2910 2285
2914 2896 2010
2916 2914 2007
2918 2915 2004
2920 2919 2917
2922 2921 2424
2924 2425 2004
2926 2925 2923
2928 2927 2354
2930 2928 2285
2932 2914 2004
2934 2932 2001
2936 2933 1998
2938 2937 2935
2940 2939 2424
2942 2425 1998
2944 2943 2941
2946 2945 2354
2948 2946 2285
2950 2878 2431
2952 2430 2022
2954 2953 2951
2956 2894 2431
2958 2430 2016
2960 2959 2957
2962 2912 2431
2964 2430 2010
2966 2965 2963
2968 2930 2431
2970 2430 2004
2972 2971 2969
2974 2948 2431
2976 2430 1998
2978 2977 2975
2980 2355 2103
2982 2354 2096
2984 2983 2981
2986 2985 2285
2988 2986 2359
2990 2358 2096
2992 2991 2989
2994 1721 81
2996 2994 17
2998 1718 16
3000 2998 2997
3002 3001 2997
3004 2999 1718
3006 3004 2997
3008 3007 2997
3010 3009 3003
3012 3002 1718
3014 3013 3011
3016 117 52
3018 3016 63
3020 3018 57
3022 3020 629
3024 626 43
3026 3025 3023
3028 3021 626
3030 3029 3021
3032 626 42
3034 3031 629
3036 3032 626
3038 3037 3035
3040 3039 3027
3042 3026 626
3044 3043 3041
3046 1733 83
3048 3046 19
3050 1730 18
3052 3050 3049
3054 3053 3049
3056 3051 1730
3058 3056 3049
3060 3059 3049
3062 3061 3055
3064 3054 1730
3066 3065 3063
3068 1745 85
3070 3068 21
3072 1742 20
3074 3072 3071
3076 3075 3071
3078 3073 1742
3080 3078 3071
3082 3081 3071
3084 3083 3077
3086 3076 1742
3088 3087 3085
3090 2355 2091
3092 2354 2086
3094 3093 3091
3096 3095 2285
3098 3096 2359
3100 2358 2086
3102 3101 3099
3104 1757 89
3106 3104 23
3108 1754 22
3110 3108 3107
3112 3111 3107
3114 3109 1754
3116 3114 3107
3118 3117 3107
3120 3119 3113
3122 3112 1754
3124 3123 3121
3126 1769 93
3128 3126 25
3130 1766 24
3132 3130 3129
3134 3133 3129
3136 3131 1766
3138 3136 3129
3140 3139 3129
3142 3141 3135
3144 3134 1766
3146 3145 3143
3148 2355 2083
3150 2354 2078
3152 3151 3149
3154 3153 2285
3156 3154 2359
3158 2358 2078
3160 3159 3157
3162 1781 97
3164 3162 27
3166 1778 26
3168 3166 3165
3170 3169 3165
3172 3167 1778
3174 3172 3165
3176 3175 3165
3178 3177 3171
3180 3170 1778
3182 3181 3179
3184 2355 2283
3186 2354 2276
3188 3187 3185
3190 3189 2285
3192 3190 2359
3194 2358 2276
3196 3195 3193
3198 1793 101
3200 3198 29
3202 1790 28
3204 3202 3201
3206 3205 3201
3208 3203 1790
3210 3208 3201
3212 3211 3201
3214 3213 3207
3216 3206 1790
3218 3217 3215
3220 1805 105
3222 3220 31
3224 1802 30
3226 3224 3223
3228 3227 3223
3230 3225 1802
3232 3230 3223
3234 3233 3223
3236 3235 3229
3238 3228 1802
3240 3239 3237
3242 1817 109
3244 3242 33
3246 1814 32
3248 3246 3245
3250 3249 3245
3252 3247 1814
3254 3252 3245
3256 3255 3245
3258 3257 3251
3260 3250 1814
3262 3261 3259
3264 2355 2271
3266 2354 2264
3268 3267 3265
3270 3269 2285
3272 3270 2359
3274 2358 2264
3276 3275 3273
3278 2355 2259
3280 2354 2252
3282 3281 3279
3284 3283 2285
3286 3284 2359
3288 2358 2252
3290 3289 3287
i0 i_hlock5
i1 i_hlock6
i2 i_hlock7
i3 i_hlock8
i4 i_hlock9
i5 controllable_locked
i6 i_hbusreq0
i7 i_hbusreq1
i8 i_hbusreq2
i9 i_hbusreq3
i10 i_hbusreq4
i11 i_hbusreq5
i12 i_hbusreq6
i13 i_hbusreq7
i14 i_hbusreq8
i15 i_hbusreq9
i16 controllable_ndecide
i17 i_hready
i18 i_hlock15
i19 i_hlock14
i20 controllable_busreq
i21 i_hlock13
i22 i_hlock12
i23 i_hlock11
i24 i_hlock10
i25 controllable_hmastlock
i26 controllable_nhgrant0
i27 i_hburst1
i28 controllable_hgrant10
i29 controllable_hmaster3
i30 i_hburst0
i31 controllable_hgrant11
i32 controllable_hmaster2
i33 controllable_hgrant12
i34 controllable_hmaster1
i35 controllable_hgrant13
i36 controllable_hmaster0
i37 controllable_hgrant14
i38 controllable_hgrant15
i39 controllable_hgrant1
i40 controllable_hgrant2
i41 controllable_hgrant3
i42 i_hbusreq15
i43 controllable_hgrant4
i44 i_hbusreq14
i45 controllable_hgrant5
i46 i_hbusreq13
i47 controllable_hgrant6
i48 i_hbusreq12
i49 controllable_hgrant7
i50 i_hbusreq11
i51 controllable_hgrant8
i52 i_hbusreq10
i53 controllable_hgrant9
i54 i_hlock0
i55 i_hlock1
i56 i_hlock2
i57 controllable_nstart
i58 i_hlock3
i59 i_hlock4
l0 n123
l1 reg_controllable_hgrant13_out
l2 sys_fair8done_out
l3 reg_i_hbusreq2_out
l4 reg_controllable_hgrant8_out
l5 reg_i_hbusreq11_out
l6 reg_controllable_hgrant12_out
l7 reg_i_hbusreq3_out
l8 sys_fair14done_out
l9 reg_controllable_hgrant9_out
l10 reg_i_hbusreq12_out
l11 reg_controllable_hgrant11_out
l12 sys_fair9done_out
l13 env_fair1done_out
l14 reg_i_hbusreq4_out
l15 sys_fair7done_out
l16 reg_i_hbusreq13_out
l17 reg_controllable_hgrant10_out
l18 reg_i_hbusreq5_out
l19 reg_i_hbusreq14_out
l20 sys_fair10done_out
l21 sys_fair6done_out
l22 reg_i_hbusreq15_out
l23 reg_i_hbusreq6_out
l24 sys_fair11done_out
l25 reg_controllable_nstart_out
l26 reg_i_hbusreq7_out
l27 reg_stateG10_15_out
l28 reg_i_hbusreq8_out
l29 sys_fair5done_out
l30 sys_fair12done_out
l31 reg_stateG10_14_out
l32 reg_i_hbusreq9_out
l33 reg_stateG3_0_out
l34 sys_fair4done_out
l35 env_fair0done_out
l36 reg_stateG10_13_out
l37 reg_stateG3_1_out
l38 reg_stateG10_12_out
l39 reg_stateG3_2_out
l40 sys_fair13done_out
l41 reg_i_hlock9_out
l42 reg_controllable_hmastlock_out
l43 reg_stateA1_out
l44 reg_stateG10_11_out
l45 sys_fair3done_out
l46 reg_i_hlock8_out
l47 reg_stateG10_10_out
l48 fair_cnt<0>_out
l49 fair_cnt<1>_out
l50 fair_cnt<2>_out
l51 fair_cnt<3>_out
l52 fair_cnt<4>_out
l53 reg_i_hlock7_out
l54 sys_fair2done_out
l55 reg_controllable_hmaster0_out
l56 reg_stateG10_1_out
l57 reg_i_hlock6_out
l58 reg_controllable_hmaster1_out
l59 reg_stateG2_out
l60 reg_stateG10_2_out
l61 reg_i_hlock5_out
l62 reg_controllable_hmaster2_out
l63 reg_stateG10_3_out
l64 reg_i_hlock4_out
l65 sys_fair1done_out
l66 reg_controllable_hmaster3_out
l67 reg_stateG10_4_out
l68 reg_i_hlock3_out
l69 reg_i_hready_out
l70 reg_i_hlock10_out
l71 reg_controllable_ndecide_out
l72 reg_controllable_busreq_out
l73 reg_stateG10_5_out
l74 reg_i_hlock2_out
l75 reg_controllable_hgrant1_out
l76 reg_i_hlock11_out
l77 sys_fair0done_out
l78 reg_stateG10_6_out
l79 reg_i_hlock1_out
l80 reg_i_hlock12_out
l81 reg_controllable_hgrant2_out
l82 sys_fair17done_out
l83 reg_stateG10_7_out
l84 reg_i_hlock0_out
l85 reg_i_hlock13_out
l86 reg_controllable_nhgrant0_out
l87 reg_controllable_hgrant3_out
l88 reg_stateG10_8_out
l89 env_safe_err_happened_out
l90 reg_i_hlock14_out
l91 reg_controllable_hgrant4_out
l92 reg_stateG10_9_out
l93 reg_i_hlock15_out
l94 sys_fair16done_out
l95 reg_controllable_hgrant5_out
l96 reg_controllable_hgrant15_out
l97 reg_i_hbusreq0_out
l98 reg_controllable_hgrant6_out
l99 sys_fair15done_out
l100 reg_controllable_hgrant14_out
l101 reg_controllable_locked_out
l102 reg_i_hbusreq1_out
l103 reg_controllable_hgrant7_out
l104 reg_i_hbusreq10_out
o0 o_err
c
amba_16_new_30
This file was written by ABC on Thu May  7 17:03:34 2015
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv amba16b30.v   ---gives--> amba16b30.mv
> abc -c "read_blif_mv amba16b30.mv; write_aiger -s amba16b30n.aig"   ---gives--> amba16b30n.aig
> aigtoaig amba16b30n.aig amba16b30n.aag   ---gives--> amba16b30n.aag (this file)
Content of amba16b30.v:
module amba_16_new_30(
        o_err,
        i_clk,
        i_hready,
        i_hbusreq0,
        i_hlock0,
        i_hbusreq1,
        i_hlock1,
        i_hbusreq2,
        i_hlock2,
        i_hbusreq3,
        i_hlock3,
        i_hbusreq4,
        i_hlock4,
        i_hbusreq5,
        i_hlock5,
        i_hbusreq6,
        i_hlock6,
        i_hbusreq7,
        i_hlock7,
        i_hbusreq8,
        i_hlock8,
        i_hbusreq9,
        i_hlock9,
        i_hbusreq10,
        i_hlock10,
        i_hbusreq11,
        i_hlock11,
        i_hbusreq12,
        i_hlock12,
        i_hbusreq13,
        i_hlock13,
        i_hbusreq14,
        i_hlock14,
        i_hbusreq15,
        i_hlock15,
        i_hburst0,
        i_hburst1,
        controllable_hmaster0,
        controllable_hmaster1,
        controllable_hmaster2,
        controllable_hmaster3,
        controllable_hmastlock,
        controllable_nstart,
        controllable_ndecide,
        controllable_locked,
        controllable_nhgrant0,
        controllable_hgrant1,
        controllable_hgrant2,
        controllable_hgrant3,
        controllable_hgrant4,
        controllable_hgrant5,
        controllable_hgrant6,
        controllable_hgrant7,
        controllable_hgrant8,
        controllable_hgrant9,
        controllable_hgrant10,
        controllable_hgrant11,
        controllable_hgrant12,
        controllable_hgrant13,
        controllable_hgrant14,
        controllable_hgrant15,
        controllable_busreq);

input i_clk;
input i_hready;
input i_hbusreq0;
input i_hlock0;
input i_hbusreq1;
input i_hlock1;
input i_hbusreq2;
input i_hlock2;
input i_hbusreq3;
input i_hlock3;
input i_hbusreq4;
input i_hlock4;
input i_hbusreq5;
input i_hlock5;
input i_hbusreq6;
input i_hlock6;
input i_hbusreq7;
input i_hlock7;
input i_hbusreq8;
input i_hlock8;
input i_hbusreq9;
input i_hlock9;
input i_hbusreq10;
input i_hlock10;
input i_hbusreq11;
input i_hlock11;
input i_hbusreq12;
input i_hlock12;
input i_hbusreq13;
input i_hlock13;
input i_hbusreq14;
input i_hlock14;
input i_hbusreq15;
input i_hlock15;
input i_hburst0;
input i_hburst1;
input controllable_hmaster0;
input controllable_hmaster1;
input controllable_hmaster2;
input controllable_hmaster3;
input controllable_hmastlock;
input controllable_nstart;
input controllable_ndecide;
input controllable_locked;
input controllable_nhgrant0;
input controllable_hgrant1;
input controllable_hgrant2;
input controllable_hgrant3;
input controllable_hgrant4;
input controllable_hgrant5;
input controllable_hgrant6;
input controllable_hgrant7;
input controllable_hgrant8;
input controllable_hgrant9;
input controllable_hgrant10;
input controllable_hgrant11;
input controllable_hgrant12;
input controllable_hgrant13;
input controllable_hgrant14;
input controllable_hgrant15;
input controllable_busreq;
output o_err;

reg reg_i_hready;
reg reg_i_hbusreq0;
reg reg_i_hlock0;
reg reg_i_hbusreq1;
reg reg_i_hlock1;
reg reg_i_hbusreq2;
reg reg_i_hlock2;
reg reg_i_hbusreq3;
reg reg_i_hlock3;
reg reg_i_hbusreq4;
reg reg_i_hlock4;
reg reg_i_hbusreq5;
reg reg_i_hlock5;
reg reg_i_hbusreq6;
reg reg_i_hlock6;
reg reg_i_hbusreq7;
reg reg_i_hlock7;
reg reg_i_hbusreq8;
reg reg_i_hlock8;
reg reg_i_hbusreq9;
reg reg_i_hlock9;
reg reg_i_hbusreq10;
reg reg_i_hlock10;
reg reg_i_hbusreq11;
reg reg_i_hlock11;
reg reg_i_hbusreq12;
reg reg_i_hlock12;
reg reg_i_hbusreq13;
reg reg_i_hlock13;
reg reg_i_hbusreq14;
reg reg_i_hlock14;
reg reg_i_hbusreq15;
reg reg_i_hlock15;
reg reg_controllable_hmaster0;
reg reg_controllable_hmaster1;
reg reg_controllable_hmaster2;
reg reg_controllable_hmaster3;
reg reg_controllable_hmastlock;
reg reg_controllable_nstart;
reg reg_controllable_ndecide;
reg reg_controllable_locked;
reg reg_controllable_nhgrant0;
reg reg_controllable_hgrant1;
reg reg_controllable_hgrant2;
reg reg_controllable_hgrant3;
reg reg_controllable_hgrant4;
reg reg_controllable_hgrant5;
reg reg_controllable_hgrant6;
reg reg_controllable_hgrant7;
reg reg_controllable_hgrant8;
reg reg_controllable_hgrant9;
reg reg_controllable_hgrant10;
reg reg_controllable_hgrant11;
reg reg_controllable_hgrant12;
reg reg_controllable_hgrant13;
reg reg_controllable_hgrant14;
reg reg_controllable_hgrant15;
reg reg_controllable_busreq;
reg reg_stateA1;
reg reg_stateG2;
reg reg_stateG3_0;
reg reg_stateG3_1;
reg reg_stateG3_2;
reg reg_stateG10_1;
reg reg_stateG10_2;
reg reg_stateG10_3;
reg reg_stateG10_4;
reg reg_stateG10_5;
reg reg_stateG10_6;
reg reg_stateG10_7;
reg reg_stateG10_8;
reg reg_stateG10_9;
reg reg_stateG10_10;
reg reg_stateG10_11;
reg reg_stateG10_12;
reg reg_stateG10_13;
reg reg_stateG10_14;
reg reg_stateG10_15;
reg env_safe_err_happened;
reg env_fair0done;
reg env_fair1done;
reg sys_fair0done;
reg sys_fair1done;
reg sys_fair2done;
reg sys_fair3done;
reg sys_fair4done;
reg sys_fair5done;
reg sys_fair6done;
reg sys_fair7done;
reg sys_fair8done;
reg sys_fair9done;
reg sys_fair10done;
reg sys_fair11done;
reg sys_fair12done;
reg sys_fair13done;
reg sys_fair14done;
reg sys_fair15done;
reg sys_fair16done;
reg sys_fair17done;
reg [4:0] fair_cnt;

wire env_safe_err0;
wire env_safe_err1;
wire env_safe_err2;
wire env_safe_err3;
wire env_safe_err4;
wire env_safe_err5;
wire env_safe_err6;
wire env_safe_err7;
wire env_safe_err8;
wire env_safe_err9;
wire env_safe_err10;
wire env_safe_err11;
wire env_safe_err12;
wire env_safe_err13;
wire env_safe_err14;
wire env_safe_err15;
wire env_safe_err;

wire sys_safe_err0;
wire sys_safe_err1;
wire sys_safe_err2;
wire sys_safe_err3;
wire sys_safe_err4;
wire sys_safe_err5;
wire sys_safe_err6;
wire sys_safe_err7;
wire sys_safe_err8;
wire sys_safe_err9;
wire sys_safe_err10;
wire sys_safe_err11;
wire sys_safe_err12;
wire sys_safe_err13;
wire sys_safe_err14;
wire sys_safe_err15;
wire sys_safe_err16;
wire sys_safe_err17;
wire sys_safe_err18;
wire sys_safe_err19;
wire sys_safe_err20;
wire sys_safe_err21;
wire sys_safe_err22;
wire sys_safe_err23;
wire sys_safe_err24;
wire sys_safe_err25;
wire sys_safe_err26;
wire sys_safe_err27;
wire sys_safe_err28;
wire sys_safe_err29;
wire sys_safe_err30;
wire sys_safe_err31;
wire sys_safe_err32;
wire sys_safe_err33;
wire sys_safe_err34;
wire sys_safe_err35;
wire sys_safe_err36;
wire sys_safe_err37;
wire sys_safe_err38;
wire sys_safe_err39;
wire sys_safe_err40;
wire sys_safe_err41;
wire sys_safe_err42;
wire sys_safe_err43;
wire sys_safe_err44;
wire sys_safe_err45;
wire sys_safe_err46;
wire sys_safe_err47;
wire sys_safe_err48;
wire sys_safe_err49;
wire sys_safe_err50;
wire sys_safe_err51;
wire sys_safe_err52;
wire sys_safe_err53;
wire sys_safe_err54;
wire sys_safe_err55;
wire sys_safe_err56;
wire sys_safe_err57;
wire sys_safe_err58;
wire sys_safe_err59;
wire sys_safe_err60;
wire sys_safe_err61;
wire sys_safe_err62;
wire sys_safe_err63;
wire sys_safe_err64;
wire sys_safe_err65;
wire sys_safe_err66;
wire sys_safe_err67;
wire sys_safe_err68;
wire sys_safe_err69;
wire sys_safe_err70;
wire sys_safe_err71;
wire sys_safe_err72;
wire sys_safe_err73;
wire sys_safe_err74;
wire sys_safe_err75;
wire sys_safe_err76;
wire sys_safe_err77;
wire sys_safe_err78;
wire sys_safe_err79;
wire sys_safe_err80;
wire sys_safe_err81;
wire sys_safe_err82;
wire sys_safe_err83;
wire sys_safe_err84;
wire sys_safe_err85;
wire sys_safe_err86;
wire sys_safe_err87;
wire sys_safe_err88;
wire sys_safe_err89;
wire sys_safe_err90;
wire sys_safe_err91;
wire sys_safe_err92;
wire sys_safe_err93;
wire sys_safe_err94;
wire sys_safe_err95;
wire sys_safe_err96;
wire sys_safe_err97;
wire sys_safe_err98;
wire sys_safe_err99;
wire sys_safe_err100;
wire sys_safe_err101;
wire sys_safe_err102;
wire sys_safe_err103;
wire sys_safe_err104;
wire sys_safe_err105;
wire sys_safe_err106;
wire sys_safe_err107;
wire sys_safe_err108;
wire sys_safe_err109;
wire sys_safe_err110;
wire sys_safe_err111;
wire sys_safe_err112;
wire sys_safe_err113;
wire sys_safe_err114;
wire sys_safe_err115;
wire sys_safe_err116;
wire sys_safe_err117;
wire sys_safe_err;

wire env_fair0;
wire env_fair1;

wire sys_fair0;
wire sys_fair1;
wire sys_fair2;
wire sys_fair3;
wire sys_fair4;
wire sys_fair5;
wire sys_fair6;
wire sys_fair7;
wire sys_fair8;
wire sys_fair9;
wire sys_fair10;
wire sys_fair11;
wire sys_fair12;
wire sys_fair13;
wire sys_fair14;
wire sys_fair15;
wire sys_fair16;
wire sys_fair17;
wire progress_in_sys_fair;
wire all_env_fair_fulfilled;
wire all_sys_fair_fulfilled;
wire fair_err;
wire o_err;

// =============================================================
//                        ENV_TRANSITION:
// =============================================================
// Assumption 3:
// G( hlock0=1 -> hbusreq0=1 );
assign env_safe_err0 =  ~(~ i_hlock0 | i_hbusreq0);

// Assumption 3:
// G( hlock1=1 -> hbusreq1=1 );
assign env_safe_err1 =  ~(~ i_hlock1 | i_hbusreq1);

// Assumption 3:
// G( hlock2=1 -> hbusreq2=1 );
assign env_safe_err2 =  ~(~ i_hlock2 | i_hbusreq2);

// Assumption 3:
// G( hlock3=1 -> hbusreq3=1 );
assign env_safe_err3 =  ~(~ i_hlock3 | i_hbusreq3);

// Assumption 3:
// G( hlock4=1 -> hbusreq4=1 );
assign env_safe_err4 =  ~(~ i_hlock4 | i_hbusreq4);

// Assumption 3:
// G( hlock5=1 -> hbusreq5=1 );
assign env_safe_err5 =  ~(~ i_hlock5 | i_hbusreq5);

// Assumption 3:
// G( hlock6=1 -> hbusreq6=1 );
assign env_safe_err6 =  ~(~ i_hlock6 | i_hbusreq6);

// Assumption 3:
// G( hlock7=1 -> hbusreq7=1 );
assign env_safe_err7 =  ~(~ i_hlock7 | i_hbusreq7);

// Assumption 3:
// G( hlock8=1 -> hbusreq8=1 );
assign env_safe_err8 =  ~(~ i_hlock8 | i_hbusreq8);

// Assumption 3:
// G( hlock9=1 -> hbusreq9=1 );
assign env_safe_err9 =  ~(~ i_hlock9 | i_hbusreq9);

// Assumption 3:
// G( hlock10=1 -> hbusreq10=1 );
assign env_safe_err10 =  ~(~ i_hlock10 | i_hbusreq10);

// Assumption 3:
// G( hlock11=1 -> hbusreq11=1 );
assign env_safe_err11 =  ~(~ i_hlock11 | i_hbusreq11);

// Assumption 3:
// G( hlock12=1 -> hbusreq12=1 );
assign env_safe_err12 =  ~(~ i_hlock12 | i_hbusreq12);

// Assumption 3:
// G( hlock13=1 -> hbusreq13=1 );
assign env_safe_err13 =  ~(~ i_hlock13 | i_hbusreq13);

// Assumption 3:
// G( hlock14=1 -> hbusreq14=1 );
assign env_safe_err14 =  ~(~ i_hlock14 | i_hbusreq14);

// Assumption 3:
// G( hlock15=1 -> hbusreq15=1 );
assign env_safe_err15 =  ~(~ i_hlock15 | i_hbusreq15);

// collecting together the safety error bits:
assign env_safe_err = env_safe_err0 |
                      env_safe_err1 |
                      env_safe_err2 |
                      env_safe_err3 |
                      env_safe_err4 |
                      env_safe_err5 |
                      env_safe_err6 |
                      env_safe_err7 |
                      env_safe_err8 |
                      env_safe_err9 |
                      env_safe_err10 |
                      env_safe_err11 |
                      env_safe_err12 |
                      env_safe_err13 |
                      env_safe_err14 |
                      env_safe_err15;

// =============================================================
//                        SYS_TRANSITION:
// =============================================================
// G((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0) -> (hbusreq0=0 <-> busreq=0));
assign sys_safe_err0 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq0 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0) -> (hbusreq1=0 <-> busreq=0));
assign sys_safe_err1 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq1 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0) -> (hbusreq2=0 <-> busreq=0));
assign sys_safe_err2 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq2 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0) -> (hbusreq3=0 <-> busreq=0));
assign sys_safe_err3 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq3 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0) -> (hbusreq4=0 <-> busreq=0));
assign sys_safe_err4 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq4 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0) -> (hbusreq5=0 <-> busreq=0));
assign sys_safe_err5 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq5 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0) -> (hbusreq6=0 <-> busreq=0));
assign sys_safe_err6 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq6 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0) -> (hbusreq7=0 <-> busreq=0));
assign sys_safe_err7 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq7 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1) -> (hbusreq8=0 <-> busreq=0));
assign sys_safe_err8 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq8 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1) -> (hbusreq9=0 <-> busreq=0));
assign sys_safe_err9 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq9 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1) -> (hbusreq10=0 <-> busreq=0));
assign sys_safe_err10 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq10 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1) -> (hbusreq11=0 <-> busreq=0));
assign sys_safe_err11 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq11 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1) -> (hbusreq12=0 <-> busreq=0));
assign sys_safe_err12 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 )|(~i_hbusreq12 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1) -> (hbusreq13=0 <-> busreq=0));
assign sys_safe_err13 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 )|(~i_hbusreq13 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1) -> (hbusreq14=0 <-> busreq=0));
assign sys_safe_err14 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 )|(~i_hbusreq14 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1) -> (hbusreq15=0 <-> busreq=0));
assign sys_safe_err15 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 )|(~i_hbusreq15 ^~ (~controllable_busreq)));

// Guarantee 1:
// G((hready=0) -> X(start=0));
assign sys_safe_err16 =  ~( reg_i_hready | controllable_nstart );

// G(((stateG2=1) * (start=1)) -> FALSE;
assign sys_safe_err17 =  ~( ~(reg_stateG2 & ~controllable_nstart) | 0 );

// G(((stateG3_0=1) * (stateG3_1=0) * (stateG3_2=0) * ((start=1))) -> FALSE);
// G(((stateG3_0=0) * (stateG3_1=1) * (stateG3_2=0) * ((start=1))) -> FALSE);
// G(((stateG3_0=1) * (stateG3_1=1) * (stateG3_2=0) * ((start=1))) -> FALSE);
// G(((stateG3_0=0) * (stateG3_1=0) * (stateG3_2=1) * ((start=1))) -> FALSE);
// all these rules can be summarized as: only in state 000, start=1 is allowed:
assign sys_safe_err18 =  (reg_stateG3_0 | reg_stateG3_1 | reg_stateG3_2) & ~controllable_nstart;

// G( (hready=1) -> (   (hgrant0=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err19 =  ~( ~(reg_i_hready) | ( ~reg_controllable_nhgrant0 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant1=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err20 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant1 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant2=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err21 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant2 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant3=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err22 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant3 ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant4=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err23 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant4 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant5=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err24 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant5 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant6=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err25 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant6 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant7=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err26 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant7 ^~ ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant8=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err27 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant8 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant9=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err28 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant9 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant10=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err29 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant10 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant11=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err30 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant11 ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant12=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=1))  ) );
assign sys_safe_err31 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant12 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant13=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=1))  ) );
assign sys_safe_err32 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant13 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant14=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=1))  ) );
assign sys_safe_err33 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant14 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant15=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=1))  ) );
assign sys_safe_err34 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant15 ^~ ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 ) ) );

// HMASTLOCK:
// G(  (hready=1) -> (locked=0 <-> X(hmastlock=0) ) );
assign sys_safe_err35 =  ~( ~(reg_i_hready) | (~reg_controllable_locked ^~ ~controllable_hmastlock) );

// Master 0:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err36 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 1:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err37 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 2:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err38 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 3:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err39 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 4:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err40 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 5:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err41 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 6:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err42 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 7:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err43 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 8:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err44 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 9:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err45 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 10:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err46 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 11:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err47 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 12:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=1)) ) );
assign sys_safe_err48 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & reg_controllable_hmaster3 ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 )) );

// Master 13:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=1)) ) );
assign sys_safe_err49 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & reg_controllable_hmaster3 ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 )) );

// Master 14:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=1)) ) );
assign sys_safe_err50 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & reg_controllable_hmaster2 & reg_controllable_hmaster3 ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 )) );

// Master 15:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=1)) ) );
assign sys_safe_err51 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & reg_controllable_hmaster2 & reg_controllable_hmaster3 ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 )) );

// Guarantee 6.2:
// G( ((X(start=0))) -> ( (hmastlock=1) <-> X(hmastlock=1)) );
assign sys_safe_err52 =  ~( ~(controllable_nstart) | ( reg_controllable_hmastlock ^~ controllable_hmastlock) );

// G( (decide=1  *  hlock0=1  *  X(hgrant0=1) )->X(locked=1));
assign sys_safe_err53 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock0 & ~controllable_nhgrant0) | (controllable_locked) );

// G((decide=1  *  hlock0=0  *  X(hgrant0=1))->X(locked=0));
assign sys_safe_err54 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock0 & ~controllable_nhgrant0) | (~controllable_locked) );

// G( (decide=1  *  hlock1=1  *  X(hgrant1=1) )->X(locked=1));
assign sys_safe_err55 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock1 & controllable_hgrant1) | (controllable_locked) );

// G((decide=1  *  hlock1=0  *  X(hgrant1=1))->X(locked=0));
assign sys_safe_err56 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock1 & controllable_hgrant1) | (~controllable_locked) );

// G( (decide=1  *  hlock2=1  *  X(hgrant2=1) )->X(locked=1));
assign sys_safe_err57 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock2 & controllable_hgrant2) | (controllable_locked) );

// G((decide=1  *  hlock2=0  *  X(hgrant2=1))->X(locked=0));
assign sys_safe_err58 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock2 & controllable_hgrant2) | (~controllable_locked) );

// G( (decide=1  *  hlock3=1  *  X(hgrant3=1) )->X(locked=1));
assign sys_safe_err59 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock3 & controllable_hgrant3) | (controllable_locked) );

// G((decide=1  *  hlock3=0  *  X(hgrant3=1))->X(locked=0));
assign sys_safe_err60 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock3 & controllable_hgrant3) | (~controllable_locked) );

// G( (decide=1  *  hlock4=1  *  X(hgrant4=1) )->X(locked=1));
assign sys_safe_err61 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock4 & controllable_hgrant4) | (controllable_locked) );

// G((decide=1  *  hlock4=0  *  X(hgrant4=1))->X(locked=0));
assign sys_safe_err62 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock4 & controllable_hgrant4) | (~controllable_locked) );

// G( (decide=1  *  hlock5=1  *  X(hgrant5=1) )->X(locked=1));
assign sys_safe_err63 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock5 & controllable_hgrant5) | (controllable_locked) );

// G((decide=1  *  hlock5=0  *  X(hgrant5=1))->X(locked=0));
assign sys_safe_err64 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock5 & controllable_hgrant5) | (~controllable_locked) );

// G( (decide=1  *  hlock6=1  *  X(hgrant6=1) )->X(locked=1));
assign sys_safe_err65 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock6 & controllable_hgrant6) | (controllable_locked) );

// G((decide=1  *  hlock6=0  *  X(hgrant6=1))->X(locked=0));
assign sys_safe_err66 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock6 & controllable_hgrant6) | (~controllable_locked) );

// G( (decide=1  *  hlock7=1  *  X(hgrant7=1) )->X(locked=1));
assign sys_safe_err67 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock7 & controllable_hgrant7) | (controllable_locked) );

// G((decide=1  *  hlock7=0  *  X(hgrant7=1))->X(locked=0));
assign sys_safe_err68 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock7 & controllable_hgrant7) | (~controllable_locked) );

// G( (decide=1  *  hlock8=1  *  X(hgrant8=1) )->X(locked=1));
assign sys_safe_err69 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock8 & controllable_hgrant8) | (controllable_locked) );

// G((decide=1  *  hlock8=0  *  X(hgrant8=1))->X(locked=0));
assign sys_safe_err70 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock8 & controllable_hgrant8) | (~controllable_locked) );

// G( (decide=1  *  hlock9=1  *  X(hgrant9=1) )->X(locked=1));
assign sys_safe_err71 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock9 & controllable_hgrant9) | (controllable_locked) );

// G((decide=1  *  hlock9=0  *  X(hgrant9=1))->X(locked=0));
assign sys_safe_err72 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock9 & controllable_hgrant9) | (~controllable_locked) );

// G( (decide=1  *  hlock10=1  *  X(hgrant10=1) )->X(locked=1));
assign sys_safe_err73 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock10 & controllable_hgrant10) | (controllable_locked) );

// G((decide=1  *  hlock10=0  *  X(hgrant10=1))->X(locked=0));
assign sys_safe_err74 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock10 & controllable_hgrant10) | (~controllable_locked) );

// G( (decide=1  *  hlock11=1  *  X(hgrant11=1) )->X(locked=1));
assign sys_safe_err75 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock11 & controllable_hgrant11) | (controllable_locked) );

// G((decide=1  *  hlock11=0  *  X(hgrant11=1))->X(locked=0));
assign sys_safe_err76 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock11 & controllable_hgrant11) | (~controllable_locked) );

// G( (decide=1  *  hlock12=1  *  X(hgrant12=1) )->X(locked=1));
assign sys_safe_err77 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock12 & controllable_hgrant12) | (controllable_locked) );

// G((decide=1  *  hlock12=0  *  X(hgrant12=1))->X(locked=0));
assign sys_safe_err78 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock12 & controllable_hgrant12) | (~controllable_locked) );

// G( (decide=1  *  hlock13=1  *  X(hgrant13=1) )->X(locked=1));
assign sys_safe_err79 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock13 & controllable_hgrant13) | (controllable_locked) );

// G((decide=1  *  hlock13=0  *  X(hgrant13=1))->X(locked=0));
assign sys_safe_err80 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock13 & controllable_hgrant13) | (~controllable_locked) );

// G( (decide=1  *  hlock14=1  *  X(hgrant14=1) )->X(locked=1));
assign sys_safe_err81 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock14 & controllable_hgrant14) | (controllable_locked) );

// G((decide=1  *  hlock14=0  *  X(hgrant14=1))->X(locked=0));
assign sys_safe_err82 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock14 & controllable_hgrant14) | (~controllable_locked) );

// G( (decide=1  *  hlock15=1  *  X(hgrant15=1) )->X(locked=1));
assign sys_safe_err83 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock15 & controllable_hgrant15) | (controllable_locked) );

// G((decide=1  *  hlock15=0  *  X(hgrant15=1))->X(locked=0));
assign sys_safe_err84 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock15 & controllable_hgrant15) | (~controllable_locked) );

// G( (decide=0) -> (  ((hgrant0=0)<->X(hgrant0=0))  ));
assign sys_safe_err85 =  ~( ~(reg_controllable_ndecide) | (reg_controllable_nhgrant0 ^~ controllable_nhgrant0) );

// G( (decide=0) -> (  ((hgrant1=0)<->X(hgrant1=0))  ));
assign sys_safe_err86 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant1 ^~ ~controllable_hgrant1) );

// G( (decide=0) -> (  ((hgrant2=0)<->X(hgrant2=0))  ));
assign sys_safe_err87 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant2 ^~ ~controllable_hgrant2) );

// G( (decide=0) -> (  ((hgrant3=0)<->X(hgrant3=0))  ));
assign sys_safe_err88 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant3 ^~ ~controllable_hgrant3) );

// G( (decide=0) -> (  ((hgrant4=0)<->X(hgrant4=0))  ));
assign sys_safe_err89 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant4 ^~ ~controllable_hgrant4) );

// G( (decide=0) -> (  ((hgrant5=0)<->X(hgrant5=0))  ));
assign sys_safe_err90 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant5 ^~ ~controllable_hgrant5) );

// G( (decide=0) -> (  ((hgrant6=0)<->X(hgrant6=0))  ));
assign sys_safe_err91 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant6 ^~ ~controllable_hgrant6) );

// G( (decide=0) -> (  ((hgrant7=0)<->X(hgrant7=0))  ));
assign sys_safe_err92 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant7 ^~ ~controllable_hgrant7) );

// G( (decide=0) -> (  ((hgrant8=0)<->X(hgrant8=0))  ));
assign sys_safe_err93 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant8 ^~ ~controllable_hgrant8) );

// G( (decide=0) -> (  ((hgrant9=0)<->X(hgrant9=0))  ));
assign sys_safe_err94 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant9 ^~ ~controllable_hgrant9) );

// G( (decide=0) -> (  ((hgrant10=0)<->X(hgrant10=0))  ));
assign sys_safe_err95 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant10 ^~ ~controllable_hgrant10) );

// G( (decide=0) -> (  ((hgrant11=0)<->X(hgrant11=0))  ));
assign sys_safe_err96 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant11 ^~ ~controllable_hgrant11) );

// G( (decide=0) -> (  ((hgrant12=0)<->X(hgrant12=0))  ));
assign sys_safe_err97 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant12 ^~ ~controllable_hgrant12) );

// G( (decide=0) -> (  ((hgrant13=0)<->X(hgrant13=0))  ));
assign sys_safe_err98 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant13 ^~ ~controllable_hgrant13) );

// G( (decide=0) -> (  ((hgrant14=0)<->X(hgrant14=0))  ));
assign sys_safe_err99 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant14 ^~ ~controllable_hgrant14) );

// G( (decide=0) -> (  ((hgrant15=0)<->X(hgrant15=0))  ));
assign sys_safe_err100 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant15 ^~ ~controllable_hgrant15) );

// G((decide=0)->(locked=0 <-> X(locked=0)));
assign sys_safe_err101 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_locked ^~ ~controllable_locked) );

// G(((stateG10_1=1) * (((hgrant1=1)) * (hbusreq1=0)))->FALSE);
assign sys_safe_err102 =  ~( ~(reg_stateG10_1 & (controllable_hgrant1 & ~i_hbusreq1)) | 0 );

// G(((stateG10_2=1) * (((hgrant2=1)) * (hbusreq2=0)))->FALSE);
assign sys_safe_err103 =  ~( ~(reg_stateG10_2 & (controllable_hgrant2 & ~i_hbusreq2)) | 0 );

// G(((stateG10_3=1) * (((hgrant3=1)) * (hbusreq3=0)))->FALSE);
assign sys_safe_err104 =  ~( ~(reg_stateG10_3 & (controllable_hgrant3 & ~i_hbusreq3)) | 0 );

// G(((stateG10_4=1) * (((hgrant4=1)) * (hbusreq4=0)))->FALSE);
assign sys_safe_err105 =  ~( ~(reg_stateG10_4 & (controllable_hgrant4 & ~i_hbusreq4)) | 0 );

// G(((stateG10_5=1) * (((hgrant5=1)) * (hbusreq5=0)))->FALSE);
assign sys_safe_err106 =  ~( ~(reg_stateG10_5 & (controllable_hgrant5 & ~i_hbusreq5)) | 0 );

// G(((stateG10_6=1) * (((hgrant6=1)) * (hbusreq6=0)))->FALSE);
assign sys_safe_err107 =  ~( ~(reg_stateG10_6 & (controllable_hgrant6 & ~i_hbusreq6)) | 0 );

// G(((stateG10_7=1) * (((hgrant7=1)) * (hbusreq7=0)))->FALSE);
assign sys_safe_err108 =  ~( ~(reg_stateG10_7 & (controllable_hgrant7 & ~i_hbusreq7)) | 0 );

// G(((stateG10_8=1) * (((hgrant8=1)) * (hbusreq8=0)))->FALSE);
assign sys_safe_err109 =  ~( ~(reg_stateG10_8 & (controllable_hgrant8 & ~i_hbusreq8)) | 0 );

// G(((stateG10_9=1) * (((hgrant9=1)) * (hbusreq9=0)))->FALSE);
assign sys_safe_err110 =  ~( ~(reg_stateG10_9 & (controllable_hgrant9 & ~i_hbusreq9)) | 0 );

// G(((stateG10_10=1) * (((hgrant10=1)) * (hbusreq10=0)))->FALSE);
assign sys_safe_err111 =  ~( ~(reg_stateG10_10 & (controllable_hgrant10 & ~i_hbusreq10)) | 0 );

// G(((stateG10_11=1) * (((hgrant11=1)) * (hbusreq11=0)))->FALSE);
assign sys_safe_err112 =  ~( ~(reg_stateG10_11 & (controllable_hgrant11 & ~i_hbusreq11)) | 0 );

// G(((stateG10_12=1) * (((hgrant12=1)) * (hbusreq12=0)))->FALSE);
assign sys_safe_err113 =  ~( ~(reg_stateG10_12 & (controllable_hgrant12 & ~i_hbusreq12)) | 0 );

// G(((stateG10_13=1) * (((hgrant13=1)) * (hbusreq13=0)))->FALSE);
assign sys_safe_err114 =  ~( ~(reg_stateG10_13 & (controllable_hgrant13 & ~i_hbusreq13)) | 0 );

// G(((stateG10_14=1) * (((hgrant14=1)) * (hbusreq14=0)))->FALSE);
assign sys_safe_err115 =  ~( ~(reg_stateG10_14 & (controllable_hgrant14 & ~i_hbusreq14)) | 0 );

// G(((stateG10_15=1) * (((hgrant15=1)) * (hbusreq15=0)))->FALSE);
assign sys_safe_err116 =  ~( ~(reg_stateG10_15 & (controllable_hgrant15 & ~i_hbusreq15)) | 0 );

// default master
// G((decide=1  *  hbusreq0=0  *  hbusreq1=0  *  hbusreq2=0  *  hbusreq3=0  *  hbusreq4=0  *  hbusreq5=0  *  hbusreq6=0  *  hbusreq7=0  *  hbusreq8=0  *  hbusreq9=0  *  hbusreq10=0  *  hbusreq11=0  *  hbusreq12=0  *  hbusreq13=0  *  hbusreq14=0  *  hbusreq15=0) -> X(hgrant0=1));
assign sys_safe_err117 =  ~( ~(~reg_controllable_ndecide & (~reg_i_hbusreq0 & ~reg_i_hbusreq1 & ~reg_i_hbusreq2 & ~reg_i_hbusreq3 & ~reg_i_hbusreq4 & ~reg_i_hbusreq5 & ~reg_i_hbusreq6 & ~reg_i_hbusreq7 & ~reg_i_hbusreq8 & ~reg_i_hbusreq9 & ~reg_i_hbusreq10 & ~reg_i_hbusreq11 & ~reg_i_hbusreq12 & ~reg_i_hbusreq13 & ~reg_i_hbusreq14 & ~reg_i_hbusreq15)) | (~controllable_nhgrant0) );

// collecting together the safety error bits:
assign sys_safe_err = sys_safe_err0 |
                      sys_safe_err1 |
                      sys_safe_err2 |
                      sys_safe_err3 |
                      sys_safe_err4 |
                      sys_safe_err5 |
                      sys_safe_err6 |
                      sys_safe_err7 |
                      sys_safe_err8 |
                      sys_safe_err9 |
                      sys_safe_err10 |
                      sys_safe_err11 |
                      sys_safe_err12 |
                      sys_safe_err13 |
                      sys_safe_err14 |
                      sys_safe_err15 |
                      sys_safe_err16 |
                      sys_safe_err17 |
                      sys_safe_err18 |
                      sys_safe_err19 |
                      sys_safe_err20 |
                      sys_safe_err21 |
                      sys_safe_err22 |
                      sys_safe_err23 |
                      sys_safe_err24 |
                      sys_safe_err25 |
                      sys_safe_err26 |
                      sys_safe_err27 |
                      sys_safe_err28 |
                      sys_safe_err29 |
                      sys_safe_err30 |
                      sys_safe_err31 |
                      sys_safe_err32 |
                      sys_safe_err33 |
                      sys_safe_err34 |
                      sys_safe_err35 |
                      sys_safe_err36 |
                      sys_safe_err37 |
                      sys_safe_err38 |
                      sys_safe_err39 |
                      sys_safe_err40 |
                      sys_safe_err41 |
                      sys_safe_err42 |
                      sys_safe_err43 |
                      sys_safe_err44 |
                      sys_safe_err45 |
                      sys_safe_err46 |
                      sys_safe_err47 |
                      sys_safe_err48 |
                      sys_safe_err49 |
                      sys_safe_err50 |
                      sys_safe_err51 |
                      sys_safe_err52 |
                      sys_safe_err53 |
                      sys_safe_err54 |
                      sys_safe_err55 |
                      sys_safe_err56 |
                      sys_safe_err57 |
                      sys_safe_err58 |
                      sys_safe_err59 |
                      sys_safe_err60 |
                      sys_safe_err61 |
                      sys_safe_err62 |
                      sys_safe_err63 |
                      sys_safe_err64 |
                      sys_safe_err65 |
                      sys_safe_err66 |
                      sys_safe_err67 |
                      sys_safe_err68 |
                      sys_safe_err69 |
                      sys_safe_err70 |
                      sys_safe_err71 |
                      sys_safe_err72 |
                      sys_safe_err73 |
                      sys_safe_err74 |
                      sys_safe_err75 |
                      sys_safe_err76 |
                      sys_safe_err77 |
                      sys_safe_err78 |
                      sys_safe_err79 |
                      sys_safe_err80 |
                      sys_safe_err81 |
                      sys_safe_err82 |
                      sys_safe_err83 |
                      sys_safe_err84 |
                      sys_safe_err85 |
                      sys_safe_err86 |
                      sys_safe_err87 |
                      sys_safe_err88 |
                      sys_safe_err89 |
                      sys_safe_err90 |
                      sys_safe_err91 |
                      sys_safe_err92 |
                      sys_safe_err93 |
                      sys_safe_err94 |
                      sys_safe_err95 |
                      sys_safe_err96 |
                      sys_safe_err97 |
                      sys_safe_err98 |
                      sys_safe_err99 |
                      sys_safe_err100 |
                      sys_safe_err101 |
                      sys_safe_err102 |
                      sys_safe_err103 |
                      sys_safe_err104 |
                      sys_safe_err105 |
                      sys_safe_err106 |
                      sys_safe_err107 |
                      sys_safe_err108 |
                      sys_safe_err109 |
                      sys_safe_err110 |
                      sys_safe_err111 |
                      sys_safe_err112 |
                      sys_safe_err113 |
                      sys_safe_err114 |
                      sys_safe_err115 |
                      sys_safe_err116 |
                      sys_safe_err117;

// =============================================================
//                          ENV_FAIRNESS:
// =============================================================
// Assumption 1: 
// G(F(stateA1=0));
assign env_fair0 =  ~reg_stateA1;

// Assumption 2:
// G(F(hready=1));
assign env_fair1 =  i_hready;

assign all_env_fair_fulfilled = (env_fair0done | env_fair0) &
                                (env_fair1done | env_fair1);

// =============================================================
//                          SYS_FAIRNESS:
// =============================================================
// Guarantee 2:
// G(F(stateG2=0));
assign sys_fair0 = ~reg_stateG2;

// Guarantee 3:
// G(F((stateG3_0=0)  *  (stateG3_1=0)  *  (stateG3_2=0)));
assign sys_fair1 =  (~reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2);

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0))  |  hbusreq0=0));
assign sys_fair2 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq0;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0))  |  hbusreq1=0));
assign sys_fair3 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq1;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0))  |  hbusreq2=0));
assign sys_fair4 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq2;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0))  |  hbusreq3=0));
assign sys_fair5 =  ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq3;

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0))  |  hbusreq4=0));
assign sys_fair6 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq4;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0))  |  hbusreq5=0));
assign sys_fair7 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq5;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0))  |  hbusreq6=0));
assign sys_fair8 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq6;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0))  |  hbusreq7=0));
assign sys_fair9 =  ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq7;

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1))  |  hbusreq8=0));
assign sys_fair10 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq8;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1))  |  hbusreq9=0));
assign sys_fair11 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq9;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1))  |  hbusreq10=0));
assign sys_fair12 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq10;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1))  |  hbusreq11=0));
assign sys_fair13 =  ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq11;

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1))  |  hbusreq12=0));
assign sys_fair14 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 ) | ~i_hbusreq12;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1))  |  hbusreq13=0));
assign sys_fair15 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 ) | ~i_hbusreq13;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1))  |  hbusreq14=0));
assign sys_fair16 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 ) | ~i_hbusreq14;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1))  |  hbusreq15=0));
assign sys_fair17 =  ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 ) | ~i_hbusreq15;

assign all_sys_fair_fulfilled = (sys_fair0done | sys_fair0) &
                                (sys_fair1done | sys_fair1) &
                                (sys_fair2done | sys_fair2) &
                                (sys_fair3done | sys_fair3) &
                                (sys_fair4done | sys_fair4) &
                                (sys_fair5done | sys_fair5) &
                                (sys_fair6done | sys_fair6) &
                                (sys_fair7done | sys_fair7) &
                                (sys_fair8done | sys_fair8) &
                                (sys_fair9done | sys_fair9) &
                                (sys_fair10done | sys_fair10) &
                                (sys_fair11done | sys_fair11) &
                                (sys_fair12done | sys_fair12) &
                                (sys_fair13done | sys_fair13) &
                                (sys_fair14done | sys_fair14) &
                                (sys_fair15done | sys_fair15) &
                                (sys_fair16done | sys_fair16) &
                                (sys_fair17done | sys_fair17);
assign progress_in_sys_fair = (~sys_fair0done & sys_fair0) |
                                (~sys_fair1done & sys_fair1) |
                                (~sys_fair2done & sys_fair2) |
                                (~sys_fair3done & sys_fair3) |
                                (~sys_fair4done & sys_fair4) |
                                (~sys_fair5done & sys_fair5) |
                                (~sys_fair6done & sys_fair6) |
                                (~sys_fair7done & sys_fair7) |
                                (~sys_fair8done & sys_fair8) |
                                (~sys_fair9done & sys_fair9) |
                                (~sys_fair10done & sys_fair10) |
                                (~sys_fair11done & sys_fair11) |
                                (~sys_fair12done & sys_fair12) |
                                (~sys_fair13done & sys_fair13) |
                                (~sys_fair14done & sys_fair14) |
                                (~sys_fair15done & sys_fair15) |
                                (~sys_fair16done & sys_fair16) |
                                (~sys_fair17done & sys_fair17);
assign fair_err = (fair_cnt >= 5'b11110);

// computing the error output bit:
assign o_err = ~env_safe_err & ~env_safe_err_happened & (sys_safe_err | fair_err);

initial
 begin
  reg_i_hready = 0;
  reg_i_hbusreq0 = 0;
  reg_i_hlock0 = 0;
  reg_i_hbusreq1 = 0;
  reg_i_hlock1 = 0;
  reg_i_hbusreq2 = 0;
  reg_i_hlock2 = 0;
  reg_i_hbusreq3 = 0;
  reg_i_hlock3 = 0;
  reg_i_hbusreq4 = 0;
  reg_i_hlock4 = 0;
  reg_i_hbusreq5 = 0;
  reg_i_hlock5 = 0;
  reg_i_hbusreq6 = 0;
  reg_i_hlock6 = 0;
  reg_i_hbusreq7 = 0;
  reg_i_hlock7 = 0;
  reg_i_hbusreq8 = 0;
  reg_i_hlock8 = 0;
  reg_i_hbusreq9 = 0;
  reg_i_hlock9 = 0;
  reg_i_hbusreq10 = 0;
  reg_i_hlock10 = 0;
  reg_i_hbusreq11 = 0;
  reg_i_hlock11 = 0;
  reg_i_hbusreq12 = 0;
  reg_i_hlock12 = 0;
  reg_i_hbusreq13 = 0;
  reg_i_hlock13 = 0;
  reg_i_hbusreq14 = 0;
  reg_i_hlock14 = 0;
  reg_i_hbusreq15 = 0;
  reg_i_hlock15 = 0;
  reg_controllable_hmaster0 = 0;
  reg_controllable_hmaster1 = 0;
  reg_controllable_hmaster2 = 0;
  reg_controllable_hmaster3 = 0;
  reg_controllable_hmastlock = 0;
  reg_controllable_nstart = 0;
  reg_controllable_ndecide = 0;
  reg_controllable_locked = 0;
  reg_controllable_nhgrant0 = 0;
  reg_controllable_hgrant1 = 0;
  reg_controllable_hgrant2 = 0;
  reg_controllable_hgrant3 = 0;
  reg_controllable_hgrant4 = 0;
  reg_controllable_hgrant5 = 0;
  reg_controllable_hgrant6 = 0;
  reg_controllable_hgrant7 = 0;
  reg_controllable_hgrant8 = 0;
  reg_controllable_hgrant9 = 0;
  reg_controllable_hgrant10 = 0;
  reg_controllable_hgrant11 = 0;
  reg_controllable_hgrant12 = 0;
  reg_controllable_hgrant13 = 0;
  reg_controllable_hgrant14 = 0;
  reg_controllable_hgrant15 = 0;
  reg_controllable_busreq = 0;
  reg_stateA1 = 0;
  reg_stateG2 = 0;
  reg_stateG3_0 = 0;
  reg_stateG3_1 = 0;
  reg_stateG3_2 = 0;
  reg_stateG10_1 = 0;
  reg_stateG10_2 = 0;
  reg_stateG10_3 = 0;
  reg_stateG10_4 = 0;
  reg_stateG10_5 = 0;
  reg_stateG10_6 = 0;
  reg_stateG10_7 = 0;
  reg_stateG10_8 = 0;
  reg_stateG10_9 = 0;
  reg_stateG10_10 = 0;
  reg_stateG10_11 = 0;
  reg_stateG10_12 = 0;
  reg_stateG10_13 = 0;
  reg_stateG10_14 = 0;
  reg_stateG10_15 = 0;
  env_safe_err_happened = 0;
  env_fair0done = 0;
  env_fair1done = 0;
  sys_fair0done = 0;
  sys_fair1done = 0;
  sys_fair2done = 0;
  sys_fair3done = 0;
  sys_fair4done = 0;
  sys_fair5done = 0;
  sys_fair6done = 0;
  sys_fair7done = 0;
  sys_fair8done = 0;
  sys_fair9done = 0;
  sys_fair10done = 0;
  sys_fair11done = 0;
  sys_fair12done = 0;
  sys_fair13done = 0;
  sys_fair14done = 0;
  sys_fair15done = 0;
  sys_fair16done = 0;
  sys_fair17done = 0;
  fair_cnt = 0;
 end


always @(posedge i_clk)
 begin
   // We remember if an environment error occurred:
   env_safe_err_happened = env_safe_err_happened | env_safe_err;

   // Updating the fairness counters: 
   if(all_sys_fair_fulfilled)
    begin
      env_fair0done = 0;
      env_fair1done = 0;
      sys_fair0done = 0;
      sys_fair1done = 0;
      sys_fair2done = 0;
      sys_fair3done = 0;
      sys_fair4done = 0;
      sys_fair5done = 0;
      sys_fair6done = 0;
      sys_fair7done = 0;
      sys_fair8done = 0;
      sys_fair9done = 0;
      sys_fair10done = 0;
      sys_fair11done = 0;
      sys_fair12done = 0;
      sys_fair13done = 0;
      sys_fair14done = 0;
      sys_fair15done = 0;
      sys_fair16done = 0;
      sys_fair17done = 0;
      fair_cnt = 0;
    end
   else
    begin
      if(progress_in_sys_fair)
       begin
         env_fair0done = 0;
         env_fair1done = 0;
         fair_cnt = 0;
         sys_fair0done = sys_fair0done | sys_fair0;
         sys_fair1done = sys_fair1done | sys_fair1;
         sys_fair2done = sys_fair2done | sys_fair2;
         sys_fair3done = sys_fair3done | sys_fair3;
         sys_fair4done = sys_fair4done | sys_fair4;
         sys_fair5done = sys_fair5done | sys_fair5;
         sys_fair6done = sys_fair6done | sys_fair6;
         sys_fair7done = sys_fair7done | sys_fair7;
         sys_fair8done = sys_fair8done | sys_fair8;
         sys_fair9done = sys_fair9done | sys_fair9;
         sys_fair10done = sys_fair10done | sys_fair10;
         sys_fair11done = sys_fair11done | sys_fair11;
         sys_fair12done = sys_fair12done | sys_fair12;
         sys_fair13done = sys_fair13done | sys_fair13;
         sys_fair14done = sys_fair14done | sys_fair14;
         sys_fair15done = sys_fair15done | sys_fair15;
         sys_fair16done = sys_fair16done | sys_fair16;
         sys_fair17done = sys_fair17done | sys_fair17;
       end
      else
       begin
         if(all_env_fair_fulfilled)
          begin
            env_fair0done = 0;
            env_fair1done = 0;
            fair_cnt = fair_cnt + 1;
          end
         else
          begin
            env_fair0done = env_fair0done | env_fair0;
            env_fair1done = env_fair1done | env_fair1;
          end
       end
    end

   // Updating the automata: 
   // Automaton A1: 
   if(~reg_stateA1 & controllable_hmastlock & ~i_hburst0 & ~i_hburst1)
    begin
      reg_stateA1 = 1'b1;
    end
   else if(reg_stateA1 & ~controllable_busreq)
    begin
      reg_stateA1 = 1'b0;
    end

   // Automaton G2: 
   if(~reg_stateG2)
    begin
      if(controllable_hmastlock & ~controllable_nstart & ~i_hburst0 & ~i_hburst1)
       begin
         reg_stateG2 = 1'b1;
       end
    end
   else // if(reg_stateG2)
    begin
      if(~controllable_busreq)
       begin
         reg_stateG2 = 1'b0;
       end
    end

   // Automaton G3: 
   if(~reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2 & controllable_hmastlock & ~controllable_nstart &  ~i_hburst0 & i_hburst1 & ~i_hready)
    begin
      reg_stateG3_0 = 1'b1;
      reg_stateG3_1 = 1'b0;
      reg_stateG3_2 = 1'b0;
    end
   else if(~reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2 & controllable_hmastlock & ~controllable_nstart &  ~i_hburst0 & i_hburst1 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b1;
      reg_stateG3_2 = 1'b0;
    end
   else if(reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b1;
      reg_stateG3_2 = 1'b0;
    end
   else if(~reg_stateG3_0 & reg_stateG3_1 & ~reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b1;
      reg_stateG3_1 = 1'b1;
      reg_stateG3_2 = 1'b0;
    end
   else if(reg_stateG3_0 & reg_stateG3_1 & ~reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b0;
      reg_stateG3_2 = 1'b1;
    end
   else if(~reg_stateG3_0 & ~reg_stateG3_1 & reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b0;
      reg_stateG3_2 = 1'b0;
    end

   // Automaton G10_1: 
   if(~reg_stateG10_1 & ~controllable_hgrant1 & ~i_hbusreq1)
    begin
      reg_stateG10_1 = 1'b1;
    end
   else if(reg_stateG10_1 & i_hbusreq1)
    begin
      reg_stateG10_1 = 1'b0;
    end

   // Automaton G10_2: 
   if(~reg_stateG10_2 & ~controllable_hgrant2 & ~i_hbusreq2)
    begin
      reg_stateG10_2 = 1'b1;
    end
   else if(reg_stateG10_2 & i_hbusreq2)
    begin
      reg_stateG10_2 = 1'b0;
    end

   // Automaton G10_3: 
   if(~reg_stateG10_3 & ~controllable_hgrant3 & ~i_hbusreq3)
    begin
      reg_stateG10_3 = 1'b1;
    end
   else if(reg_stateG10_3 & i_hbusreq3)
    begin
      reg_stateG10_3 = 1'b0;
    end

   // Automaton G10_4: 
   if(~reg_stateG10_4 & ~controllable_hgrant4 & ~i_hbusreq4)
    begin
      reg_stateG10_4 = 1'b1;
    end
   else if(reg_stateG10_4 & i_hbusreq4)
    begin
      reg_stateG10_4 = 1'b0;
    end

   // Automaton G10_5: 
   if(~reg_stateG10_5 & ~controllable_hgrant5 & ~i_hbusreq5)
    begin
      reg_stateG10_5 = 1'b1;
    end
   else if(reg_stateG10_5 & i_hbusreq5)
    begin
      reg_stateG10_5 = 1'b0;
    end

   // Automaton G10_6: 
   if(~reg_stateG10_6 & ~controllable_hgrant6 & ~i_hbusreq6)
    begin
      reg_stateG10_6 = 1'b1;
    end
   else if(reg_stateG10_6 & i_hbusreq6)
    begin
      reg_stateG10_6 = 1'b0;
    end

   // Automaton G10_7: 
   if(~reg_stateG10_7 & ~controllable_hgrant7 & ~i_hbusreq7)
    begin
      reg_stateG10_7 = 1'b1;
    end
   else if(reg_stateG10_7 & i_hbusreq7)
    begin
      reg_stateG10_7 = 1'b0;
    end

   // Automaton G10_8: 
   if(~reg_stateG10_8 & ~controllable_hgrant8 & ~i_hbusreq8)
    begin
      reg_stateG10_8 = 1'b1;
    end
   else if(reg_stateG10_8 & i_hbusreq8)
    begin
      reg_stateG10_8 = 1'b0;
    end

   // Automaton G10_9: 
   if(~reg_stateG10_9 & ~controllable_hgrant9 & ~i_hbusreq9)
    begin
      reg_stateG10_9 = 1'b1;
    end
   else if(reg_stateG10_9 & i_hbusreq9)
    begin
      reg_stateG10_9 = 1'b0;
    end

   // Automaton G10_10: 
   if(~reg_stateG10_10 & ~controllable_hgrant10 & ~i_hbusreq10)
    begin
      reg_stateG10_10 = 1'b1;
    end
   else if(reg_stateG10_10 & i_hbusreq10)
    begin
      reg_stateG10_10 = 1'b0;
    end

   // Automaton G10_11: 
   if(~reg_stateG10_11 & ~controllable_hgrant11 & ~i_hbusreq11)
    begin
      reg_stateG10_11 = 1'b1;
    end
   else if(reg_stateG10_11 & i_hbusreq11)
    begin
      reg_stateG10_11 = 1'b0;
    end

   // Automaton G10_12: 
   if(~reg_stateG10_12 & ~controllable_hgrant12 & ~i_hbusreq12)
    begin
      reg_stateG10_12 = 1'b1;
    end
   else if(reg_stateG10_12 & i_hbusreq12)
    begin
      reg_stateG10_12 = 1'b0;
    end

   // Automaton G10_13: 
   if(~reg_stateG10_13 & ~controllable_hgrant13 & ~i_hbusreq13)
    begin
      reg_stateG10_13 = 1'b1;
    end
   else if(reg_stateG10_13 & i_hbusreq13)
    begin
      reg_stateG10_13 = 1'b0;
    end

   // Automaton G10_14: 
   if(~reg_stateG10_14 & ~controllable_hgrant14 & ~i_hbusreq14)
    begin
      reg_stateG10_14 = 1'b1;
    end
   else if(reg_stateG10_14 & i_hbusreq14)
    begin
      reg_stateG10_14 = 1'b0;
    end

   // Automaton G10_15: 
   if(~reg_stateG10_15 & ~controllable_hgrant15 & ~i_hbusreq15)
    begin
      reg_stateG10_15 = 1'b1;
    end
   else if(reg_stateG10_15 & i_hbusreq15)
    begin
      reg_stateG10_15 = 1'b0;
    end

   // Latching the previous input:
   reg_i_hready =  i_hready;
   reg_i_hbusreq0 =  i_hbusreq0;
   reg_i_hlock0 =  i_hlock0;
   reg_i_hbusreq1 =  i_hbusreq1;
   reg_i_hlock1 =  i_hlock1;
   reg_i_hbusreq2 =  i_hbusreq2;
   reg_i_hlock2 =  i_hlock2;
   reg_i_hbusreq3 =  i_hbusreq3;
   reg_i_hlock3 =  i_hlock3;
   reg_i_hbusreq4 =  i_hbusreq4;
   reg_i_hlock4 =  i_hlock4;
   reg_i_hbusreq5 =  i_hbusreq5;
   reg_i_hlock5 =  i_hlock5;
   reg_i_hbusreq6 =  i_hbusreq6;
   reg_i_hlock6 =  i_hlock6;
   reg_i_hbusreq7 =  i_hbusreq7;
   reg_i_hlock7 =  i_hlock7;
   reg_i_hbusreq8 =  i_hbusreq8;
   reg_i_hlock8 =  i_hlock8;
   reg_i_hbusreq9 =  i_hbusreq9;
   reg_i_hlock9 =  i_hlock9;
   reg_i_hbusreq10 =  i_hbusreq10;
   reg_i_hlock10 =  i_hlock10;
   reg_i_hbusreq11 =  i_hbusreq11;
   reg_i_hlock11 =  i_hlock11;
   reg_i_hbusreq12 =  i_hbusreq12;
   reg_i_hlock12 =  i_hlock12;
   reg_i_hbusreq13 =  i_hbusreq13;
   reg_i_hlock13 =  i_hlock13;
   reg_i_hbusreq14 =  i_hbusreq14;
   reg_i_hlock14 =  i_hlock14;
   reg_i_hbusreq15 =  i_hbusreq15;
   reg_i_hlock15 =  i_hlock15;
   reg_controllable_hmaster0 =  controllable_hmaster0;
   reg_controllable_hmaster1 =  controllable_hmaster1;
   reg_controllable_hmaster2 =  controllable_hmaster2;
   reg_controllable_hmaster3 =  controllable_hmaster3;
   reg_controllable_hmastlock =  controllable_hmastlock;
   reg_controllable_nstart =  controllable_nstart;
   reg_controllable_ndecide =  controllable_ndecide;
   reg_controllable_locked =  controllable_locked;
   reg_controllable_nhgrant0 =  controllable_nhgrant0;
   reg_controllable_hgrant1 =  controllable_hgrant1;
   reg_controllable_hgrant2 =  controllable_hgrant2;
   reg_controllable_hgrant3 =  controllable_hgrant3;
   reg_controllable_hgrant4 =  controllable_hgrant4;
   reg_controllable_hgrant5 =  controllable_hgrant5;
   reg_controllable_hgrant6 =  controllable_hgrant6;
   reg_controllable_hgrant7 =  controllable_hgrant7;
   reg_controllable_hgrant8 =  controllable_hgrant8;
   reg_controllable_hgrant9 =  controllable_hgrant9;
   reg_controllable_hgrant10 =  controllable_hgrant10;
   reg_controllable_hgrant11 =  controllable_hgrant11;
   reg_controllable_hgrant12 =  controllable_hgrant12;
   reg_controllable_hgrant13 =  controllable_hgrant13;
   reg_controllable_hgrant14 =  controllable_hgrant14;
   reg_controllable_hgrant15 =  controllable_hgrant15;
   reg_controllable_busreq =  controllable_busreq;

 end
endmodule

-------------------------------
#!SYNTCOMP
STATUS : realizable
SOLVED_BY : 3/3 [2015-pre-classification]
SOLVED_IN : 176.994 [2015-pre-classification]
#.

aag 1752 60 91 1 1601
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106
108
110
112
114
116
118
120
122 1
124 72
126 18
128 104
130 102
132 68
134 20
136 108
138 98
140 64
142 22
144 94
146 58
148 24
150 90
152 86
154 26
156 116
158 28
160 2049
162 30
164 2071
166 32
168 2155
170 2177
172 2201
174 2223
176 2243
178 10
180 52
182 2273
184 2295
186 8
188 2861
190 2867
192 2873
194 2879
196 2901
198 6
200 74
202 2923
204 4
206 2977
208 70
210 3007
212 3029
214 2
216 66
218 3051
220 120
222 60
224 3073
226 36
228 118
230 50
232 34
234 42
236 3095
238 80
240 114
242 48
244 3117
246 112
248 46
250 82
252 3139
254 110
256 44
258 54
260 84
262 3161
264 371
266 40
268 88
270 3183
272 38
274 92
276 78
278 14
280 96
282 76
284 3475
286 3481
288 3487
290 3493
292 3499
294 3505
296 12
298 16
300 100
302 106
2026
304 110 15
306 112 17
308 307 305
310 114 19
312 311 308
314 118 21
316 315 312
318 120 23
320 319 316
322 25 2
324 323 320
326 27 4
328 327 324
330 29 6
332 331 328
334 31 8
336 335 332
338 33 10
340 339 336
342 107 50
344 343 340
346 103 48
348 347 344
350 99 46
352 351 348
354 95 44
356 355 352
358 91 40
360 359 356
362 87 38
364 363 360
366 265 122
368 367 122
370 369 364
372 75 71
374 372 67
376 374 61
378 43 14
380 42 15
382 381 379
384 383 376
386 74 71
388 386 67
390 388 61
392 43 16
394 42 17
396 395 393
398 397 390
400 399 385
402 75 70
404 402 67
406 404 61
408 43 18
410 42 19
412 411 409
414 413 406
416 415 400
418 74 70
420 418 67
422 420 61
424 43 20
426 42 21
428 427 425
430 429 422
432 431 416
434 372 66
436 434 61
438 43 22
440 42 23
442 441 439
444 443 436
446 445 432
448 386 66
450 448 61
452 43 24
454 42 25
456 455 453
458 457 450
460 459 446
462 402 66
464 462 61
466 43 26
468 42 27
470 469 467
472 471 464
474 473 460
476 418 66
478 476 61
480 43 28
482 42 29
484 483 481
486 485 478
488 487 474
490 374 60
492 43 30
494 42 31
496 495 493
498 497 490
500 499 488
502 388 60
504 43 32
506 42 33
508 507 505
510 509 502
512 511 500
514 404 60
516 106 43
518 107 42
520 519 517
522 521 514
524 523 512
526 420 60
528 102 43
530 103 42
532 531 529
534 533 526
536 535 524
538 434 60
540 98 43
542 99 42
544 543 541
546 545 538
548 547 536
550 448 60
552 94 43
554 95 42
556 555 553
558 557 550
560 559 548
562 462 60
564 90 43
566 91 42
568 567 565
570 569 562
572 571 560
574 476 60
576 86 43
578 87 42
580 579 577
582 581 574
584 583 572
586 227 122
588 226 122
590 587 122
592 591 117
594 593 584
596 211 122
598 210 122
600 597 122
602 598 117
604 603 594
606 169 122
608 168 122
610 607 122
612 173 122
614 172 122
616 613 122
618 617 611
620 177 122
622 176 122
624 621 122
626 625 618
628 627 117
630 629 604
632 259 122
634 258 122
636 633 122
638 634 376
640 637 377
642 641 639
644 643 588
646 645 630
648 239 122
650 238 122
652 649 122
654 653 390
656 650 391
658 657 655
660 659 588
662 661 646
664 251 122
666 250 122
668 665 122
670 669 406
672 666 407
674 673 671
676 675 588
678 677 662
680 261 122
682 260 122
684 681 122
686 685 422
688 682 423
690 689 687
692 691 588
694 693 678
696 269 122
698 268 122
700 697 122
702 701 436
704 698 437
706 705 703
708 707 588
710 709 694
712 275 122
714 274 122
716 713 122
718 717 450
720 714 451
722 721 719
724 723 588
726 725 710
728 281 122
730 280 122
732 729 122
734 733 464
736 730 465
738 737 735
740 739 588
742 741 726
744 301 122
746 300 122
748 745 122
750 749 478
752 746 479
754 753 751
756 755 588
758 757 742
760 129 122
762 128 122
764 761 122
766 765 490
768 762 491
770 769 767
772 771 588
774 773 758
776 137 122
778 136 122
780 777 122
782 781 502
784 778 503
786 785 783
788 787 588
790 789 774
792 147 122
794 146 122
796 793 122
798 797 514
800 794 515
802 801 799
804 803 588
806 805 790
808 141 122
810 140 122
812 809 122
814 813 526
816 810 527
818 817 815
820 819 588
822 821 806
824 133 122
826 132 122
828 825 122
830 829 538
832 826 539
834 833 831
836 835 588
838 837 822
840 125 122
842 124 122
844 841 122
846 845 550
848 842 551
850 849 847
852 851 588
854 853 838
856 283 122
858 282 122
860 857 122
862 861 562
864 858 563
866 865 863
868 867 588
870 869 854
872 277 122
874 276 122
876 873 122
878 877 574
880 874 575
882 881 879
884 883 588
886 885 870
888 297 122
890 296 122
892 889 122
894 890 53
896 893 52
898 897 895
900 899 588
902 901 886
904 201 122
906 200 122
908 905 122
910 209 122
912 208 122
914 911 122
916 915 909
918 217 122
920 216 122
922 919 122
924 923 916
926 223 122
928 222 122
930 927 122
932 931 924
934 933 376
936 932 377
938 937 935
940 939 116
942 941 902
944 915 906
946 944 923
948 946 931
950 949 390
952 948 391
954 953 951
956 955 116
958 957 942
960 912 909
962 960 923
964 962 931
966 965 406
968 964 407
970 969 967
972 971 116
974 973 958
976 912 906
978 976 923
980 978 931
982 981 422
984 980 423
986 985 983
988 987 116
990 989 974
992 920 916
994 992 931
996 995 436
998 994 437
1000 999 997
1002 1001 116
1004 1003 990
1006 944 920
1008 1006 931
1010 1009 450
1012 1008 451
1014 1013 1011
1016 1015 116
1018 1017 1004
1020 960 920
1022 1020 931
1024 1023 464
1026 1022 465
1028 1027 1025
1030 1029 116
1032 1031 1018
1034 976 920
1036 1034 931
1038 1037 478
1040 1036 479
1042 1041 1039
1044 1043 116
1046 1045 1032
1048 928 924
1050 1049 490
1052 1048 491
1054 1053 1051
1056 1055 116
1058 1057 1046
1060 946 928
1062 1061 502
1064 1060 503
1066 1065 1063
1068 1067 116
1070 1069 1058
1072 962 928
1074 1073 514
1076 1072 515
1078 1077 1075
1080 1079 116
1082 1081 1070
1084 978 928
1086 1085 526
1088 1084 527
1090 1089 1087
1092 1091 116
1094 1093 1082
1096 992 928
1098 1097 538
1100 1096 539
1102 1101 1099
1104 1103 116
1106 1105 1094
1108 1006 928
1110 1109 550
1112 1108 551
1114 1113 1111
1116 1115 116
1118 1117 1106
1120 1020 928
1122 1121 562
1124 1120 563
1126 1125 1123
1128 1127 116
1130 1129 1118
1132 1034 928
1134 1133 574
1136 1132 575
1138 1137 1135
1140 1139 116
1142 1141 1130
1144 181 122
1146 180 122
1148 1145 122
1150 1149 52
1152 1146 53
1154 1153 1151
1156 1155 116
1158 1157 1142
1160 233 122
1162 232 122
1164 1161 122
1166 255 122
1168 254 122
1170 1167 122
1172 1168 1165
1174 1172 55
1176 1174 13
1178 1177 1158
1180 1171 1165
1182 1180 55
1184 1182 12
1186 1185 1178
1188 247 122
1190 246 122
1192 1189 122
1194 1190 1165
1196 1194 80
1198 1196 13
1200 1199 1186
1202 1193 1165
1204 1202 80
1206 1204 12
1208 1207 1200
1210 241 122
1212 240 122
1214 1211 122
1216 1212 1165
1218 1216 82
1220 1218 13
1222 1221 1208
1224 1215 1165
1226 1224 82
1228 1226 12
1230 1229 1222
1232 229 122
1234 228 122
1236 1233 122
1238 1234 1165
1240 1238 84
1242 1240 13
1244 1243 1230
1246 1237 1165
1248 1246 84
1250 1248 12
1252 1251 1244
1254 221 122
1256 220 122
1258 1255 122
1260 1256 1165
1262 1260 88
1264 1262 13
1266 1265 1252
1268 1259 1165
1270 1268 88
1272 1270 12
1274 1273 1266
1276 215 122
1278 214 122
1280 1277 122
1282 1278 1165
1284 1282 92
1286 1284 13
1288 1287 1274
1290 1281 1165
1292 1290 92
1294 1292 12
1296 1295 1288
1298 205 122
1300 204 122
1302 1299 122
1304 1300 1165
1306 1304 96
1308 1306 13
1310 1309 1296
1312 1303 1165
1314 1312 96
1316 1314 12
1318 1317 1310
1320 199 122
1322 198 122
1324 1321 122
1326 1322 1165
1328 1326 100
1330 1328 13
1332 1331 1318
1334 1325 1165
1336 1334 100
1338 1336 12
1340 1339 1332
1342 187 122
1344 186 122
1346 1343 122
1348 1344 1165
1350 1348 104
1352 1350 13
1354 1353 1340
1356 1347 1165
1358 1356 104
1360 1358 12
1362 1361 1354
1364 179 122
1366 178 122
1368 1365 122
1370 1366 1165
1372 1370 108
1374 1372 13
1376 1375 1362
1378 1369 1165
1380 1378 108
1382 1380 12
1384 1383 1376
1386 231 122
1388 230 122
1390 1387 122
1392 1388 1165
1394 1392 58
1396 1394 13
1398 1397 1384
1400 1391 1165
1402 1400 58
1404 1402 12
1406 1405 1398
1408 243 122
1410 242 122
1412 1409 122
1414 1410 1165
1416 1414 64
1418 1416 13
1420 1419 1406
1422 1413 1165
1424 1422 64
1426 1424 12
1428 1427 1420
1430 249 122
1432 248 122
1434 1431 122
1436 1432 1165
1438 1436 68
1440 1438 13
1442 1441 1428
1444 1435 1165
1446 1444 68
1448 1446 12
1450 1449 1442
1452 257 122
1454 256 122
1456 1453 122
1458 1454 1165
1460 1458 72
1462 1460 13
1464 1463 1450
1466 1457 1165
1468 1466 72
1470 1468 12
1472 1471 1464
1474 267 122
1476 266 122
1478 1475 122
1480 1476 1165
1482 1480 76
1484 1482 13
1486 1485 1472
1488 1479 1165
1490 1488 76
1492 1490 12
1494 1493 1486
1496 273 122
1498 272 122
1500 1497 122
1502 1498 1165
1504 1502 78
1506 1504 13
1508 1507 1494
1510 1501 1165
1512 1510 78
1514 1512 12
1516 1515 1508
1518 637 54
1520 634 55
1522 1521 1519
1524 1523 1162
1526 1525 1516
1528 650 81
1530 653 80
1532 1531 1529
1534 1533 1162
1536 1535 1526
1538 666 83
1540 669 82
1542 1541 1539
1544 1543 1162
1546 1545 1536
1548 682 85
1550 685 84
1552 1551 1549
1554 1553 1162
1556 1555 1546
1558 698 89
1560 701 88
1562 1561 1559
1564 1563 1162
1566 1565 1556
1568 714 93
1570 717 92
1572 1571 1569
1574 1573 1162
1576 1575 1566
1578 730 97
1580 733 96
1582 1581 1579
1584 1583 1162
1586 1585 1576
1588 746 101
1590 749 100
1592 1591 1589
1594 1593 1162
1596 1595 1586
1598 762 105
1600 765 104
1602 1601 1599
1604 1603 1162
1606 1605 1596
1608 778 109
1610 781 108
1612 1611 1609
1614 1613 1162
1616 1615 1606
1618 794 59
1620 797 58
1622 1621 1619
1624 1623 1162
1626 1625 1616
1628 810 65
1630 813 64
1632 1631 1629
1634 1633 1162
1636 1635 1626
1638 826 69
1640 829 68
1642 1641 1639
1644 1643 1162
1646 1645 1636
1648 842 73
1650 845 72
1652 1651 1649
1654 1653 1162
1656 1655 1646
1658 858 77
1660 861 76
1662 1661 1659
1664 1663 1162
1666 1665 1656
1668 874 79
1670 877 78
1672 1671 1669
1674 1673 1162
1676 1675 1666
1678 890 13
1680 893 12
1682 1681 1679
1684 1683 1162
1686 1685 1676
1688 203 122
1690 202 122
1692 1689 122
1694 80 17
1696 1694 1690
1698 1697 1686
1700 213 122
1702 212 122
1704 1701 122
1706 82 19
1708 1706 1702
1710 1709 1698
1712 219 122
1714 218 122
1716 1713 122
1718 84 21
1720 1718 1714
1722 1721 1710
1724 225 122
1726 224 122
1728 1725 122
1730 88 23
1732 1730 1726
1734 1733 1722
1736 237 122
1738 236 122
1740 1737 122
1742 92 25
1744 1742 1738
1746 1745 1734
1748 245 122
1750 244 122
1752 1749 122
1754 96 27
1756 1754 1750
1758 1757 1746
1760 253 122
1762 252 122
1764 1761 122
1766 100 29
1768 1766 1762
1770 1769 1758
1772 263 122
1774 262 122
1776 1773 122
1778 104 31
1780 1778 1774
1782 1781 1770
1784 271 122
1786 270 122
1788 1785 122
1790 108 33
1792 1790 1786
1794 1793 1782
1796 197 122
1798 196 122
1800 1797 122
1802 107 58
1804 1802 1798
1806 1805 1794
1808 185 122
1810 184 122
1812 1809 122
1814 103 64
1816 1814 1810
1818 1817 1806
1820 175 122
1822 174 122
1824 1821 122
1826 99 68
1828 1826 1822
1830 1829 1818
1832 171 122
1834 170 122
1836 1833 122
1838 95 72
1840 1838 1834
1842 1841 1830
1844 165 122
1846 164 122
1848 1845 122
1850 91 76
1852 1850 1846
1854 1853 1842
1856 161 122
1858 160 122
1860 1857 122
1862 87 78
1864 1862 1858
1866 1865 1854
1868 279 122
1870 1869 122
1872 299 122
1874 1873 122
1876 1875 1871
1878 127 122
1880 1879 122
1882 1881 1876
1884 135 122
1886 1885 122
1888 1887 1882
1890 143 122
1892 1891 122
1894 1893 1888
1896 149 122
1898 1897 122
1900 1899 1894
1902 155 122
1904 1903 122
1906 1905 1900
1908 159 122
1910 1909 122
1912 1911 1906
1914 163 122
1916 1915 122
1918 1917 1912
1920 167 122
1922 1921 122
1924 1923 1918
1926 303 122
1928 1927 122
1930 1929 1924
1932 131 122
1934 1933 122
1936 1935 1930
1938 139 122
1940 1939 122
1942 1941 1936
1944 145 122
1946 1945 122
1948 1947 1942
1950 151 122
1952 1951 122
1954 1953 1948
1956 153 122
1958 1957 122
1960 1959 1954
1962 1960 1165
1964 1962 54
1966 1965 1866
1968 195 122
1970 194 122
1972 1969 122
1974 193 122
1976 192 122
1978 1975 122
1980 191 122
1982 190 122
1984 1981 122
1986 189 122
1988 188 122
1990 1987 122
1992 1985 1979
1994 1993 1978
1996 1994 1984
1998 1997 1973
2000 1999 1972
2002 2000 1996
2004 1984 1979
2006 1985 1976
2008 2007 2005
2010 1996 1973
2012 1997 1970
2014 2013 2011
2016 1989 1984
2018 2016 2008
2020 2018 2014
2022 2021 2003
2024 2022 1966
2026 2025 370
2028 1861 79
2030 2028 87
2032 1858 86
2034 2032 2031
2036 2035 2031
2038 2033 1858
2040 2038 2031
2042 2041 2031
2044 2043 2037
2046 2036 1858
2048 2047 2045
2050 1849 77
2052 2050 91
2054 1846 90
2056 2054 2053
2058 2057 2053
2060 2055 1846
2062 2060 2053
2064 2063 2053
2066 2065 2059
2068 2058 1846
2070 2069 2067
2072 626 52
2074 2072 117
2076 2074 63
2078 2076 56
2080 2078 37
2082 2078 36
2084 617 608
2086 2084 625
2088 2086 36
2090 614 611
2092 2090 625
2094 2092 36
2096 614 608
2098 2096 625
2100 2098 36
2102 622 618
2104 2102 36
2106 2082 2081
2108 2107 2081
2110 2083 2081
2112 2110 2088
2114 2113 2108
2116 2110 2089
2118 2116 2094
2120 2119 2114
2122 2116 2095
2124 2122 2100
2126 2125 2120
2128 2122 2101
2130 2128 2104
2132 2131 2126
2134 2105 608
2136 2134 2101
2138 2136 2095
2140 2139 2095
2142 2141 2089
2144 2142 2083
2146 2144 2081
2148 2147 2081
2150 2149 2133
2152 2132 608
2154 2153 2151
2156 1837 73
2158 2156 95
2160 1834 94
2162 2160 2159
2164 2163 2159
2166 2161 1834
2168 2166 2159
2170 2169 2159
2172 2171 2165
2174 2164 1834
2176 2175 2173
2178 2105 614
2180 2178 2101
2182 2180 2095
2184 2183 2095
2186 2185 2089
2188 2187 2089
2190 2189 2083
2192 2191 2083
2194 2193 2081
2196 2194 2133
2198 2132 614
2200 2199 2197
2202 1825 69
2204 2202 99
2206 1822 98
2208 2206 2205
2210 2209 2205
2212 2207 1822
2214 2212 2205
2216 2215 2205
2218 2217 2211
2220 2210 1822
2222 2221 2219
2224 2105 622
2226 2224 2101
2228 2227 2101
2230 2229 2095
2232 2230 2089
2234 2232 2083
2236 2234 2081
2238 2236 2133
2240 2132 622
2242 2241 2239
2244 183 122
2246 182 122
2248 2245 122
2250 2249 52
2252 2250 63
2254 2252 57
2256 2246 43
2258 2256 2255
2260 2259 2255
2262 2257 2246
2264 2262 2255
2266 2265 2255
2268 2267 2261
2270 2260 2246
2272 2271 2269
2274 1813 65
2276 2274 103
2278 1810 102
2280 2278 2277
2282 2281 2277
2284 2279 1810
2286 2284 2277
2288 2287 2277
2290 2289 2283
2292 2282 1810
2294 2293 2291
2296 285 122
2298 284 122
2300 2297 122
2302 287 122
2304 286 122
2306 2303 122
2308 289 122
2310 288 122
2312 2309 122
2314 291 122
2316 290 122
2318 2315 122
2320 293 122
2322 292 122
2324 2321 122
2326 294 122
2328 2305 2299
2330 2328 2311
2332 2330 2317
2334 2332 2323
2336 2334 2327
2338 2336 601
2340 2305 2300
2342 2340 2311
2344 2342 2317
2346 2344 2323
2348 2346 2327
2350 2348 626
2352 2306 2299
2354 2352 2311
2356 2354 2317
2358 2356 2323
2360 2358 2327
2362 377 14
2364 2363 2360
2366 2306 2300
2368 2366 2311
2370 2368 2317
2372 2370 2323
2374 2372 2327
2376 391 16
2378 2377 2374
2380 2328 2312
2382 2380 2317
2384 2382 2323
2386 2384 2327
2388 407 18
2390 2389 2386
2392 2340 2312
2394 2392 2317
2396 2394 2323
2398 2396 2327
2400 423 20
2402 2401 2398
2404 2352 2312
2406 2404 2317
2408 2406 2323
2410 2408 2327
2412 437 22
2414 2413 2410
2416 2366 2312
2418 2416 2317
2420 2418 2323
2422 2420 2327
2424 451 24
2426 2425 2422
2428 2330 2318
2430 2428 2323
2432 2430 2327
2434 465 26
2436 2435 2432
2438 2342 2318
2440 2438 2323
2442 2440 2327
2444 479 28
2446 2445 2442
2448 2354 2318
2450 2448 2323
2452 2450 2327
2454 491 30
2456 2455 2452
2458 2368 2318
2460 2458 2323
2462 2460 2327
2464 503 32
2466 2465 2462
2468 2380 2318
2470 2468 2323
2472 2470 2327
2474 515 106
2476 2475 2472
2478 2392 2318
2480 2478 2323
2482 2480 2327
2484 527 102
2486 2485 2482
2488 2404 2318
2490 2488 2323
2492 2490 2327
2494 539 98
2496 2495 2492
2498 2416 2318
2500 2498 2323
2502 2500 2327
2504 551 94
2506 2505 2502
2508 2332 2324
2510 2508 2327
2512 563 90
2514 2513 2510
2516 2344 2324
2518 2516 2327
2520 575 86
2522 2521 2518
2524 207 122
2526 206 122
2528 2525 122
2530 2529 2249
2532 2526 36
2534 2350 2339
2536 2535 2339
2538 2351 2339
2540 2538 2364
2542 2541 2536
2544 2538 2365
2546 2544 2378
2548 2547 2542
2550 2544 2379
2552 2550 2390
2554 2553 2548
2556 2550 2391
2558 2556 2402
2560 2559 2554
2562 2556 2403
2564 2562 2414
2566 2565 2560
2568 2562 2415
2570 2568 2426
2572 2571 2566
2574 2568 2427
2576 2574 2436
2578 2577 2572
2580 2574 2437
2582 2580 2446
2584 2583 2578
2586 2580 2447
2588 2586 2456
2590 2589 2584
2592 2586 2457
2594 2592 2466
2596 2595 2590
2598 2592 2467
2600 2598 2476
2602 2601 2596
2604 2598 2477
2606 2604 2486
2608 2607 2602
2610 2604 2487
2612 2610 2496
2614 2613 2608
2616 2610 2497
2618 2616 2506
2620 2619 2614
2622 2616 2507
2624 2622 2514
2626 2625 2620
2628 2622 2515
2630 2628 2522
2632 2631 2626
2634 2628 2523
2636 2634 2531
2638 2636 2532
2640 2639 2632
2642 2532 1991
2644 2533 1988
2646 2645 2643
2648 2530 1988
2650 2647 2531
2652 2651 2649
2654 2653 2523
2656 2654 2515
2658 2656 2507
2660 2658 2497
2662 2660 2487
2664 2662 2477
2666 2664 2467
2668 2666 2457
2670 2668 2447
2672 2670 2437
2674 2672 2427
2676 2674 2415
2678 2676 2403
2680 2678 2391
2682 2680 2379
2684 2682 2365
2686 2684 2351
2688 2686 2339
2690 1988 1985
2692 1989 1982
2694 2693 2691
2696 2695 2532
2698 2533 1982
2700 2699 2697
2702 2530 1982
2704 2701 2531
2706 2705 2703
2708 2707 2523
2710 2708 2515
2712 2710 2507
2714 2712 2497
2716 2714 2487
2718 2716 2477
2720 2718 2467
2722 2720 2457
2724 2722 2447
2726 2724 2437
2728 2726 2427
2730 2728 2415
2732 2730 2403
2734 2732 2391
2736 2734 2379
2738 2736 2365
2740 2738 2351
2742 2740 2339
2744 1988 1982
2746 2744 1979
2748 2745 1976
2750 2749 2747
2752 2751 2532
2754 2533 1976
2756 2755 2753
2758 2530 1976
2760 2757 2531
2762 2761 2759
2764 2763 2523
2766 2764 2515
2768 2766 2507
2770 2768 2497
2772 2770 2487
2774 2772 2477
2776 2774 2467
2778 2776 2457
2780 2778 2447
2782 2780 2437
2784 2782 2427
2786 2784 2415
2788 2786 2403
2790 2788 2391
2792 2790 2379
2794 2792 2365
2796 2794 2351
2798 2796 2339
2800 2744 1976
2802 2800 1973
2804 2801 1970
2806 2805 2803
2808 2807 2532
2810 2533 1970
2812 2811 2809
2814 2530 1970
2816 2813 2531
2818 2817 2815
2820 2819 2523
2822 2820 2515
2824 2822 2507
2826 2824 2497
2828 2826 2487
2830 2828 2477
2832 2830 2467
2834 2832 2457
2836 2834 2447
2838 2836 2437
2840 2838 2427
2842 2840 2415
2844 2842 2403
2846 2844 2391
2848 2846 2379
2850 2848 2365
2852 2850 2351
2854 2852 2339
2856 2688 2641
2858 2640 1988
2860 2859 2857
2862 2742 2641
2864 2640 1982
2866 2865 2863
2868 2798 2641
2870 2640 1976
2872 2871 2869
2874 2854 2641
2876 2640 1970
2878 2877 2875
2880 1801 59
2882 2880 107
2884 1798 106
2886 2884 2883
2888 2887 2883
2890 2885 1798
2892 2890 2883
2894 2893 2883
2896 2895 2889
2898 2888 1798
2900 2899 2897
2902 1693 81
2904 2902 17
2906 1690 16
2908 2906 2905
2910 2909 2905
2912 2907 1690
2914 2912 2905
2916 2915 2905
2918 2917 2911
2920 2910 1690
2922 2921 2919
2924 2634 2530
2926 2925 2632
2928 2926 2639
2930 2533 2526
2932 2930 2531
2934 2933 2531
2936 2935 2523
2938 2936 2515
2940 2938 2507
2942 2940 2497
2944 2942 2487
2946 2944 2477
2948 2946 2467
2950 2948 2457
2952 2950 2447
2954 2952 2437
2956 2954 2427
2958 2956 2415
2960 2958 2403
2962 2960 2391
2964 2962 2379
2966 2964 2365
2968 2966 2351
2970 2968 2339
2972 2970 2929
2974 2928 2526
2976 2975 2973
2978 117 52
2980 2978 63
2982 2980 57
2984 2982 601
2986 598 43
2988 2987 2985
2990 2983 598
2992 2991 2983
2994 598 42
2996 2993 601
2998 2994 598
3000 2999 2997
3002 3001 2989
3004 2988 598
3006 3005 3003
3008 1705 83
3010 3008 19
3012 1702 18
3014 3012 3011
3016 3015 3011
3018 3013 1702
3020 3018 3011
3022 3021 3011
3024 3023 3017
3026 3016 1702
3028 3027 3025
3030 1717 85
3032 3030 21
3034 1714 20
3036 3034 3033
3038 3037 3033
3040 3035 1714
3042 3040 3033
3044 3043 3033
3046 3045 3039
3048 3038 1714
3050 3049 3047
3052 1729 89
3054 3052 23
3056 1726 22
3058 3056 3055
3060 3059 3055
3062 3057 1726
3064 3062 3055
3066 3065 3055
3068 3067 3061
3070 3060 1726
3072 3071 3069
3074 1741 93
3076 3074 25
3078 1738 24
3080 3078 3077
3082 3081 3077
3084 3079 1738
3086 3084 3077
3088 3087 3077
3090 3089 3083
3092 3082 1738
3094 3093 3091
3096 1753 97
3098 3096 27
3100 1750 26
3102 3100 3099
3104 3103 3099
3106 3101 1750
3108 3106 3099
3110 3109 3099
3112 3111 3105
3114 3104 1750
3116 3115 3113
3118 1765 101
3120 3118 29
3122 1762 28
3124 3122 3121
3126 3125 3121
3128 3123 1762
3130 3128 3121
3132 3131 3121
3134 3133 3127
3136 3126 1762
3138 3137 3135
3140 1777 105
3142 3140 31
3144 1774 30
3146 3144 3143
3148 3147 3143
3150 3145 1774
3152 3150 3143
3154 3153 3143
3156 3155 3149
3158 3148 1774
3160 3159 3157
3162 1789 109
3164 3162 33
3166 1786 32
3168 3166 3165
3170 3169 3165
3172 3167 1786
3174 3172 3165
3176 3175 3165
3178 3177 3171
3180 3170 1786
3182 3181 3179
3184 2523 2298
3186 3184 2515
3188 3187 2515
3190 3189 2507
3192 3190 2497
3194 3193 2497
3196 3195 2487
3198 3196 2477
3200 3199 2477
3202 3201 2467
3204 3202 2457
3206 3205 2457
3208 3207 2447
3210 3208 2437
3212 3211 2437
3214 3213 2427
3216 3214 2415
3218 3217 2415
3220 3219 2403
3222 3220 2391
3224 3223 2391
3226 3225 2379
3228 3226 2365
3230 3229 2365
3232 3231 2351
3234 3232 2339
3236 3235 2339
3238 2523 2304
3240 3238 2515
3242 3240 2507
3244 3242 2497
3246 3245 2497
3248 3247 2487
3250 3249 2487
3252 3251 2477
3254 3252 2467
3256 3254 2457
3258 3257 2457
3260 3259 2447
3262 3261 2447
3264 3263 2437
3266 3264 2427
3268 3266 2415
3270 3269 2415
3272 3271 2403
3274 3273 2403
3276 3275 2391
3278 3276 2379
3280 3278 2365
3282 3281 2365
3284 3283 2351
3286 3285 2351
3288 3287 2339
3290 2523 2310
3292 3290 2515
3294 3292 2507
3296 3294 2497
3298 3297 2497
3300 3299 2487
3302 3301 2487
3304 3303 2477
3306 3305 2477
3308 3307 2467
3310 3309 2467
3312 3311 2457
3314 3312 2447
3316 3314 2437
3318 3316 2427
3320 3318 2415
3322 3321 2415
3324 3323 2403
3326 3325 2403
3328 3327 2391
3330 3329 2391
3332 3331 2379
3334 3333 2379
3336 3335 2365
3338 3336 2351
3340 3338 2339
3342 2523 2316
3344 3342 2515
3346 3344 2507
3348 3346 2497
3350 3349 2497
3352 3351 2487
3354 3353 2487
3356 3355 2477
3358 3357 2477
3360 3359 2467
3362 3361 2467
3364 3363 2457
3366 3365 2457
3368 3367 2447
3370 3369 2447
3372 3371 2437
3374 3373 2437
3376 3375 2427
3378 3377 2427
3380 3379 2415
3382 3380 2403
3384 3382 2391
3386 3384 2379
3388 3386 2365
3390 3388 2351
3392 3390 2339
3394 2523 2322
3396 3394 2515
3398 3397 2515
3400 3399 2507
3402 3401 2507
3404 3403 2497
3406 3404 2487
3408 3406 2477
3410 3408 2467
3412 3410 2457
3414 3412 2447
3416 3414 2437
3418 3416 2427
3420 3418 2415
3422 3420 2403
3424 3422 2391
3426 3424 2379
3428 3426 2365
3430 3428 2351
3432 3430 2339
3434 2523 2326
3436 3434 2515
3438 3436 2507
3440 3438 2497
3442 3440 2487
3444 3442 2477
3446 3444 2467
3448 3446 2457
3450 3448 2447
3452 3450 2437
3454 3452 2427
3456 3454 2415
3458 3456 2403
3460 3458 2391
3462 3460 2379
3464 3462 2365
3466 3464 2351
3468 3466 2339
3470 3237 2633
3472 2632 2298
3474 3473 3471
3476 3288 2633
3478 2632 2304
3480 3479 3477
3482 3340 2633
3484 2632 2310
3486 3485 3483
3488 3392 2633
3490 2632 2316
3492 3491 3489
3494 3432 2633
3496 2632 2322
3498 3497 3495
3500 3468 2633
3502 2632 2326
3504 3503 3501
i0 i_hlock5
i1 i_hlock6
i2 i_hlock7
i3 i_hlock8
i4 i_hlock9
i5 controllable_locked
i6 i_hbusreq0
i7 i_hbusreq1
i8 i_hbusreq2
i9 i_hbusreq3
i10 i_hbusreq4
i11 i_hbusreq5
i12 i_hbusreq6
i13 i_hbusreq7
i14 i_hbusreq8
i15 i_hbusreq9
i16 controllable_ndecide
i17 i_hready
i18 i_hlock15
i19 i_hlock14
i20 controllable_busreq
i21 i_hlock13
i22 i_hlock12
i23 i_hlock11
i24 i_hlock10
i25 controllable_hmastlock
i26 controllable_nhgrant0
i27 i_hburst1
i28 controllable_hgrant10
i29 controllable_hmaster3
i30 i_hburst0
i31 controllable_hgrant11
i32 controllable_hmaster2
i33 controllable_hgrant12
i34 controllable_hmaster1
i35 controllable_hgrant13
i36 controllable_hmaster0
i37 controllable_hgrant14
i38 controllable_hgrant15
i39 controllable_hgrant1
i40 controllable_hgrant2
i41 controllable_hgrant3
i42 i_hbusreq15
i43 controllable_hgrant4
i44 i_hbusreq14
i45 controllable_hgrant5
i46 i_hbusreq13
i47 controllable_hgrant6
i48 i_hbusreq12
i49 controllable_hgrant7
i50 i_hbusreq11
i51 controllable_hgrant8
i52 i_hbusreq10
i53 controllable_hgrant9
i54 i_hlock0
i55 i_hlock1
i56 i_hlock2
i57 controllable_nstart
i58 i_hlock3
i59 i_hlock4
l0 n123
l1 reg_controllable_hgrant13_out
l2 reg_i_hbusreq2_out
l3 reg_controllable_hgrant8_out
l4 reg_i_hbusreq11_out
l5 reg_controllable_hgrant12_out
l6 reg_i_hbusreq3_out
l7 reg_controllable_hgrant9_out
l8 reg_i_hbusreq12_out
l9 reg_controllable_hgrant11_out
l10 reg_i_hbusreq4_out
l11 reg_i_hbusreq13_out
l12 reg_controllable_hgrant10_out
l13 reg_i_hbusreq5_out
l14 reg_i_hbusreq14_out
l15 reg_i_hbusreq15_out
l16 reg_i_hbusreq6_out
l17 reg_controllable_nstart_out
l18 reg_i_hbusreq7_out
l19 reg_stateG10_15_out
l20 reg_i_hbusreq8_out
l21 reg_stateG10_14_out
l22 reg_i_hbusreq9_out
l23 reg_stateG3_0_out
l24 reg_stateG10_13_out
l25 reg_stateG3_1_out
l26 reg_stateG10_12_out
l27 reg_stateG3_2_out
l28 reg_i_hlock9_out
l29 reg_controllable_hmastlock_out
l30 reg_stateA1_out
l31 reg_stateG10_11_out
l32 reg_i_hlock8_out
l33 fair_cnt<0>_out
l34 fair_cnt<1>_out
l35 fair_cnt<2>_out
l36 fair_cnt<3>_out
l37 reg_stateG10_10_out
l38 reg_i_hlock7_out
l39 reg_controllable_hmaster0_out
l40 reg_stateG10_1_out
l41 reg_i_hlock6_out
l42 next_env_fair_out
l43 reg_controllable_hmaster1_out
l44 reg_stateG2_out
l45 reg_stateG10_2_out
l46 reg_i_hlock5_out
l47 reg_controllable_hmaster2_out
l48 reg_stateG10_3_out
l49 reg_i_hlock4_out
l50 reg_controllable_hmaster3_out
l51 reg_stateG10_4_out
l52 reg_i_hready_out
l53 reg_i_hlock3_out
l54 reg_i_hlock10_out
l55 reg_controllable_ndecide_out
l56 reg_controllable_busreq_out
l57 reg_stateG10_5_out
l58 reg_controllable_hgrant1_out
l59 reg_i_hlock2_out
l60 reg_i_hlock11_out
l61 reg_stateG10_6_out
l62 reg_i_hlock1_out
l63 reg_i_hlock12_out
l64 reg_controllable_hgrant2_out
l65 reg_stateG10_7_out
l66 reg_i_hlock0_out
l67 reg_i_hlock13_out
l68 reg_controllable_nhgrant0_out
l69 reg_controllable_hgrant3_out
l70 reg_stateG10_8_out
l71 env_safe_err_happened_out
l72 reg_i_hlock14_out
l73 reg_controllable_hgrant4_out
l74 reg_stateG10_9_out
l75 reg_i_hlock15_out
l76 reg_controllable_hgrant5_out
l77 reg_controllable_hgrant15_out
l78 reg_i_hbusreq0_out
l79 reg_controllable_hgrant6_out
l80 reg_controllable_hgrant14_out
l81 next_sys_fair<0>_out
l82 next_sys_fair<1>_out
l83 next_sys_fair<2>_out
l84 next_sys_fair<3>_out
l85 next_sys_fair<4>_out
l86 next_sys_fair<5>_out
l87 reg_controllable_locked_out
l88 reg_i_hbusreq1_out
l89 reg_controllable_hgrant7_out
l90 reg_i_hbusreq10_out
o0 o_err
c
amba_16_new_14
This file was written by ABC on Tue May  5 17:02:14 2015
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv amba16c14.v   ---gives--> amba16c14.mv
> abc -c "read_blif_mv amba16c14.mv; write_aiger -s amba16c14n.aig"   ---gives--> amba16c14n.aig
> aigtoaig amba16c14n.aig amba16c14n.aag   ---gives--> amba16c14n.aag (this file)
Content of amba16c14.v:
module amba_16_new_14(
        o_err,
        i_clk,
        i_hready,
        i_hbusreq0,
        i_hlock0,
        i_hbusreq1,
        i_hlock1,
        i_hbusreq2,
        i_hlock2,
        i_hbusreq3,
        i_hlock3,
        i_hbusreq4,
        i_hlock4,
        i_hbusreq5,
        i_hlock5,
        i_hbusreq6,
        i_hlock6,
        i_hbusreq7,
        i_hlock7,
        i_hbusreq8,
        i_hlock8,
        i_hbusreq9,
        i_hlock9,
        i_hbusreq10,
        i_hlock10,
        i_hbusreq11,
        i_hlock11,
        i_hbusreq12,
        i_hlock12,
        i_hbusreq13,
        i_hlock13,
        i_hbusreq14,
        i_hlock14,
        i_hbusreq15,
        i_hlock15,
        i_hburst0,
        i_hburst1,
        controllable_hmaster0,
        controllable_hmaster1,
        controllable_hmaster2,
        controllable_hmaster3,
        controllable_hmastlock,
        controllable_nstart,
        controllable_ndecide,
        controllable_locked,
        controllable_nhgrant0,
        controllable_hgrant1,
        controllable_hgrant2,
        controllable_hgrant3,
        controllable_hgrant4,
        controllable_hgrant5,
        controllable_hgrant6,
        controllable_hgrant7,
        controllable_hgrant8,
        controllable_hgrant9,
        controllable_hgrant10,
        controllable_hgrant11,
        controllable_hgrant12,
        controllable_hgrant13,
        controllable_hgrant14,
        controllable_hgrant15,
        controllable_busreq);

input i_clk;
input i_hready;
input i_hbusreq0;
input i_hlock0;
input i_hbusreq1;
input i_hlock1;
input i_hbusreq2;
input i_hlock2;
input i_hbusreq3;
input i_hlock3;
input i_hbusreq4;
input i_hlock4;
input i_hbusreq5;
input i_hlock5;
input i_hbusreq6;
input i_hlock6;
input i_hbusreq7;
input i_hlock7;
input i_hbusreq8;
input i_hlock8;
input i_hbusreq9;
input i_hlock9;
input i_hbusreq10;
input i_hlock10;
input i_hbusreq11;
input i_hlock11;
input i_hbusreq12;
input i_hlock12;
input i_hbusreq13;
input i_hlock13;
input i_hbusreq14;
input i_hlock14;
input i_hbusreq15;
input i_hlock15;
input i_hburst0;
input i_hburst1;
input controllable_hmaster0;
input controllable_hmaster1;
input controllable_hmaster2;
input controllable_hmaster3;
input controllable_hmastlock;
input controllable_nstart;
input controllable_ndecide;
input controllable_locked;
input controllable_nhgrant0;
input controllable_hgrant1;
input controllable_hgrant2;
input controllable_hgrant3;
input controllable_hgrant4;
input controllable_hgrant5;
input controllable_hgrant6;
input controllable_hgrant7;
input controllable_hgrant8;
input controllable_hgrant9;
input controllable_hgrant10;
input controllable_hgrant11;
input controllable_hgrant12;
input controllable_hgrant13;
input controllable_hgrant14;
input controllable_hgrant15;
input controllable_busreq;
output o_err;

reg reg_i_hready;
reg reg_i_hbusreq0;
reg reg_i_hlock0;
reg reg_i_hbusreq1;
reg reg_i_hlock1;
reg reg_i_hbusreq2;
reg reg_i_hlock2;
reg reg_i_hbusreq3;
reg reg_i_hlock3;
reg reg_i_hbusreq4;
reg reg_i_hlock4;
reg reg_i_hbusreq5;
reg reg_i_hlock5;
reg reg_i_hbusreq6;
reg reg_i_hlock6;
reg reg_i_hbusreq7;
reg reg_i_hlock7;
reg reg_i_hbusreq8;
reg reg_i_hlock8;
reg reg_i_hbusreq9;
reg reg_i_hlock9;
reg reg_i_hbusreq10;
reg reg_i_hlock10;
reg reg_i_hbusreq11;
reg reg_i_hlock11;
reg reg_i_hbusreq12;
reg reg_i_hlock12;
reg reg_i_hbusreq13;
reg reg_i_hlock13;
reg reg_i_hbusreq14;
reg reg_i_hlock14;
reg reg_i_hbusreq15;
reg reg_i_hlock15;
reg reg_controllable_hmaster0;
reg reg_controllable_hmaster1;
reg reg_controllable_hmaster2;
reg reg_controllable_hmaster3;
reg reg_controllable_hmastlock;
reg reg_controllable_nstart;
reg reg_controllable_ndecide;
reg reg_controllable_locked;
reg reg_controllable_nhgrant0;
reg reg_controllable_hgrant1;
reg reg_controllable_hgrant2;
reg reg_controllable_hgrant3;
reg reg_controllable_hgrant4;
reg reg_controllable_hgrant5;
reg reg_controllable_hgrant6;
reg reg_controllable_hgrant7;
reg reg_controllable_hgrant8;
reg reg_controllable_hgrant9;
reg reg_controllable_hgrant10;
reg reg_controllable_hgrant11;
reg reg_controllable_hgrant12;
reg reg_controllable_hgrant13;
reg reg_controllable_hgrant14;
reg reg_controllable_hgrant15;
reg reg_controllable_busreq;
reg reg_stateA1;
reg reg_stateG2;
reg reg_stateG3_0;
reg reg_stateG3_1;
reg reg_stateG3_2;
reg reg_stateG10_1;
reg reg_stateG10_2;
reg reg_stateG10_3;
reg reg_stateG10_4;
reg reg_stateG10_5;
reg reg_stateG10_6;
reg reg_stateG10_7;
reg reg_stateG10_8;
reg reg_stateG10_9;
reg reg_stateG10_10;
reg reg_stateG10_11;
reg reg_stateG10_12;
reg reg_stateG10_13;
reg reg_stateG10_14;
reg reg_stateG10_15;
reg env_safe_err_happened;
reg next_env_fair;
reg [3:0] fair_cnt;
reg [5:0] next_sys_fair;

wire env_safe_err0;
wire env_safe_err1;
wire env_safe_err2;
wire env_safe_err3;
wire env_safe_err4;
wire env_safe_err5;
wire env_safe_err6;
wire env_safe_err7;
wire env_safe_err8;
wire env_safe_err9;
wire env_safe_err10;
wire env_safe_err11;
wire env_safe_err12;
wire env_safe_err13;
wire env_safe_err14;
wire env_safe_err15;
wire env_safe_err;

wire sys_safe_err0;
wire sys_safe_err1;
wire sys_safe_err2;
wire sys_safe_err3;
wire sys_safe_err4;
wire sys_safe_err5;
wire sys_safe_err6;
wire sys_safe_err7;
wire sys_safe_err8;
wire sys_safe_err9;
wire sys_safe_err10;
wire sys_safe_err11;
wire sys_safe_err12;
wire sys_safe_err13;
wire sys_safe_err14;
wire sys_safe_err15;
wire sys_safe_err16;
wire sys_safe_err17;
wire sys_safe_err18;
wire sys_safe_err19;
wire sys_safe_err20;
wire sys_safe_err21;
wire sys_safe_err22;
wire sys_safe_err23;
wire sys_safe_err24;
wire sys_safe_err25;
wire sys_safe_err26;
wire sys_safe_err27;
wire sys_safe_err28;
wire sys_safe_err29;
wire sys_safe_err30;
wire sys_safe_err31;
wire sys_safe_err32;
wire sys_safe_err33;
wire sys_safe_err34;
wire sys_safe_err35;
wire sys_safe_err36;
wire sys_safe_err37;
wire sys_safe_err38;
wire sys_safe_err39;
wire sys_safe_err40;
wire sys_safe_err41;
wire sys_safe_err42;
wire sys_safe_err43;
wire sys_safe_err44;
wire sys_safe_err45;
wire sys_safe_err46;
wire sys_safe_err47;
wire sys_safe_err48;
wire sys_safe_err49;
wire sys_safe_err50;
wire sys_safe_err51;
wire sys_safe_err52;
wire sys_safe_err53;
wire sys_safe_err54;
wire sys_safe_err55;
wire sys_safe_err56;
wire sys_safe_err57;
wire sys_safe_err58;
wire sys_safe_err59;
wire sys_safe_err60;
wire sys_safe_err61;
wire sys_safe_err62;
wire sys_safe_err63;
wire sys_safe_err64;
wire sys_safe_err65;
wire sys_safe_err66;
wire sys_safe_err67;
wire sys_safe_err68;
wire sys_safe_err69;
wire sys_safe_err70;
wire sys_safe_err71;
wire sys_safe_err72;
wire sys_safe_err73;
wire sys_safe_err74;
wire sys_safe_err75;
wire sys_safe_err76;
wire sys_safe_err77;
wire sys_safe_err78;
wire sys_safe_err79;
wire sys_safe_err80;
wire sys_safe_err81;
wire sys_safe_err82;
wire sys_safe_err83;
wire sys_safe_err84;
wire sys_safe_err85;
wire sys_safe_err86;
wire sys_safe_err87;
wire sys_safe_err88;
wire sys_safe_err89;
wire sys_safe_err90;
wire sys_safe_err91;
wire sys_safe_err92;
wire sys_safe_err93;
wire sys_safe_err94;
wire sys_safe_err95;
wire sys_safe_err96;
wire sys_safe_err97;
wire sys_safe_err98;
wire sys_safe_err99;
wire sys_safe_err100;
wire sys_safe_err101;
wire sys_safe_err102;
wire sys_safe_err103;
wire sys_safe_err104;
wire sys_safe_err105;
wire sys_safe_err106;
wire sys_safe_err107;
wire sys_safe_err108;
wire sys_safe_err109;
wire sys_safe_err110;
wire sys_safe_err111;
wire sys_safe_err112;
wire sys_safe_err113;
wire sys_safe_err114;
wire sys_safe_err115;
wire sys_safe_err116;
wire sys_safe_err117;
wire sys_safe_err;

wire env_fair0;
wire env_fair1;

wire sys_fair0;
wire sys_fair1;
wire sys_fair2;
wire sys_fair3;
wire sys_fair4;
wire sys_fair5;
wire sys_fair6;
wire sys_fair7;
wire sys_fair8;
wire sys_fair9;
wire sys_fair10;
wire sys_fair11;
wire sys_fair12;
wire sys_fair13;
wire sys_fair14;
wire sys_fair15;
wire sys_fair16;
wire sys_fair17;
wire fair_err;
wire o_err;

// =============================================================
//                        ENV_TRANSITION:
// =============================================================
// Assumption 3:
// G( hlock0=1 -> hbusreq0=1 );
assign env_safe_err0 =  ~(~ i_hlock0 | i_hbusreq0);

// Assumption 3:
// G( hlock1=1 -> hbusreq1=1 );
assign env_safe_err1 =  ~(~ i_hlock1 | i_hbusreq1);

// Assumption 3:
// G( hlock2=1 -> hbusreq2=1 );
assign env_safe_err2 =  ~(~ i_hlock2 | i_hbusreq2);

// Assumption 3:
// G( hlock3=1 -> hbusreq3=1 );
assign env_safe_err3 =  ~(~ i_hlock3 | i_hbusreq3);

// Assumption 3:
// G( hlock4=1 -> hbusreq4=1 );
assign env_safe_err4 =  ~(~ i_hlock4 | i_hbusreq4);

// Assumption 3:
// G( hlock5=1 -> hbusreq5=1 );
assign env_safe_err5 =  ~(~ i_hlock5 | i_hbusreq5);

// Assumption 3:
// G( hlock6=1 -> hbusreq6=1 );
assign env_safe_err6 =  ~(~ i_hlock6 | i_hbusreq6);

// Assumption 3:
// G( hlock7=1 -> hbusreq7=1 );
assign env_safe_err7 =  ~(~ i_hlock7 | i_hbusreq7);

// Assumption 3:
// G( hlock8=1 -> hbusreq8=1 );
assign env_safe_err8 =  ~(~ i_hlock8 | i_hbusreq8);

// Assumption 3:
// G( hlock9=1 -> hbusreq9=1 );
assign env_safe_err9 =  ~(~ i_hlock9 | i_hbusreq9);

// Assumption 3:
// G( hlock10=1 -> hbusreq10=1 );
assign env_safe_err10 =  ~(~ i_hlock10 | i_hbusreq10);

// Assumption 3:
// G( hlock11=1 -> hbusreq11=1 );
assign env_safe_err11 =  ~(~ i_hlock11 | i_hbusreq11);

// Assumption 3:
// G( hlock12=1 -> hbusreq12=1 );
assign env_safe_err12 =  ~(~ i_hlock12 | i_hbusreq12);

// Assumption 3:
// G( hlock13=1 -> hbusreq13=1 );
assign env_safe_err13 =  ~(~ i_hlock13 | i_hbusreq13);

// Assumption 3:
// G( hlock14=1 -> hbusreq14=1 );
assign env_safe_err14 =  ~(~ i_hlock14 | i_hbusreq14);

// Assumption 3:
// G( hlock15=1 -> hbusreq15=1 );
assign env_safe_err15 =  ~(~ i_hlock15 | i_hbusreq15);

// collecting together the safety error bits:
assign env_safe_err = env_safe_err0 |
                      env_safe_err1 |
                      env_safe_err2 |
                      env_safe_err3 |
                      env_safe_err4 |
                      env_safe_err5 |
                      env_safe_err6 |
                      env_safe_err7 |
                      env_safe_err8 |
                      env_safe_err9 |
                      env_safe_err10 |
                      env_safe_err11 |
                      env_safe_err12 |
                      env_safe_err13 |
                      env_safe_err14 |
                      env_safe_err15;

// =============================================================
//                        SYS_TRANSITION:
// =============================================================
// G((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0) -> (hbusreq0=0 <-> busreq=0));
assign sys_safe_err0 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq0 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0) -> (hbusreq1=0 <-> busreq=0));
assign sys_safe_err1 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq1 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0) -> (hbusreq2=0 <-> busreq=0));
assign sys_safe_err2 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq2 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0) -> (hbusreq3=0 <-> busreq=0));
assign sys_safe_err3 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq3 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0) -> (hbusreq4=0 <-> busreq=0));
assign sys_safe_err4 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq4 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0) -> (hbusreq5=0 <-> busreq=0));
assign sys_safe_err5 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq5 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0) -> (hbusreq6=0 <-> busreq=0));
assign sys_safe_err6 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq6 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0) -> (hbusreq7=0 <-> busreq=0));
assign sys_safe_err7 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq7 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1) -> (hbusreq8=0 <-> busreq=0));
assign sys_safe_err8 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq8 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1) -> (hbusreq9=0 <-> busreq=0));
assign sys_safe_err9 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq9 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1) -> (hbusreq10=0 <-> busreq=0));
assign sys_safe_err10 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq10 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1) -> (hbusreq11=0 <-> busreq=0));
assign sys_safe_err11 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq11 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1) -> (hbusreq12=0 <-> busreq=0));
assign sys_safe_err12 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 )|(~i_hbusreq12 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1) -> (hbusreq13=0 <-> busreq=0));
assign sys_safe_err13 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 )|(~i_hbusreq13 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1) -> (hbusreq14=0 <-> busreq=0));
assign sys_safe_err14 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 )|(~i_hbusreq14 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1) -> (hbusreq15=0 <-> busreq=0));
assign sys_safe_err15 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 )|(~i_hbusreq15 ^~ (~controllable_busreq)));

// Guarantee 1:
// G((hready=0) -> X(start=0));
assign sys_safe_err16 =  ~( reg_i_hready | controllable_nstart );

// G(((stateG2=1) * (start=1)) -> FALSE;
assign sys_safe_err17 =  ~( ~(reg_stateG2 & ~controllable_nstart) | 0 );

// G(((stateG3_0=1) * (stateG3_1=0) * (stateG3_2=0) * ((start=1))) -> FALSE);
// G(((stateG3_0=0) * (stateG3_1=1) * (stateG3_2=0) * ((start=1))) -> FALSE);
// G(((stateG3_0=1) * (stateG3_1=1) * (stateG3_2=0) * ((start=1))) -> FALSE);
// G(((stateG3_0=0) * (stateG3_1=0) * (stateG3_2=1) * ((start=1))) -> FALSE);
// all these rules can be summarized as: only in state 000, start=1 is allowed:
assign sys_safe_err18 =  (reg_stateG3_0 | reg_stateG3_1 | reg_stateG3_2) & ~controllable_nstart;

// G( (hready=1) -> (   (hgrant0=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err19 =  ~( ~(reg_i_hready) | ( ~reg_controllable_nhgrant0 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant1=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err20 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant1 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant2=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err21 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant2 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant3=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err22 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant3 ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant4=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err23 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant4 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant5=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err24 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant5 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant6=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err25 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant6 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant7=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err26 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant7 ^~ ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant8=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err27 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant8 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant9=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err28 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant9 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant10=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err29 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant10 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant11=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err30 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant11 ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant12=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=1))  ) );
assign sys_safe_err31 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant12 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant13=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=1))  ) );
assign sys_safe_err32 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant13 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant14=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=1))  ) );
assign sys_safe_err33 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant14 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant15=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=1))  ) );
assign sys_safe_err34 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant15 ^~ ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 ) ) );

// HMASTLOCK:
// G(  (hready=1) -> (locked=0 <-> X(hmastlock=0) ) );
assign sys_safe_err35 =  ~( ~(reg_i_hready) | (~reg_controllable_locked ^~ ~controllable_hmastlock) );

// Master 0:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err36 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 1:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err37 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 2:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err38 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 3:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err39 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 4:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err40 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 5:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err41 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 6:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err42 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 7:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err43 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 8:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err44 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 9:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err45 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 10:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err46 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 11:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err47 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 12:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=1)) ) );
assign sys_safe_err48 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & reg_controllable_hmaster3 ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 )) );

// Master 13:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=1)) ) );
assign sys_safe_err49 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & reg_controllable_hmaster3 ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 )) );

// Master 14:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=1)) ) );
assign sys_safe_err50 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & reg_controllable_hmaster2 & reg_controllable_hmaster3 ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 )) );

// Master 15:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=1)) ) );
assign sys_safe_err51 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & reg_controllable_hmaster2 & reg_controllable_hmaster3 ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 )) );

// Guarantee 6.2:
// G( ((X(start=0))) -> ( (hmastlock=1) <-> X(hmastlock=1)) );
assign sys_safe_err52 =  ~( ~(controllable_nstart) | ( reg_controllable_hmastlock ^~ controllable_hmastlock) );

// G( (decide=1  *  hlock0=1  *  X(hgrant0=1) )->X(locked=1));
assign sys_safe_err53 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock0 & ~controllable_nhgrant0) | (controllable_locked) );

// G((decide=1  *  hlock0=0  *  X(hgrant0=1))->X(locked=0));
assign sys_safe_err54 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock0 & ~controllable_nhgrant0) | (~controllable_locked) );

// G( (decide=1  *  hlock1=1  *  X(hgrant1=1) )->X(locked=1));
assign sys_safe_err55 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock1 & controllable_hgrant1) | (controllable_locked) );

// G((decide=1  *  hlock1=0  *  X(hgrant1=1))->X(locked=0));
assign sys_safe_err56 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock1 & controllable_hgrant1) | (~controllable_locked) );

// G( (decide=1  *  hlock2=1  *  X(hgrant2=1) )->X(locked=1));
assign sys_safe_err57 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock2 & controllable_hgrant2) | (controllable_locked) );

// G((decide=1  *  hlock2=0  *  X(hgrant2=1))->X(locked=0));
assign sys_safe_err58 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock2 & controllable_hgrant2) | (~controllable_locked) );

// G( (decide=1  *  hlock3=1  *  X(hgrant3=1) )->X(locked=1));
assign sys_safe_err59 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock3 & controllable_hgrant3) | (controllable_locked) );

// G((decide=1  *  hlock3=0  *  X(hgrant3=1))->X(locked=0));
assign sys_safe_err60 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock3 & controllable_hgrant3) | (~controllable_locked) );

// G( (decide=1  *  hlock4=1  *  X(hgrant4=1) )->X(locked=1));
assign sys_safe_err61 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock4 & controllable_hgrant4) | (controllable_locked) );

// G((decide=1  *  hlock4=0  *  X(hgrant4=1))->X(locked=0));
assign sys_safe_err62 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock4 & controllable_hgrant4) | (~controllable_locked) );

// G( (decide=1  *  hlock5=1  *  X(hgrant5=1) )->X(locked=1));
assign sys_safe_err63 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock5 & controllable_hgrant5) | (controllable_locked) );

// G((decide=1  *  hlock5=0  *  X(hgrant5=1))->X(locked=0));
assign sys_safe_err64 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock5 & controllable_hgrant5) | (~controllable_locked) );

// G( (decide=1  *  hlock6=1  *  X(hgrant6=1) )->X(locked=1));
assign sys_safe_err65 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock6 & controllable_hgrant6) | (controllable_locked) );

// G((decide=1  *  hlock6=0  *  X(hgrant6=1))->X(locked=0));
assign sys_safe_err66 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock6 & controllable_hgrant6) | (~controllable_locked) );

// G( (decide=1  *  hlock7=1  *  X(hgrant7=1) )->X(locked=1));
assign sys_safe_err67 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock7 & controllable_hgrant7) | (controllable_locked) );

// G((decide=1  *  hlock7=0  *  X(hgrant7=1))->X(locked=0));
assign sys_safe_err68 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock7 & controllable_hgrant7) | (~controllable_locked) );

// G( (decide=1  *  hlock8=1  *  X(hgrant8=1) )->X(locked=1));
assign sys_safe_err69 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock8 & controllable_hgrant8) | (controllable_locked) );

// G((decide=1  *  hlock8=0  *  X(hgrant8=1))->X(locked=0));
assign sys_safe_err70 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock8 & controllable_hgrant8) | (~controllable_locked) );

// G( (decide=1  *  hlock9=1  *  X(hgrant9=1) )->X(locked=1));
assign sys_safe_err71 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock9 & controllable_hgrant9) | (controllable_locked) );

// G((decide=1  *  hlock9=0  *  X(hgrant9=1))->X(locked=0));
assign sys_safe_err72 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock9 & controllable_hgrant9) | (~controllable_locked) );

// G( (decide=1  *  hlock10=1  *  X(hgrant10=1) )->X(locked=1));
assign sys_safe_err73 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock10 & controllable_hgrant10) | (controllable_locked) );

// G((decide=1  *  hlock10=0  *  X(hgrant10=1))->X(locked=0));
assign sys_safe_err74 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock10 & controllable_hgrant10) | (~controllable_locked) );

// G( (decide=1  *  hlock11=1  *  X(hgrant11=1) )->X(locked=1));
assign sys_safe_err75 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock11 & controllable_hgrant11) | (controllable_locked) );

// G((decide=1  *  hlock11=0  *  X(hgrant11=1))->X(locked=0));
assign sys_safe_err76 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock11 & controllable_hgrant11) | (~controllable_locked) );

// G( (decide=1  *  hlock12=1  *  X(hgrant12=1) )->X(locked=1));
assign sys_safe_err77 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock12 & controllable_hgrant12) | (controllable_locked) );

// G((decide=1  *  hlock12=0  *  X(hgrant12=1))->X(locked=0));
assign sys_safe_err78 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock12 & controllable_hgrant12) | (~controllable_locked) );

// G( (decide=1  *  hlock13=1  *  X(hgrant13=1) )->X(locked=1));
assign sys_safe_err79 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock13 & controllable_hgrant13) | (controllable_locked) );

// G((decide=1  *  hlock13=0  *  X(hgrant13=1))->X(locked=0));
assign sys_safe_err80 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock13 & controllable_hgrant13) | (~controllable_locked) );

// G( (decide=1  *  hlock14=1  *  X(hgrant14=1) )->X(locked=1));
assign sys_safe_err81 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock14 & controllable_hgrant14) | (controllable_locked) );

// G((decide=1  *  hlock14=0  *  X(hgrant14=1))->X(locked=0));
assign sys_safe_err82 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock14 & controllable_hgrant14) | (~controllable_locked) );

// G( (decide=1  *  hlock15=1  *  X(hgrant15=1) )->X(locked=1));
assign sys_safe_err83 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock15 & controllable_hgrant15) | (controllable_locked) );

// G((decide=1  *  hlock15=0  *  X(hgrant15=1))->X(locked=0));
assign sys_safe_err84 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock15 & controllable_hgrant15) | (~controllable_locked) );

// G( (decide=0) -> (  ((hgrant0=0)<->X(hgrant0=0))  ));
assign sys_safe_err85 =  ~( ~(reg_controllable_ndecide) | (reg_controllable_nhgrant0 ^~ controllable_nhgrant0) );

// G( (decide=0) -> (  ((hgrant1=0)<->X(hgrant1=0))  ));
assign sys_safe_err86 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant1 ^~ ~controllable_hgrant1) );

// G( (decide=0) -> (  ((hgrant2=0)<->X(hgrant2=0))  ));
assign sys_safe_err87 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant2 ^~ ~controllable_hgrant2) );

// G( (decide=0) -> (  ((hgrant3=0)<->X(hgrant3=0))  ));
assign sys_safe_err88 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant3 ^~ ~controllable_hgrant3) );

// G( (decide=0) -> (  ((hgrant4=0)<->X(hgrant4=0))  ));
assign sys_safe_err89 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant4 ^~ ~controllable_hgrant4) );

// G( (decide=0) -> (  ((hgrant5=0)<->X(hgrant5=0))  ));
assign sys_safe_err90 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant5 ^~ ~controllable_hgrant5) );

// G( (decide=0) -> (  ((hgrant6=0)<->X(hgrant6=0))  ));
assign sys_safe_err91 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant6 ^~ ~controllable_hgrant6) );

// G( (decide=0) -> (  ((hgrant7=0)<->X(hgrant7=0))  ));
assign sys_safe_err92 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant7 ^~ ~controllable_hgrant7) );

// G( (decide=0) -> (  ((hgrant8=0)<->X(hgrant8=0))  ));
assign sys_safe_err93 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant8 ^~ ~controllable_hgrant8) );

// G( (decide=0) -> (  ((hgrant9=0)<->X(hgrant9=0))  ));
assign sys_safe_err94 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant9 ^~ ~controllable_hgrant9) );

// G( (decide=0) -> (  ((hgrant10=0)<->X(hgrant10=0))  ));
assign sys_safe_err95 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant10 ^~ ~controllable_hgrant10) );

// G( (decide=0) -> (  ((hgrant11=0)<->X(hgrant11=0))  ));
assign sys_safe_err96 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant11 ^~ ~controllable_hgrant11) );

// G( (decide=0) -> (  ((hgrant12=0)<->X(hgrant12=0))  ));
assign sys_safe_err97 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant12 ^~ ~controllable_hgrant12) );

// G( (decide=0) -> (  ((hgrant13=0)<->X(hgrant13=0))  ));
assign sys_safe_err98 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant13 ^~ ~controllable_hgrant13) );

// G( (decide=0) -> (  ((hgrant14=0)<->X(hgrant14=0))  ));
assign sys_safe_err99 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant14 ^~ ~controllable_hgrant14) );

// G( (decide=0) -> (  ((hgrant15=0)<->X(hgrant15=0))  ));
assign sys_safe_err100 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant15 ^~ ~controllable_hgrant15) );

// G((decide=0)->(locked=0 <-> X(locked=0)));
assign sys_safe_err101 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_locked ^~ ~controllable_locked) );

// G(((stateG10_1=1) * (((hgrant1=1)) * (hbusreq1=0)))->FALSE);
assign sys_safe_err102 =  ~( ~(reg_stateG10_1 & (controllable_hgrant1 & ~i_hbusreq1)) | 0 );

// G(((stateG10_2=1) * (((hgrant2=1)) * (hbusreq2=0)))->FALSE);
assign sys_safe_err103 =  ~( ~(reg_stateG10_2 & (controllable_hgrant2 & ~i_hbusreq2)) | 0 );

// G(((stateG10_3=1) * (((hgrant3=1)) * (hbusreq3=0)))->FALSE);
assign sys_safe_err104 =  ~( ~(reg_stateG10_3 & (controllable_hgrant3 & ~i_hbusreq3)) | 0 );

// G(((stateG10_4=1) * (((hgrant4=1)) * (hbusreq4=0)))->FALSE);
assign sys_safe_err105 =  ~( ~(reg_stateG10_4 & (controllable_hgrant4 & ~i_hbusreq4)) | 0 );

// G(((stateG10_5=1) * (((hgrant5=1)) * (hbusreq5=0)))->FALSE);
assign sys_safe_err106 =  ~( ~(reg_stateG10_5 & (controllable_hgrant5 & ~i_hbusreq5)) | 0 );

// G(((stateG10_6=1) * (((hgrant6=1)) * (hbusreq6=0)))->FALSE);
assign sys_safe_err107 =  ~( ~(reg_stateG10_6 & (controllable_hgrant6 & ~i_hbusreq6)) | 0 );

// G(((stateG10_7=1) * (((hgrant7=1)) * (hbusreq7=0)))->FALSE);
assign sys_safe_err108 =  ~( ~(reg_stateG10_7 & (controllable_hgrant7 & ~i_hbusreq7)) | 0 );

// G(((stateG10_8=1) * (((hgrant8=1)) * (hbusreq8=0)))->FALSE);
assign sys_safe_err109 =  ~( ~(reg_stateG10_8 & (controllable_hgrant8 & ~i_hbusreq8)) | 0 );

// G(((stateG10_9=1) * (((hgrant9=1)) * (hbusreq9=0)))->FALSE);
assign sys_safe_err110 =  ~( ~(reg_stateG10_9 & (controllable_hgrant9 & ~i_hbusreq9)) | 0 );

// G(((stateG10_10=1) * (((hgrant10=1)) * (hbusreq10=0)))->FALSE);
assign sys_safe_err111 =  ~( ~(reg_stateG10_10 & (controllable_hgrant10 & ~i_hbusreq10)) | 0 );

// G(((stateG10_11=1) * (((hgrant11=1)) * (hbusreq11=0)))->FALSE);
assign sys_safe_err112 =  ~( ~(reg_stateG10_11 & (controllable_hgrant11 & ~i_hbusreq11)) | 0 );

// G(((stateG10_12=1) * (((hgrant12=1)) * (hbusreq12=0)))->FALSE);
assign sys_safe_err113 =  ~( ~(reg_stateG10_12 & (controllable_hgrant12 & ~i_hbusreq12)) | 0 );

// G(((stateG10_13=1) * (((hgrant13=1)) * (hbusreq13=0)))->FALSE);
assign sys_safe_err114 =  ~( ~(reg_stateG10_13 & (controllable_hgrant13 & ~i_hbusreq13)) | 0 );

// G(((stateG10_14=1) * (((hgrant14=1)) * (hbusreq14=0)))->FALSE);
assign sys_safe_err115 =  ~( ~(reg_stateG10_14 & (controllable_hgrant14 & ~i_hbusreq14)) | 0 );

// G(((stateG10_15=1) * (((hgrant15=1)) * (hbusreq15=0)))->FALSE);
assign sys_safe_err116 =  ~( ~(reg_stateG10_15 & (controllable_hgrant15 & ~i_hbusreq15)) | 0 );

// default master
// G((decide=1  *  hbusreq0=0  *  hbusreq1=0  *  hbusreq2=0  *  hbusreq3=0  *  hbusreq4=0  *  hbusreq5=0  *  hbusreq6=0  *  hbusreq7=0  *  hbusreq8=0  *  hbusreq9=0  *  hbusreq10=0  *  hbusreq11=0  *  hbusreq12=0  *  hbusreq13=0  *  hbusreq14=0  *  hbusreq15=0) -> X(hgrant0=1));
assign sys_safe_err117 =  ~( ~(~reg_controllable_ndecide & (~reg_i_hbusreq0 & ~reg_i_hbusreq1 & ~reg_i_hbusreq2 & ~reg_i_hbusreq3 & ~reg_i_hbusreq4 & ~reg_i_hbusreq5 & ~reg_i_hbusreq6 & ~reg_i_hbusreq7 & ~reg_i_hbusreq8 & ~reg_i_hbusreq9 & ~reg_i_hbusreq10 & ~reg_i_hbusreq11 & ~reg_i_hbusreq12 & ~reg_i_hbusreq13 & ~reg_i_hbusreq14 & ~reg_i_hbusreq15)) | (~controllable_nhgrant0) );

// collecting together the safety error bits:
assign sys_safe_err = sys_safe_err0 |
                      sys_safe_err1 |
                      sys_safe_err2 |
                      sys_safe_err3 |
                      sys_safe_err4 |
                      sys_safe_err5 |
                      sys_safe_err6 |
                      sys_safe_err7 |
                      sys_safe_err8 |
                      sys_safe_err9 |
                      sys_safe_err10 |
                      sys_safe_err11 |
                      sys_safe_err12 |
                      sys_safe_err13 |
                      sys_safe_err14 |
                      sys_safe_err15 |
                      sys_safe_err16 |
                      sys_safe_err17 |
                      sys_safe_err18 |
                      sys_safe_err19 |
                      sys_safe_err20 |
                      sys_safe_err21 |
                      sys_safe_err22 |
                      sys_safe_err23 |
                      sys_safe_err24 |
                      sys_safe_err25 |
                      sys_safe_err26 |
                      sys_safe_err27 |
                      sys_safe_err28 |
                      sys_safe_err29 |
                      sys_safe_err30 |
                      sys_safe_err31 |
                      sys_safe_err32 |
                      sys_safe_err33 |
                      sys_safe_err34 |
                      sys_safe_err35 |
                      sys_safe_err36 |
                      sys_safe_err37 |
                      sys_safe_err38 |
                      sys_safe_err39 |
                      sys_safe_err40 |
                      sys_safe_err41 |
                      sys_safe_err42 |
                      sys_safe_err43 |
                      sys_safe_err44 |
                      sys_safe_err45 |
                      sys_safe_err46 |
                      sys_safe_err47 |
                      sys_safe_err48 |
                      sys_safe_err49 |
                      sys_safe_err50 |
                      sys_safe_err51 |
                      sys_safe_err52 |
                      sys_safe_err53 |
                      sys_safe_err54 |
                      sys_safe_err55 |
                      sys_safe_err56 |
                      sys_safe_err57 |
                      sys_safe_err58 |
                      sys_safe_err59 |
                      sys_safe_err60 |
                      sys_safe_err61 |
                      sys_safe_err62 |
                      sys_safe_err63 |
                      sys_safe_err64 |
                      sys_safe_err65 |
                      sys_safe_err66 |
                      sys_safe_err67 |
                      sys_safe_err68 |
                      sys_safe_err69 |
                      sys_safe_err70 |
                      sys_safe_err71 |
                      sys_safe_err72 |
                      sys_safe_err73 |
                      sys_safe_err74 |
                      sys_safe_err75 |
                      sys_safe_err76 |
                      sys_safe_err77 |
                      sys_safe_err78 |
                      sys_safe_err79 |
                      sys_safe_err80 |
                      sys_safe_err81 |
                      sys_safe_err82 |
                      sys_safe_err83 |
                      sys_safe_err84 |
                      sys_safe_err85 |
                      sys_safe_err86 |
                      sys_safe_err87 |
                      sys_safe_err88 |
                      sys_safe_err89 |
                      sys_safe_err90 |
                      sys_safe_err91 |
                      sys_safe_err92 |
                      sys_safe_err93 |
                      sys_safe_err94 |
                      sys_safe_err95 |
                      sys_safe_err96 |
                      sys_safe_err97 |
                      sys_safe_err98 |
                      sys_safe_err99 |
                      sys_safe_err100 |
                      sys_safe_err101 |
                      sys_safe_err102 |
                      sys_safe_err103 |
                      sys_safe_err104 |
                      sys_safe_err105 |
                      sys_safe_err106 |
                      sys_safe_err107 |
                      sys_safe_err108 |
                      sys_safe_err109 |
                      sys_safe_err110 |
                      sys_safe_err111 |
                      sys_safe_err112 |
                      sys_safe_err113 |
                      sys_safe_err114 |
                      sys_safe_err115 |
                      sys_safe_err116 |
                      sys_safe_err117;

// =============================================================
//                          ENV_FAIRNESS:
// =============================================================
// Assumption 1: 
// G(F(stateA1=0));
assign env_fair0 =  ~reg_stateA1;

// Assumption 2:
// G(F(hready=1));
assign env_fair1 =  i_hready;


// =============================================================
//                          SYS_FAIRNESS:
// =============================================================
// Guarantee 2:
// G(F(stateG2=0));
assign sys_fair0 = ~reg_stateG2;

// Guarantee 3:
// G(F((stateG3_0=0)  *  (stateG3_1=0)  *  (stateG3_2=0)));
assign sys_fair1 =  (~reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2);

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0))  |  hbusreq0=0));
assign sys_fair2 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq0;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0))  |  hbusreq1=0));
assign sys_fair3 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq1;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0))  |  hbusreq2=0));
assign sys_fair4 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq2;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0))  |  hbusreq3=0));
assign sys_fair5 =  ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq3;

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0))  |  hbusreq4=0));
assign sys_fair6 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq4;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0))  |  hbusreq5=0));
assign sys_fair7 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq5;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0))  |  hbusreq6=0));
assign sys_fair8 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq6;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0))  |  hbusreq7=0));
assign sys_fair9 =  ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq7;

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1))  |  hbusreq8=0));
assign sys_fair10 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq8;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1))  |  hbusreq9=0));
assign sys_fair11 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq9;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1))  |  hbusreq10=0));
assign sys_fair12 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq10;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1))  |  hbusreq11=0));
assign sys_fair13 =  ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq11;

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1))  |  hbusreq12=0));
assign sys_fair14 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 ) | ~i_hbusreq12;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=1))  |  hbusreq13=0));
assign sys_fair15 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & controllable_hmaster3 ) | ~i_hbusreq13;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1))  |  hbusreq14=0));
assign sys_fair16 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 ) | ~i_hbusreq14;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=1))  |  hbusreq15=0));
assign sys_fair17 =  ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & controllable_hmaster3 ) | ~i_hbusreq15;

assign fair_err = (fair_cnt >= 4'b1110);

// computing the error output bit:
assign o_err = ~env_safe_err & ~env_safe_err_happened & (sys_safe_err | fair_err);

initial
 begin
  reg_i_hready = 0;
  reg_i_hbusreq0 = 0;
  reg_i_hlock0 = 0;
  reg_i_hbusreq1 = 0;
  reg_i_hlock1 = 0;
  reg_i_hbusreq2 = 0;
  reg_i_hlock2 = 0;
  reg_i_hbusreq3 = 0;
  reg_i_hlock3 = 0;
  reg_i_hbusreq4 = 0;
  reg_i_hlock4 = 0;
  reg_i_hbusreq5 = 0;
  reg_i_hlock5 = 0;
  reg_i_hbusreq6 = 0;
  reg_i_hlock6 = 0;
  reg_i_hbusreq7 = 0;
  reg_i_hlock7 = 0;
  reg_i_hbusreq8 = 0;
  reg_i_hlock8 = 0;
  reg_i_hbusreq9 = 0;
  reg_i_hlock9 = 0;
  reg_i_hbusreq10 = 0;
  reg_i_hlock10 = 0;
  reg_i_hbusreq11 = 0;
  reg_i_hlock11 = 0;
  reg_i_hbusreq12 = 0;
  reg_i_hlock12 = 0;
  reg_i_hbusreq13 = 0;
  reg_i_hlock13 = 0;
  reg_i_hbusreq14 = 0;
  reg_i_hlock14 = 0;
  reg_i_hbusreq15 = 0;
  reg_i_hlock15 = 0;
  reg_controllable_hmaster0 = 0;
  reg_controllable_hmaster1 = 0;
  reg_controllable_hmaster2 = 0;
  reg_controllable_hmaster3 = 0;
  reg_controllable_hmastlock = 0;
  reg_controllable_nstart = 0;
  reg_controllable_ndecide = 0;
  reg_controllable_locked = 0;
  reg_controllable_nhgrant0 = 0;
  reg_controllable_hgrant1 = 0;
  reg_controllable_hgrant2 = 0;
  reg_controllable_hgrant3 = 0;
  reg_controllable_hgrant4 = 0;
  reg_controllable_hgrant5 = 0;
  reg_controllable_hgrant6 = 0;
  reg_controllable_hgrant7 = 0;
  reg_controllable_hgrant8 = 0;
  reg_controllable_hgrant9 = 0;
  reg_controllable_hgrant10 = 0;
  reg_controllable_hgrant11 = 0;
  reg_controllable_hgrant12 = 0;
  reg_controllable_hgrant13 = 0;
  reg_controllable_hgrant14 = 0;
  reg_controllable_hgrant15 = 0;
  reg_controllable_busreq = 0;
  reg_stateA1 = 0;
  reg_stateG2 = 0;
  reg_stateG3_0 = 0;
  reg_stateG3_1 = 0;
  reg_stateG3_2 = 0;
  reg_stateG10_1 = 0;
  reg_stateG10_2 = 0;
  reg_stateG10_3 = 0;
  reg_stateG10_4 = 0;
  reg_stateG10_5 = 0;
  reg_stateG10_6 = 0;
  reg_stateG10_7 = 0;
  reg_stateG10_8 = 0;
  reg_stateG10_9 = 0;
  reg_stateG10_10 = 0;
  reg_stateG10_11 = 0;
  reg_stateG10_12 = 0;
  reg_stateG10_13 = 0;
  reg_stateG10_14 = 0;
  reg_stateG10_15 = 0;
  env_safe_err_happened = 0;
  next_env_fair = 0;
  fair_cnt = 0;
  next_sys_fair = 0;
 end


always @(posedge i_clk)
 begin
   // We remember if an environment error occurred:
   env_safe_err_happened = env_safe_err_happened | env_safe_err;

   // Updating the fairness counters: 
   if((next_sys_fair == 0) & sys_fair0)
    begin
      next_sys_fair = 1;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 1) & sys_fair1)
    begin
      next_sys_fair = 2;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 2) & sys_fair2)
    begin
      next_sys_fair = 3;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 3) & sys_fair3)
    begin
      next_sys_fair = 4;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 4) & sys_fair4)
    begin
      next_sys_fair = 5;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 5) & sys_fair5)
    begin
      next_sys_fair = 6;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 6) & sys_fair6)
    begin
      next_sys_fair = 7;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 7) & sys_fair7)
    begin
      next_sys_fair = 8;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 8) & sys_fair8)
    begin
      next_sys_fair = 9;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 9) & sys_fair9)
    begin
      next_sys_fair = 10;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 10) & sys_fair10)
    begin
      next_sys_fair = 11;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 11) & sys_fair11)
    begin
      next_sys_fair = 12;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 12) & sys_fair12)
    begin
      next_sys_fair = 13;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 13) & sys_fair13)
    begin
      next_sys_fair = 14;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 14) & sys_fair14)
    begin
      next_sys_fair = 15;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 15) & sys_fair15)
    begin
      next_sys_fair = 16;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 16) & sys_fair16)
    begin
      next_sys_fair = 17;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 17) & sys_fair17)
    begin
      next_sys_fair = 0;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if(~next_env_fair & env_fair0)
    begin
      next_env_fair = 1;
    end
   else if(next_env_fair & env_fair1)
    begin
      next_env_fair = 0;
      fair_cnt = fair_cnt + 1;
    end

   // Updating the automata: 
   // Automaton A1: 
   if(~reg_stateA1 & controllable_hmastlock & ~i_hburst0 & ~i_hburst1)
    begin
      reg_stateA1 = 1'b1;
    end
   else if(reg_stateA1 & ~controllable_busreq)
    begin
      reg_stateA1 = 1'b0;
    end

   // Automaton G2: 
   if(~reg_stateG2)
    begin
      if(controllable_hmastlock & ~controllable_nstart & ~i_hburst0 & ~i_hburst1)
       begin
         reg_stateG2 = 1'b1;
       end
    end
   else // if(reg_stateG2)
    begin
      if(~controllable_busreq)
       begin
         reg_stateG2 = 1'b0;
       end
    end

   // Automaton G3: 
   if(~reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2 & controllable_hmastlock & ~controllable_nstart &  ~i_hburst0 & i_hburst1 & ~i_hready)
    begin
      reg_stateG3_0 = 1'b1;
      reg_stateG3_1 = 1'b0;
      reg_stateG3_2 = 1'b0;
    end
   else if(~reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2 & controllable_hmastlock & ~controllable_nstart &  ~i_hburst0 & i_hburst1 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b1;
      reg_stateG3_2 = 1'b0;
    end
   else if(reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b1;
      reg_stateG3_2 = 1'b0;
    end
   else if(~reg_stateG3_0 & reg_stateG3_1 & ~reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b1;
      reg_stateG3_1 = 1'b1;
      reg_stateG3_2 = 1'b0;
    end
   else if(reg_stateG3_0 & reg_stateG3_1 & ~reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b0;
      reg_stateG3_2 = 1'b1;
    end
   else if(~reg_stateG3_0 & ~reg_stateG3_1 & reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b0;
      reg_stateG3_2 = 1'b0;
    end

   // Automaton G10_1: 
   if(~reg_stateG10_1 & ~controllable_hgrant1 & ~i_hbusreq1)
    begin
      reg_stateG10_1 = 1'b1;
    end
   else if(reg_stateG10_1 & i_hbusreq1)
    begin
      reg_stateG10_1 = 1'b0;
    end

   // Automaton G10_2: 
   if(~reg_stateG10_2 & ~controllable_hgrant2 & ~i_hbusreq2)
    begin
      reg_stateG10_2 = 1'b1;
    end
   else if(reg_stateG10_2 & i_hbusreq2)
    begin
      reg_stateG10_2 = 1'b0;
    end

   // Automaton G10_3: 
   if(~reg_stateG10_3 & ~controllable_hgrant3 & ~i_hbusreq3)
    begin
      reg_stateG10_3 = 1'b1;
    end
   else if(reg_stateG10_3 & i_hbusreq3)
    begin
      reg_stateG10_3 = 1'b0;
    end

   // Automaton G10_4: 
   if(~reg_stateG10_4 & ~controllable_hgrant4 & ~i_hbusreq4)
    begin
      reg_stateG10_4 = 1'b1;
    end
   else if(reg_stateG10_4 & i_hbusreq4)
    begin
      reg_stateG10_4 = 1'b0;
    end

   // Automaton G10_5: 
   if(~reg_stateG10_5 & ~controllable_hgrant5 & ~i_hbusreq5)
    begin
      reg_stateG10_5 = 1'b1;
    end
   else if(reg_stateG10_5 & i_hbusreq5)
    begin
      reg_stateG10_5 = 1'b0;
    end

   // Automaton G10_6: 
   if(~reg_stateG10_6 & ~controllable_hgrant6 & ~i_hbusreq6)
    begin
      reg_stateG10_6 = 1'b1;
    end
   else if(reg_stateG10_6 & i_hbusreq6)
    begin
      reg_stateG10_6 = 1'b0;
    end

   // Automaton G10_7: 
   if(~reg_stateG10_7 & ~controllable_hgrant7 & ~i_hbusreq7)
    begin
      reg_stateG10_7 = 1'b1;
    end
   else if(reg_stateG10_7 & i_hbusreq7)
    begin
      reg_stateG10_7 = 1'b0;
    end

   // Automaton G10_8: 
   if(~reg_stateG10_8 & ~controllable_hgrant8 & ~i_hbusreq8)
    begin
      reg_stateG10_8 = 1'b1;
    end
   else if(reg_stateG10_8 & i_hbusreq8)
    begin
      reg_stateG10_8 = 1'b0;
    end

   // Automaton G10_9: 
   if(~reg_stateG10_9 & ~controllable_hgrant9 & ~i_hbusreq9)
    begin
      reg_stateG10_9 = 1'b1;
    end
   else if(reg_stateG10_9 & i_hbusreq9)
    begin
      reg_stateG10_9 = 1'b0;
    end

   // Automaton G10_10: 
   if(~reg_stateG10_10 & ~controllable_hgrant10 & ~i_hbusreq10)
    begin
      reg_stateG10_10 = 1'b1;
    end
   else if(reg_stateG10_10 & i_hbusreq10)
    begin
      reg_stateG10_10 = 1'b0;
    end

   // Automaton G10_11: 
   if(~reg_stateG10_11 & ~controllable_hgrant11 & ~i_hbusreq11)
    begin
      reg_stateG10_11 = 1'b1;
    end
   else if(reg_stateG10_11 & i_hbusreq11)
    begin
      reg_stateG10_11 = 1'b0;
    end

   // Automaton G10_12: 
   if(~reg_stateG10_12 & ~controllable_hgrant12 & ~i_hbusreq12)
    begin
      reg_stateG10_12 = 1'b1;
    end
   else if(reg_stateG10_12 & i_hbusreq12)
    begin
      reg_stateG10_12 = 1'b0;
    end

   // Automaton G10_13: 
   if(~reg_stateG10_13 & ~controllable_hgrant13 & ~i_hbusreq13)
    begin
      reg_stateG10_13 = 1'b1;
    end
   else if(reg_stateG10_13 & i_hbusreq13)
    begin
      reg_stateG10_13 = 1'b0;
    end

   // Automaton G10_14: 
   if(~reg_stateG10_14 & ~controllable_hgrant14 & ~i_hbusreq14)
    begin
      reg_stateG10_14 = 1'b1;
    end
   else if(reg_stateG10_14 & i_hbusreq14)
    begin
      reg_stateG10_14 = 1'b0;
    end

   // Automaton G10_15: 
   if(~reg_stateG10_15 & ~controllable_hgrant15 & ~i_hbusreq15)
    begin
      reg_stateG10_15 = 1'b1;
    end
   else if(reg_stateG10_15 & i_hbusreq15)
    begin
      reg_stateG10_15 = 1'b0;
    end

   // Latching the previous input:
   reg_i_hready =  i_hready;
   reg_i_hbusreq0 =  i_hbusreq0;
   reg_i_hlock0 =  i_hlock0;
   reg_i_hbusreq1 =  i_hbusreq1;
   reg_i_hlock1 =  i_hlock1;
   reg_i_hbusreq2 =  i_hbusreq2;
   reg_i_hlock2 =  i_hlock2;
   reg_i_hbusreq3 =  i_hbusreq3;
   reg_i_hlock3 =  i_hlock3;
   reg_i_hbusreq4 =  i_hbusreq4;
   reg_i_hlock4 =  i_hlock4;
   reg_i_hbusreq5 =  i_hbusreq5;
   reg_i_hlock5 =  i_hlock5;
   reg_i_hbusreq6 =  i_hbusreq6;
   reg_i_hlock6 =  i_hlock6;
   reg_i_hbusreq7 =  i_hbusreq7;
   reg_i_hlock7 =  i_hlock7;
   reg_i_hbusreq8 =  i_hbusreq8;
   reg_i_hlock8 =  i_hlock8;
   reg_i_hbusreq9 =  i_hbusreq9;
   reg_i_hlock9 =  i_hlock9;
   reg_i_hbusreq10 =  i_hbusreq10;
   reg_i_hlock10 =  i_hlock10;
   reg_i_hbusreq11 =  i_hbusreq11;
   reg_i_hlock11 =  i_hlock11;
   reg_i_hbusreq12 =  i_hbusreq12;
   reg_i_hlock12 =  i_hlock12;
   reg_i_hbusreq13 =  i_hbusreq13;
   reg_i_hlock13 =  i_hlock13;
   reg_i_hbusreq14 =  i_hbusreq14;
   reg_i_hlock14 =  i_hlock14;
   reg_i_hbusreq15 =  i_hbusreq15;
   reg_i_hlock15 =  i_hlock15;
   reg_controllable_hmaster0 =  controllable_hmaster0;
   reg_controllable_hmaster1 =  controllable_hmaster1;
   reg_controllable_hmaster2 =  controllable_hmaster2;
   reg_controllable_hmaster3 =  controllable_hmaster3;
   reg_controllable_hmastlock =  controllable_hmastlock;
   reg_controllable_nstart =  controllable_nstart;
   reg_controllable_ndecide =  controllable_ndecide;
   reg_controllable_locked =  controllable_locked;
   reg_controllable_nhgrant0 =  controllable_nhgrant0;
   reg_controllable_hgrant1 =  controllable_hgrant1;
   reg_controllable_hgrant2 =  controllable_hgrant2;
   reg_controllable_hgrant3 =  controllable_hgrant3;
   reg_controllable_hgrant4 =  controllable_hgrant4;
   reg_controllable_hgrant5 =  controllable_hgrant5;
   reg_controllable_hgrant6 =  controllable_hgrant6;
   reg_controllable_hgrant7 =  controllable_hgrant7;
   reg_controllable_hgrant8 =  controllable_hgrant8;
   reg_controllable_hgrant9 =  controllable_hgrant9;
   reg_controllable_hgrant10 =  controllable_hgrant10;
   reg_controllable_hgrant11 =  controllable_hgrant11;
   reg_controllable_hgrant12 =  controllable_hgrant12;
   reg_controllable_hgrant13 =  controllable_hgrant13;
   reg_controllable_hgrant14 =  controllable_hgrant14;
   reg_controllable_hgrant15 =  controllable_hgrant15;
   reg_controllable_busreq =  controllable_busreq;

 end
endmodule

-------------------------------

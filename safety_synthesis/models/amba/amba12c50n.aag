aag 1443 48 76 1 1319
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98 1
100 18
102 80
104 78
106 20
108 84
110 56
112 22
114 50
116 24
118 26
120 92
122 28
124 30
126 32
128 1709
130 1733
132 1753
134 10
136 44
138 1783
140 1805
142 8
144 2341
146 2347
148 2353
150 2359
152 2365
154 2371
156 2393
158 6
160 62
162 2415
164 4
166 2461
168 60
170 2491
172 2513
174 2
176 58
178 2535
180 96
182 52
184 36
186 2557
188 94
190 42
192 34
194 38
196 64
198 2579
200 90
202 40
204 88
206 66
208 2601
210 86
212 46
214 68
216 2623
218 301
220 70
222 2645
224 72
226 2667
228 14
230 74
232 2863
234 2869
236 2875
238 2881
240 2887
242 16
244 76
246 12
248 82
1624
250 86 15
252 88 17
254 253 251
256 90 19
258 257 254
260 94 21
262 261 258
264 96 23
266 265 262
268 25 2
270 269 266
272 27 4
274 273 270
276 29 6
278 277 274
280 31 8
282 281 278
284 33 10
286 285 282
288 83 42
290 289 286
292 79 40
294 293 290
296 219 98
298 297 98
300 299 294
302 63 61
304 302 59
306 304 53
308 39 14
310 38 15
312 311 309
314 313 306
316 62 61
318 316 59
320 318 53
322 39 16
324 38 17
326 325 323
328 327 320
330 329 315
332 63 60
334 332 59
336 334 53
338 39 18
340 38 19
342 341 339
344 343 336
346 345 330
348 62 60
350 348 59
352 350 53
354 39 20
356 38 21
358 357 355
360 359 352
362 361 346
364 302 58
366 364 53
368 39 22
370 38 23
372 371 369
374 373 366
376 375 362
378 316 58
380 378 53
382 39 24
384 38 25
386 385 383
388 387 380
390 389 376
392 332 58
394 392 53
396 39 26
398 38 27
400 399 397
402 401 394
404 403 390
406 348 58
408 406 53
410 39 28
412 38 29
414 413 411
416 415 408
418 417 404
420 304 52
422 39 30
424 38 31
426 425 423
428 427 420
430 429 418
432 318 52
434 39 32
436 38 33
438 437 435
440 439 432
442 441 430
444 334 52
446 82 39
448 83 38
450 449 447
452 451 444
454 453 442
456 350 52
458 78 39
460 79 38
462 461 459
464 463 456
466 465 454
468 185 98
470 184 98
472 469 98
474 473 93
476 475 466
478 171 98
480 170 98
482 479 98
484 480 93
486 485 476
488 129 98
490 128 98
492 489 98
494 131 98
496 130 98
498 495 98
500 499 493
502 133 98
504 132 98
506 503 98
508 507 500
510 509 93
512 511 486
514 213 98
516 212 98
518 515 98
520 516 306
522 519 307
524 523 521
526 525 470
528 527 512
530 197 98
532 196 98
534 531 98
536 535 320
538 532 321
540 539 537
542 541 470
544 543 528
546 207 98
548 206 98
550 547 98
552 551 336
554 548 337
556 555 553
558 557 470
560 559 544
562 215 98
564 214 98
566 563 98
568 567 352
570 564 353
572 571 569
574 573 470
576 575 560
578 221 98
580 220 98
582 579 98
584 583 366
586 580 367
588 587 585
590 589 470
592 591 576
594 225 98
596 224 98
598 595 98
600 599 380
602 596 381
604 603 601
606 605 470
608 607 592
610 231 98
612 230 98
614 611 98
616 615 394
618 612 395
620 619 617
622 621 470
624 623 608
626 245 98
628 244 98
630 627 98
632 631 408
634 628 409
636 635 633
638 637 470
640 639 624
642 103 98
644 102 98
646 643 98
648 647 420
650 644 421
652 651 649
654 653 470
656 655 640
658 109 98
660 108 98
662 659 98
664 663 432
666 660 433
668 667 665
670 669 470
672 671 656
674 115 98
676 114 98
678 675 98
680 679 444
682 676 445
684 683 681
686 685 470
688 687 672
690 111 98
692 110 98
694 691 98
696 695 456
698 692 457
700 699 697
702 701 470
704 703 688
706 247 98
708 246 98
710 707 98
712 708 45
714 711 44
716 715 713
718 717 470
720 719 704
722 161 98
724 160 98
726 723 98
728 169 98
730 168 98
732 729 98
734 733 727
736 177 98
738 176 98
740 737 98
742 741 734
744 183 98
746 182 98
748 745 98
750 749 742
752 751 306
754 750 307
756 755 753
758 757 92
760 759 720
762 733 724
764 762 741
766 764 749
768 767 320
770 766 321
772 771 769
774 773 92
776 775 760
778 730 727
780 778 741
782 780 749
784 783 336
786 782 337
788 787 785
790 789 92
792 791 776
794 730 724
796 794 741
798 796 749
800 799 352
802 798 353
804 803 801
806 805 92
808 807 792
810 738 734
812 810 749
814 813 366
816 812 367
818 817 815
820 819 92
822 821 808
824 762 738
826 824 749
828 827 380
830 826 381
832 831 829
834 833 92
836 835 822
838 778 738
840 838 749
842 841 394
844 840 395
846 845 843
848 847 92
850 849 836
852 794 738
854 852 749
856 855 408
858 854 409
860 859 857
862 861 92
864 863 850
866 746 742
868 867 420
870 866 421
872 871 869
874 873 92
876 875 864
878 764 746
880 879 432
882 878 433
884 883 881
886 885 92
888 887 876
890 780 746
892 891 444
894 890 445
896 895 893
898 897 92
900 899 888
902 796 746
904 903 456
906 902 457
908 907 905
910 909 92
912 911 900
914 137 98
916 136 98
918 915 98
920 919 44
922 916 45
924 923 921
926 925 92
928 927 912
930 193 98
932 192 98
934 931 98
936 211 98
938 210 98
940 937 98
942 938 935
944 942 47
946 944 13
948 947 928
950 941 935
952 950 47
954 952 12
956 955 948
958 205 98
960 204 98
962 959 98
964 960 935
966 964 64
968 966 13
970 969 956
972 963 935
974 972 64
976 974 12
978 977 970
980 201 98
982 200 98
984 981 98
986 982 935
988 986 66
990 988 13
992 991 978
994 985 935
996 994 66
998 996 12
1000 999 992
1002 189 98
1004 188 98
1006 1003 98
1008 1004 935
1010 1008 68
1012 1010 13
1014 1013 1000
1016 1007 935
1018 1016 68
1020 1018 12
1022 1021 1014
1024 181 98
1026 180 98
1028 1025 98
1030 1026 935
1032 1030 70
1034 1032 13
1036 1035 1022
1038 1029 935
1040 1038 70
1042 1040 12
1044 1043 1036
1046 175 98
1048 174 98
1050 1047 98
1052 1048 935
1054 1052 72
1056 1054 13
1058 1057 1044
1060 1051 935
1062 1060 72
1064 1062 12
1066 1065 1058
1068 165 98
1070 164 98
1072 1069 98
1074 1070 935
1076 1074 74
1078 1076 13
1080 1079 1066
1082 1073 935
1084 1082 74
1086 1084 12
1088 1087 1080
1090 159 98
1092 158 98
1094 1091 98
1096 1092 935
1098 1096 76
1100 1098 13
1102 1101 1088
1104 1095 935
1106 1104 76
1108 1106 12
1110 1109 1102
1112 143 98
1114 142 98
1116 1113 98
1118 1114 935
1120 1118 80
1122 1120 13
1124 1123 1110
1126 1117 935
1128 1126 80
1130 1128 12
1132 1131 1124
1134 135 98
1136 134 98
1138 1135 98
1140 1136 935
1142 1140 84
1144 1142 13
1146 1145 1132
1148 1139 935
1150 1148 84
1152 1150 12
1154 1153 1146
1156 191 98
1158 190 98
1160 1157 98
1162 1158 935
1164 1162 50
1166 1164 13
1168 1167 1154
1170 1161 935
1172 1170 50
1174 1172 12
1176 1175 1168
1178 203 98
1180 202 98
1182 1179 98
1184 1180 935
1186 1184 56
1188 1186 13
1190 1189 1176
1192 1183 935
1194 1192 56
1196 1194 12
1198 1197 1190
1200 519 46
1202 516 47
1204 1203 1201
1206 1205 932
1208 1207 1198
1210 532 65
1212 535 64
1214 1213 1211
1216 1215 932
1218 1217 1208
1220 548 67
1222 551 66
1224 1223 1221
1226 1225 932
1228 1227 1218
1230 564 69
1232 567 68
1234 1233 1231
1236 1235 932
1238 1237 1228
1240 580 71
1242 583 70
1244 1243 1241
1246 1245 932
1248 1247 1238
1250 596 73
1252 599 72
1254 1253 1251
1256 1255 932
1258 1257 1248
1260 612 75
1262 615 74
1264 1263 1261
1266 1265 932
1268 1267 1258
1270 628 77
1272 631 76
1274 1273 1271
1276 1275 932
1278 1277 1268
1280 644 81
1282 647 80
1284 1283 1281
1286 1285 932
1288 1287 1278
1290 660 85
1292 663 84
1294 1293 1291
1296 1295 932
1298 1297 1288
1300 676 51
1302 679 50
1304 1303 1301
1306 1305 932
1308 1307 1298
1310 692 57
1312 695 56
1314 1313 1311
1316 1315 932
1318 1317 1308
1320 708 13
1322 711 12
1324 1323 1321
1326 1325 932
1328 1327 1318
1330 163 98
1332 162 98
1334 1331 98
1336 64 17
1338 1336 1332
1340 1339 1328
1342 173 98
1344 172 98
1346 1343 98
1348 66 19
1350 1348 1344
1352 1351 1340
1354 179 98
1356 178 98
1358 1355 98
1360 68 21
1362 1360 1356
1364 1363 1352
1366 187 98
1368 186 98
1370 1367 98
1372 70 23
1374 1372 1368
1376 1375 1364
1378 199 98
1380 198 98
1382 1379 98
1384 72 25
1386 1384 1380
1388 1387 1376
1390 209 98
1392 208 98
1394 1391 98
1396 74 27
1398 1396 1392
1400 1399 1388
1402 217 98
1404 216 98
1406 1403 98
1408 76 29
1410 1408 1404
1412 1411 1400
1414 223 98
1416 222 98
1418 1415 98
1420 80 31
1422 1420 1416
1424 1423 1412
1426 227 98
1428 226 98
1430 1427 98
1432 84 33
1434 1432 1428
1436 1435 1424
1438 157 98
1440 156 98
1442 1439 98
1444 83 50
1446 1444 1440
1448 1447 1436
1450 141 98
1452 140 98
1454 1451 98
1456 79 56
1458 1456 1452
1460 1459 1448
1462 229 98
1464 1463 98
1466 243 98
1468 1467 98
1470 1469 1465
1472 101 98
1474 1473 98
1476 1475 1470
1478 107 98
1480 1479 98
1482 1481 1476
1484 113 98
1486 1485 98
1488 1487 1482
1490 117 98
1492 1491 98
1494 1493 1488
1496 119 98
1498 1497 98
1500 1499 1494
1502 123 98
1504 1503 98
1506 1505 1500
1508 125 98
1510 1509 98
1512 1511 1506
1514 127 98
1516 1515 98
1518 1517 1512
1520 249 98
1522 1521 98
1524 1523 1518
1526 105 98
1528 1527 98
1530 1529 1524
1532 1530 935
1534 1532 46
1536 1535 1460
1538 155 98
1540 154 98
1542 1539 98
1544 153 98
1546 152 98
1548 1545 98
1550 151 98
1552 150 98
1554 1551 98
1556 149 98
1558 148 98
1560 1557 98
1562 147 98
1564 146 98
1566 1563 98
1568 145 98
1570 144 98
1572 1569 98
1574 1567 1561
1576 1574 1555
1578 1576 1549
1580 1579 1548
1582 1580 1577
1584 1583 1543
1586 1585 1542
1588 1586 1582
1590 1566 1558
1592 1591 1575
1594 1575 1552
1596 1595 1577
1598 1577 1549
1600 1576 1546
1602 1601 1599
1604 1582 1543
1606 1583 1540
1608 1607 1605
1610 1571 1566
1612 1610 1592
1614 1612 1596
1616 1614 1602
1618 1616 1608
1620 1619 1589
1622 1620 1536
1624 1623 300
1626 508 44
1628 1626 93
1630 1628 55
1632 1630 48
1634 1632 37
1636 1632 36
1638 499 490
1640 1638 507
1642 1640 36
1644 496 493
1646 1644 507
1648 1646 36
1650 496 490
1652 1650 507
1654 1652 36
1656 504 500
1658 1656 36
1660 1636 1635
1662 1661 1635
1664 1637 1635
1666 1664 1642
1668 1667 1662
1670 1664 1643
1672 1670 1648
1674 1673 1668
1676 1670 1649
1678 1676 1654
1680 1679 1674
1682 1676 1655
1684 1682 1658
1686 1685 1680
1688 1659 490
1690 1688 1655
1692 1690 1649
1694 1693 1649
1696 1695 1643
1698 1696 1637
1700 1698 1635
1702 1701 1635
1704 1703 1687
1706 1686 490
1708 1707 1705
1710 1659 496
1712 1710 1655
1714 1712 1649
1716 1715 1649
1718 1717 1643
1720 1719 1643
1722 1721 1637
1724 1723 1637
1726 1725 1635
1728 1726 1687
1730 1686 496
1732 1731 1729
1734 1659 504
1736 1734 1655
1738 1737 1655
1740 1739 1649
1742 1740 1643
1744 1742 1637
1746 1744 1635
1748 1746 1687
1750 1686 504
1752 1751 1749
1754 139 98
1756 138 98
1758 1755 98
1760 1759 44
1762 1760 55
1764 1762 49
1766 1756 39
1768 1766 1765
1770 1769 1765
1772 1767 1756
1774 1772 1765
1776 1775 1765
1778 1777 1771
1780 1770 1756
1782 1781 1779
1784 1455 57
1786 1784 79
1788 1452 78
1790 1788 1787
1792 1791 1787
1794 1789 1452
1796 1794 1787
1798 1797 1787
1800 1799 1793
1802 1792 1452
1804 1803 1801
1806 233 98
1808 232 98
1810 1807 98
1812 235 98
1814 234 98
1816 1813 98
1818 237 98
1820 236 98
1822 1819 98
1824 239 98
1826 238 98
1828 1825 98
1830 240 98
1832 1815 1809
1834 1832 1821
1836 1834 1827
1838 1836 1831
1840 1838 483
1842 1815 1810
1844 1842 1821
1846 1844 1827
1848 1846 1831
1850 1848 508
1852 1816 1809
1854 1852 1821
1856 1854 1827
1858 1856 1831
1860 307 14
1862 1861 1858
1864 1816 1810
1866 1864 1821
1868 1866 1827
1870 1868 1831
1872 321 16
1874 1873 1870
1876 1832 1822
1878 1876 1827
1880 1878 1831
1882 337 18
1884 1883 1880
1886 1842 1822
1888 1886 1827
1890 1888 1831
1892 353 20
1894 1893 1890
1896 1852 1822
1898 1896 1827
1900 1898 1831
1902 367 22
1904 1903 1900
1906 1864 1822
1908 1906 1827
1910 1908 1831
1912 381 24
1914 1913 1910
1916 1834 1828
1918 1916 1831
1920 395 26
1922 1921 1918
1924 1844 1828
1926 1924 1831
1928 409 28
1930 1929 1926
1932 1854 1828
1934 1932 1831
1936 421 30
1938 1937 1934
1940 1866 1828
1942 1940 1831
1944 433 32
1946 1945 1942
1948 1876 1828
1950 1948 1831
1952 445 82
1954 1953 1950
1956 1886 1828
1958 1956 1831
1960 457 78
1962 1961 1958
1964 167 98
1966 166 98
1968 1965 98
1970 1969 1759
1972 1966 36
1974 1850 1841
1976 1975 1841
1978 1851 1841
1980 1978 1862
1982 1981 1976
1984 1978 1863
1986 1984 1874
1988 1987 1982
1990 1984 1875
1992 1990 1884
1994 1993 1988
1996 1990 1885
1998 1996 1894
2000 1999 1994
2002 1996 1895
2004 2002 1904
2006 2005 2000
2008 2002 1905
2010 2008 1914
2012 2011 2006
2014 2008 1915
2016 2014 1922
2018 2017 2012
2020 2014 1923
2022 2020 1930
2024 2023 2018
2026 2020 1931
2028 2026 1938
2030 2029 2024
2032 2026 1939
2034 2032 1946
2036 2035 2030
2038 2032 1947
2040 2038 1954
2042 2041 2036
2044 2038 1955
2046 2044 1962
2048 2047 2042
2050 2044 1963
2052 2050 1971
2054 2052 1972
2056 2055 2048
2058 1972 1573
2060 1973 1570
2062 2061 2059
2064 1970 1570
2066 2063 1971
2068 2067 2065
2070 2069 1963
2072 2070 1955
2074 2072 1947
2076 2074 1939
2078 2076 1931
2080 2078 1923
2082 2080 1915
2084 2082 1905
2086 2084 1895
2088 2086 1885
2090 2088 1875
2092 2090 1863
2094 2092 1851
2096 2094 1841
2098 1570 1567
2100 1571 1564
2102 2101 2099
2104 2103 1972
2106 1973 1564
2108 2107 2105
2110 1970 1564
2112 2109 1971
2114 2113 2111
2116 2115 1963
2118 2116 1955
2120 2118 1947
2122 2120 1939
2124 2122 1931
2126 2124 1923
2128 2126 1915
2130 2128 1905
2132 2130 1895
2134 2132 1885
2136 2134 1875
2138 2136 1863
2140 2138 1851
2142 2140 1841
2144 1570 1564
2146 2144 1561
2148 2145 1558
2150 2149 2147
2152 2151 1972
2154 1973 1558
2156 2155 2153
2158 1970 1558
2160 2157 1971
2162 2161 2159
2164 2163 1963
2166 2164 1955
2168 2166 1947
2170 2168 1939
2172 2170 1931
2174 2172 1923
2176 2174 1915
2178 2176 1905
2180 2178 1895
2182 2180 1885
2184 2182 1875
2186 2184 1863
2188 2186 1851
2190 2188 1841
2192 2144 1558
2194 2192 1555
2196 2193 1552
2198 2197 2195
2200 2199 1972
2202 1973 1552
2204 2203 2201
2206 1970 1552
2208 2205 1971
2210 2209 2207
2212 2211 1963
2214 2212 1955
2216 2214 1947
2218 2216 1939
2220 2218 1931
2222 2220 1923
2224 2222 1915
2226 2224 1905
2228 2226 1895
2230 2228 1885
2232 2230 1875
2234 2232 1863
2236 2234 1851
2238 2236 1841
2240 2192 1552
2242 2240 1549
2244 2241 1546
2246 2245 2243
2248 2247 1972
2250 1973 1546
2252 2251 2249
2254 1970 1546
2256 2253 1971
2258 2257 2255
2260 2259 1963
2262 2260 1955
2264 2262 1947
2266 2264 1939
2268 2266 1931
2270 2268 1923
2272 2270 1915
2274 2272 1905
2276 2274 1895
2278 2276 1885
2280 2278 1875
2282 2280 1863
2284 2282 1851
2286 2284 1841
2288 2240 1546
2290 2288 1543
2292 2289 1540
2294 2293 2291
2296 2295 1972
2298 1973 1540
2300 2299 2297
2302 1970 1540
2304 2301 1971
2306 2305 2303
2308 2307 1963
2310 2308 1955
2312 2310 1947
2314 2312 1939
2316 2314 1931
2318 2316 1923
2320 2318 1915
2322 2320 1905
2324 2322 1895
2326 2324 1885
2328 2326 1875
2330 2328 1863
2332 2330 1851
2334 2332 1841
2336 2096 2057
2338 2056 1570
2340 2339 2337
2342 2142 2057
2344 2056 1564
2346 2345 2343
2348 2190 2057
2350 2056 1558
2352 2351 2349
2354 2238 2057
2356 2056 1552
2358 2357 2355
2360 2286 2057
2362 2056 1546
2364 2363 2361
2366 2334 2057
2368 2056 1540
2370 2369 2367
2372 1443 51
2374 2372 83
2376 1440 82
2378 2376 2375
2380 2379 2375
2382 2377 1440
2384 2382 2375
2386 2385 2375
2388 2387 2381
2390 2380 1440
2392 2391 2389
2394 1335 65
2396 2394 17
2398 1332 16
2400 2398 2397
2402 2401 2397
2404 2399 1332
2406 2404 2397
2408 2407 2397
2410 2409 2403
2412 2402 1332
2414 2413 2411
2416 2050 1970
2418 2417 2048
2420 2418 2055
2422 1973 1966
2424 2422 1971
2426 2425 1971
2428 2427 1963
2430 2428 1955
2432 2430 1947
2434 2432 1939
2436 2434 1931
2438 2436 1923
2440 2438 1915
2442 2440 1905
2444 2442 1895
2446 2444 1885
2448 2446 1875
2450 2448 1863
2452 2450 1851
2454 2452 1841
2456 2454 2421
2458 2420 1966
2460 2459 2457
2462 93 44
2464 2462 55
2466 2464 49
2468 2466 483
2470 480 39
2472 2471 2469
2474 2467 480
2476 2475 2467
2478 480 38
2480 2477 483
2482 2478 480
2484 2483 2481
2486 2485 2473
2488 2472 480
2490 2489 2487
2492 1347 67
2494 2492 19
2496 1344 18
2498 2496 2495
2500 2499 2495
2502 2497 1344
2504 2502 2495
2506 2505 2495
2508 2507 2501
2510 2500 1344
2512 2511 2509
2514 1359 69
2516 2514 21
2518 1356 20
2520 2518 2517
2522 2521 2517
2524 2519 1356
2526 2524 2517
2528 2527 2517
2530 2529 2523
2532 2522 1356
2534 2533 2531
2536 1371 71
2538 2536 23
2540 1368 22
2542 2540 2539
2544 2543 2539
2546 2541 1368
2548 2546 2539
2550 2549 2539
2552 2551 2545
2554 2544 1368
2556 2555 2553
2558 1383 73
2560 2558 25
2562 1380 24
2564 2562 2561
2566 2565 2561
2568 2563 1380
2570 2568 2561
2572 2571 2561
2574 2573 2567
2576 2566 1380
2578 2577 2575
2580 1395 75
2582 2580 27
2584 1392 26
2586 2584 2583
2588 2587 2583
2590 2585 1392
2592 2590 2583
2594 2593 2583
2596 2595 2589
2598 2588 1392
2600 2599 2597
2602 1407 77
2604 2602 29
2606 1404 28
2608 2606 2605
2610 2609 2605
2612 2607 1404
2614 2612 2605
2616 2615 2605
2618 2617 2611
2620 2610 1404
2622 2621 2619
2624 1419 81
2626 2624 31
2628 1416 30
2630 2628 2627
2632 2631 2627
2634 2629 1416
2636 2634 2627
2638 2637 2627
2640 2639 2633
2642 2632 1416
2644 2643 2641
2646 1431 85
2648 2646 33
2650 1428 32
2652 2650 2649
2654 2653 2649
2656 2651 1428
2658 2656 2649
2660 2659 2649
2662 2661 2655
2664 2654 1428
2666 2665 2663
2668 1963 1808
2670 2668 1955
2672 2671 1955
2674 2673 1947
2676 2674 1939
2678 2677 1939
2680 2679 1931
2682 2680 1923
2684 2683 1923
2686 2685 1915
2688 2686 1905
2690 2689 1905
2692 2691 1895
2694 2692 1885
2696 2695 1885
2698 2697 1875
2700 2698 1863
2702 2701 1863
2704 2703 1851
2706 2704 1841
2708 2707 1841
2710 1963 1814
2712 2710 1955
2714 2712 1947
2716 2714 1939
2718 2717 1939
2720 2719 1931
2722 2721 1931
2724 2723 1923
2726 2724 1915
2728 2726 1905
2730 2729 1905
2732 2731 1895
2734 2733 1895
2736 2735 1885
2738 2736 1875
2740 2738 1863
2742 2741 1863
2744 2743 1851
2746 2745 1851
2748 2747 1841
2750 1963 1820
2752 2750 1955
2754 2753 1955
2756 2755 1947
2758 2757 1947
2760 2759 1939
2762 2760 1931
2764 2762 1923
2766 2764 1915
2768 2766 1905
2770 2769 1905
2772 2771 1895
2774 2773 1895
2776 2775 1885
2778 2777 1885
2780 2779 1875
2782 2781 1875
2784 2783 1863
2786 2784 1851
2788 2786 1841
2790 1963 1826
2792 2790 1955
2794 2793 1955
2796 2795 1947
2798 2797 1947
2800 2799 1939
2802 2801 1939
2804 2803 1931
2806 2805 1931
2808 2807 1923
2810 2809 1923
2812 2811 1915
2814 2813 1915
2816 2815 1905
2818 2816 1895
2820 2818 1885
2822 2820 1875
2824 2822 1863
2826 2824 1851
2828 2826 1841
2830 1963 1830
2832 2830 1955
2834 2832 1947
2836 2834 1939
2838 2836 1931
2840 2838 1923
2842 2840 1915
2844 2842 1905
2846 2844 1895
2848 2846 1885
2850 2848 1875
2852 2850 1863
2854 2852 1851
2856 2854 1841
2858 2709 2049
2860 2048 1808
2862 2861 2859
2864 2748 2049
2866 2048 1814
2868 2867 2865
2870 2788 2049
2872 2048 1820
2874 2873 2871
2876 2828 2049
2878 2048 1826
2880 2879 2877
2882 2856 2049
2884 2048 1830
2886 2885 2883
i0 i_hlock5
i1 i_hlock6
i2 i_hlock7
i3 i_hlock8
i4 i_hlock9
i5 controllable_locked
i6 i_hbusreq0
i7 i_hbusreq1
i8 i_hbusreq2
i9 i_hbusreq3
i10 i_hbusreq4
i11 i_hbusreq5
i12 i_hbusreq6
i13 i_hbusreq7
i14 i_hbusreq8
i15 i_hbusreq9
i16 controllable_ndecide
i17 i_hready
i18 controllable_busreq
i19 i_hlock11
i20 i_hlock10
i21 controllable_hmastlock
i22 controllable_nhgrant0
i23 i_hburst1
i24 controllable_hgrant10
i25 controllable_hmaster3
i26 i_hburst0
i27 controllable_hgrant11
i28 controllable_hmaster2
i29 controllable_hmaster1
i30 controllable_hmaster0
i31 controllable_hgrant1
i32 controllable_hgrant2
i33 controllable_hgrant3
i34 controllable_hgrant4
i35 controllable_hgrant5
i36 controllable_hgrant6
i37 controllable_hgrant7
i38 i_hbusreq11
i39 controllable_hgrant8
i40 i_hbusreq10
i41 controllable_hgrant9
i42 i_hlock0
i43 i_hlock1
i44 i_hlock2
i45 controllable_nstart
i46 i_hlock3
i47 i_hlock4
l0 n99
l1 reg_i_hbusreq2_out
l2 reg_controllable_hgrant8_out
l3 reg_i_hbusreq11_out
l4 reg_i_hbusreq3_out
l5 reg_controllable_hgrant9_out
l6 reg_controllable_hgrant11_out
l7 reg_i_hbusreq4_out
l8 reg_controllable_hgrant10_out
l9 reg_i_hbusreq5_out
l10 reg_i_hbusreq6_out
l11 reg_controllable_nstart_out
l12 reg_i_hbusreq7_out
l13 reg_i_hbusreq8_out
l14 reg_i_hbusreq9_out
l15 reg_stateG3_0_out
l16 reg_stateG3_1_out
l17 reg_stateG3_2_out
l18 reg_i_hlock9_out
l19 reg_controllable_hmastlock_out
l20 reg_stateA1_out
l21 reg_stateG10_11_out
l22 reg_i_hlock8_out
l23 fair_cnt<0>_out
l24 fair_cnt<1>_out
l25 fair_cnt<2>_out
l26 fair_cnt<3>_out
l27 fair_cnt<4>_out
l28 fair_cnt<5>_out
l29 reg_stateG10_10_out
l30 reg_i_hlock7_out
l31 reg_controllable_hmaster0_out
l32 reg_stateG10_1_out
l33 reg_i_hlock6_out
l34 next_env_fair_out
l35 reg_controllable_hmaster1_out
l36 reg_stateG2_out
l37 reg_stateG10_2_out
l38 reg_i_hlock5_out
l39 reg_controllable_hmaster2_out
l40 reg_stateG10_3_out
l41 reg_i_hlock4_out
l42 reg_controllable_hmaster3_out
l43 reg_i_hready_out
l44 reg_stateG10_4_out
l45 reg_i_hlock3_out
l46 reg_i_hlock10_out
l47 reg_controllable_ndecide_out
l48 reg_controllable_busreq_out
l49 reg_controllable_hgrant1_out
l50 reg_stateG10_5_out
l51 reg_i_hlock2_out
l52 reg_i_hlock11_out
l53 reg_i_hlock1_out
l54 reg_controllable_hgrant2_out
l55 reg_stateG10_6_out
l56 reg_i_hlock0_out
l57 reg_controllable_nhgrant0_out
l58 reg_controllable_hgrant3_out
l59 reg_stateG10_7_out
l60 env_safe_err_happened_out
l61 reg_controllable_hgrant4_out
l62 reg_stateG10_8_out
l63 reg_controllable_hgrant5_out
l64 reg_stateG10_9_out
l65 reg_i_hbusreq0_out
l66 reg_controllable_hgrant6_out
l67 next_sys_fair<0>_out
l68 next_sys_fair<1>_out
l69 next_sys_fair<2>_out
l70 next_sys_fair<3>_out
l71 next_sys_fair<4>_out
l72 reg_i_hbusreq1_out
l73 reg_controllable_hgrant7_out
l74 reg_controllable_locked_out
l75 reg_i_hbusreq10_out
o0 o_err
c
amba_12_new_50
This file was written by ABC on Tue May  5 17:02:01 2015
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv amba12c50.v   ---gives--> amba12c50.mv
> abc -c "read_blif_mv amba12c50.mv; write_aiger -s amba12c50n.aig"   ---gives--> amba12c50n.aig
> aigtoaig amba12c50n.aig amba12c50n.aag   ---gives--> amba12c50n.aag (this file)
Content of amba12c50.v:
module amba_12_new_50(
        o_err,
        i_clk,
        i_hready,
        i_hbusreq0,
        i_hlock0,
        i_hbusreq1,
        i_hlock1,
        i_hbusreq2,
        i_hlock2,
        i_hbusreq3,
        i_hlock3,
        i_hbusreq4,
        i_hlock4,
        i_hbusreq5,
        i_hlock5,
        i_hbusreq6,
        i_hlock6,
        i_hbusreq7,
        i_hlock7,
        i_hbusreq8,
        i_hlock8,
        i_hbusreq9,
        i_hlock9,
        i_hbusreq10,
        i_hlock10,
        i_hbusreq11,
        i_hlock11,
        i_hburst0,
        i_hburst1,
        controllable_hmaster0,
        controllable_hmaster1,
        controllable_hmaster2,
        controllable_hmaster3,
        controllable_hmastlock,
        controllable_nstart,
        controllable_ndecide,
        controllable_locked,
        controllable_nhgrant0,
        controllable_hgrant1,
        controllable_hgrant2,
        controllable_hgrant3,
        controllable_hgrant4,
        controllable_hgrant5,
        controllable_hgrant6,
        controllable_hgrant7,
        controllable_hgrant8,
        controllable_hgrant9,
        controllable_hgrant10,
        controllable_hgrant11,
        controllable_busreq);

input i_clk;
input i_hready;
input i_hbusreq0;
input i_hlock0;
input i_hbusreq1;
input i_hlock1;
input i_hbusreq2;
input i_hlock2;
input i_hbusreq3;
input i_hlock3;
input i_hbusreq4;
input i_hlock4;
input i_hbusreq5;
input i_hlock5;
input i_hbusreq6;
input i_hlock6;
input i_hbusreq7;
input i_hlock7;
input i_hbusreq8;
input i_hlock8;
input i_hbusreq9;
input i_hlock9;
input i_hbusreq10;
input i_hlock10;
input i_hbusreq11;
input i_hlock11;
input i_hburst0;
input i_hburst1;
input controllable_hmaster0;
input controllable_hmaster1;
input controllable_hmaster2;
input controllable_hmaster3;
input controllable_hmastlock;
input controllable_nstart;
input controllable_ndecide;
input controllable_locked;
input controllable_nhgrant0;
input controllable_hgrant1;
input controllable_hgrant2;
input controllable_hgrant3;
input controllable_hgrant4;
input controllable_hgrant5;
input controllable_hgrant6;
input controllable_hgrant7;
input controllable_hgrant8;
input controllable_hgrant9;
input controllable_hgrant10;
input controllable_hgrant11;
input controllable_busreq;
output o_err;

reg reg_i_hready;
reg reg_i_hbusreq0;
reg reg_i_hlock0;
reg reg_i_hbusreq1;
reg reg_i_hlock1;
reg reg_i_hbusreq2;
reg reg_i_hlock2;
reg reg_i_hbusreq3;
reg reg_i_hlock3;
reg reg_i_hbusreq4;
reg reg_i_hlock4;
reg reg_i_hbusreq5;
reg reg_i_hlock5;
reg reg_i_hbusreq6;
reg reg_i_hlock6;
reg reg_i_hbusreq7;
reg reg_i_hlock7;
reg reg_i_hbusreq8;
reg reg_i_hlock8;
reg reg_i_hbusreq9;
reg reg_i_hlock9;
reg reg_i_hbusreq10;
reg reg_i_hlock10;
reg reg_i_hbusreq11;
reg reg_i_hlock11;
reg reg_controllable_hmaster0;
reg reg_controllable_hmaster1;
reg reg_controllable_hmaster2;
reg reg_controllable_hmaster3;
reg reg_controllable_hmastlock;
reg reg_controllable_nstart;
reg reg_controllable_ndecide;
reg reg_controllable_locked;
reg reg_controllable_nhgrant0;
reg reg_controllable_hgrant1;
reg reg_controllable_hgrant2;
reg reg_controllable_hgrant3;
reg reg_controllable_hgrant4;
reg reg_controllable_hgrant5;
reg reg_controllable_hgrant6;
reg reg_controllable_hgrant7;
reg reg_controllable_hgrant8;
reg reg_controllable_hgrant9;
reg reg_controllable_hgrant10;
reg reg_controllable_hgrant11;
reg reg_controllable_busreq;
reg reg_stateA1;
reg reg_stateG2;
reg reg_stateG3_0;
reg reg_stateG3_1;
reg reg_stateG3_2;
reg reg_stateG10_1;
reg reg_stateG10_2;
reg reg_stateG10_3;
reg reg_stateG10_4;
reg reg_stateG10_5;
reg reg_stateG10_6;
reg reg_stateG10_7;
reg reg_stateG10_8;
reg reg_stateG10_9;
reg reg_stateG10_10;
reg reg_stateG10_11;
reg env_safe_err_happened;
reg next_env_fair;
reg [5:0] fair_cnt;
reg [4:0] next_sys_fair;

wire env_safe_err0;
wire env_safe_err1;
wire env_safe_err2;
wire env_safe_err3;
wire env_safe_err4;
wire env_safe_err5;
wire env_safe_err6;
wire env_safe_err7;
wire env_safe_err8;
wire env_safe_err9;
wire env_safe_err10;
wire env_safe_err11;
wire env_safe_err;

wire sys_safe_err0;
wire sys_safe_err1;
wire sys_safe_err2;
wire sys_safe_err3;
wire sys_safe_err4;
wire sys_safe_err5;
wire sys_safe_err6;
wire sys_safe_err7;
wire sys_safe_err8;
wire sys_safe_err9;
wire sys_safe_err10;
wire sys_safe_err11;
wire sys_safe_err12;
wire sys_safe_err13;
wire sys_safe_err14;
wire sys_safe_err15;
wire sys_safe_err16;
wire sys_safe_err17;
wire sys_safe_err18;
wire sys_safe_err19;
wire sys_safe_err20;
wire sys_safe_err21;
wire sys_safe_err22;
wire sys_safe_err23;
wire sys_safe_err24;
wire sys_safe_err25;
wire sys_safe_err26;
wire sys_safe_err27;
wire sys_safe_err28;
wire sys_safe_err29;
wire sys_safe_err30;
wire sys_safe_err31;
wire sys_safe_err32;
wire sys_safe_err33;
wire sys_safe_err34;
wire sys_safe_err35;
wire sys_safe_err36;
wire sys_safe_err37;
wire sys_safe_err38;
wire sys_safe_err39;
wire sys_safe_err40;
wire sys_safe_err41;
wire sys_safe_err42;
wire sys_safe_err43;
wire sys_safe_err44;
wire sys_safe_err45;
wire sys_safe_err46;
wire sys_safe_err47;
wire sys_safe_err48;
wire sys_safe_err49;
wire sys_safe_err50;
wire sys_safe_err51;
wire sys_safe_err52;
wire sys_safe_err53;
wire sys_safe_err54;
wire sys_safe_err55;
wire sys_safe_err56;
wire sys_safe_err57;
wire sys_safe_err58;
wire sys_safe_err59;
wire sys_safe_err60;
wire sys_safe_err61;
wire sys_safe_err62;
wire sys_safe_err63;
wire sys_safe_err64;
wire sys_safe_err65;
wire sys_safe_err66;
wire sys_safe_err67;
wire sys_safe_err68;
wire sys_safe_err69;
wire sys_safe_err70;
wire sys_safe_err71;
wire sys_safe_err72;
wire sys_safe_err73;
wire sys_safe_err74;
wire sys_safe_err75;
wire sys_safe_err76;
wire sys_safe_err77;
wire sys_safe_err78;
wire sys_safe_err79;
wire sys_safe_err80;
wire sys_safe_err81;
wire sys_safe_err82;
wire sys_safe_err83;
wire sys_safe_err84;
wire sys_safe_err85;
wire sys_safe_err86;
wire sys_safe_err87;
wire sys_safe_err88;
wire sys_safe_err89;
wire sys_safe_err;

wire env_fair0;
wire env_fair1;

wire sys_fair0;
wire sys_fair1;
wire sys_fair2;
wire sys_fair3;
wire sys_fair4;
wire sys_fair5;
wire sys_fair6;
wire sys_fair7;
wire sys_fair8;
wire sys_fair9;
wire sys_fair10;
wire sys_fair11;
wire sys_fair12;
wire sys_fair13;
wire fair_err;
wire o_err;

// =============================================================
//                        ENV_TRANSITION:
// =============================================================
// Assumption 3:
// G( hlock0=1 -> hbusreq0=1 );
assign env_safe_err0 =  ~(~ i_hlock0 | i_hbusreq0);

// Assumption 3:
// G( hlock1=1 -> hbusreq1=1 );
assign env_safe_err1 =  ~(~ i_hlock1 | i_hbusreq1);

// Assumption 3:
// G( hlock2=1 -> hbusreq2=1 );
assign env_safe_err2 =  ~(~ i_hlock2 | i_hbusreq2);

// Assumption 3:
// G( hlock3=1 -> hbusreq3=1 );
assign env_safe_err3 =  ~(~ i_hlock3 | i_hbusreq3);

// Assumption 3:
// G( hlock4=1 -> hbusreq4=1 );
assign env_safe_err4 =  ~(~ i_hlock4 | i_hbusreq4);

// Assumption 3:
// G( hlock5=1 -> hbusreq5=1 );
assign env_safe_err5 =  ~(~ i_hlock5 | i_hbusreq5);

// Assumption 3:
// G( hlock6=1 -> hbusreq6=1 );
assign env_safe_err6 =  ~(~ i_hlock6 | i_hbusreq6);

// Assumption 3:
// G( hlock7=1 -> hbusreq7=1 );
assign env_safe_err7 =  ~(~ i_hlock7 | i_hbusreq7);

// Assumption 3:
// G( hlock8=1 -> hbusreq8=1 );
assign env_safe_err8 =  ~(~ i_hlock8 | i_hbusreq8);

// Assumption 3:
// G( hlock9=1 -> hbusreq9=1 );
assign env_safe_err9 =  ~(~ i_hlock9 | i_hbusreq9);

// Assumption 3:
// G( hlock10=1 -> hbusreq10=1 );
assign env_safe_err10 =  ~(~ i_hlock10 | i_hbusreq10);

// Assumption 3:
// G( hlock11=1 -> hbusreq11=1 );
assign env_safe_err11 =  ~(~ i_hlock11 | i_hbusreq11);

// collecting together the safety error bits:
assign env_safe_err = env_safe_err0 |
                      env_safe_err1 |
                      env_safe_err2 |
                      env_safe_err3 |
                      env_safe_err4 |
                      env_safe_err5 |
                      env_safe_err6 |
                      env_safe_err7 |
                      env_safe_err8 |
                      env_safe_err9 |
                      env_safe_err10 |
                      env_safe_err11;

// =============================================================
//                        SYS_TRANSITION:
// =============================================================
// G((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0) -> (hbusreq0=0 <-> busreq=0));
assign sys_safe_err0 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq0 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0) -> (hbusreq1=0 <-> busreq=0));
assign sys_safe_err1 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq1 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0) -> (hbusreq2=0 <-> busreq=0));
assign sys_safe_err2 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq2 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0) -> (hbusreq3=0 <-> busreq=0));
assign sys_safe_err3 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )|(~i_hbusreq3 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0) -> (hbusreq4=0 <-> busreq=0));
assign sys_safe_err4 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq4 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0) -> (hbusreq5=0 <-> busreq=0));
assign sys_safe_err5 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq5 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0) -> (hbusreq6=0 <-> busreq=0));
assign sys_safe_err6 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq6 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0) -> (hbusreq7=0 <-> busreq=0));
assign sys_safe_err7 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )|(~i_hbusreq7 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1) -> (hbusreq8=0 <-> busreq=0));
assign sys_safe_err8 =  ~( ~( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq8 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1) -> (hbusreq9=0 <-> busreq=0));
assign sys_safe_err9 =  ~( ~( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq9 ^~ (~controllable_busreq)));

// G((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1) -> (hbusreq10=0 <-> busreq=0));
assign sys_safe_err10 =  ~( ~( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq10 ^~ (~controllable_busreq)));

// G((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1) -> (hbusreq11=0 <-> busreq=0));
assign sys_safe_err11 =  ~( ~( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )|(~i_hbusreq11 ^~ (~controllable_busreq)));

// Guarantee 1:
// G((hready=0) -> X(start=0));
assign sys_safe_err12 =  ~( reg_i_hready | controllable_nstart );

// G(((stateG2=1) * (start=1)) -> FALSE;
assign sys_safe_err13 =  ~( ~(reg_stateG2 & ~controllable_nstart) | 0 );

// G(((stateG3_0=1) * (stateG3_1=0) * (stateG3_2=0) * ((start=1))) -> FALSE);
// G(((stateG3_0=0) * (stateG3_1=1) * (stateG3_2=0) * ((start=1))) -> FALSE);
// G(((stateG3_0=1) * (stateG3_1=1) * (stateG3_2=0) * ((start=1))) -> FALSE);
// G(((stateG3_0=0) * (stateG3_1=0) * (stateG3_2=1) * ((start=1))) -> FALSE);
// all these rules can be summarized as: only in state 000, start=1 is allowed:
assign sys_safe_err14 =  (reg_stateG3_0 | reg_stateG3_1 | reg_stateG3_2) & ~controllable_nstart;

// G( (hready=1) -> (   (hgrant0=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err15 =  ~( ~(reg_i_hready) | ( ~reg_controllable_nhgrant0 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant1=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err16 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant1 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant2=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err17 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant2 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant3=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0))  ) );
assign sys_safe_err18 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant3 ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant4=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err19 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant4 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant5=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err20 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant5 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant6=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err21 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant6 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant7=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0))  ) );
assign sys_safe_err22 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant7 ^~ ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) ) );

// G( (hready=1) -> (   (hgrant8=1) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err23 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant8 ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant9=1) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err24 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant9 ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant10=1) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err25 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant10 ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// G( (hready=1) -> (   (hgrant11=1) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1))  ) );
assign sys_safe_err26 =  ~( ~(reg_i_hready) | ( reg_controllable_hgrant11 ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) ) );

// HMASTLOCK:
// G(  (hready=1) -> (locked=0 <-> X(hmastlock=0) ) );
assign sys_safe_err27 =  ~( ~(reg_i_hready) | (~reg_controllable_locked ^~ ~controllable_hmastlock) );

// Master 0:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err28 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 1:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err29 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 2:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err30 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 3:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=0)) ) );
assign sys_safe_err31 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) )) );

// Master 4:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err32 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 5:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err33 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 6:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err34 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 7:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=1) * X(hmaster3=0)) ) );
assign sys_safe_err35 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & reg_controllable_hmaster2 & ~(reg_controllable_hmaster3) ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) )) );

// Master 8:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=0) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err36 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 9:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=1) * X(hmaster1=0) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err37 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & ~(reg_controllable_hmaster1) & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 10:
// G( X(start=0) -> ( ((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=0) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err38 =  ~( ~(controllable_nstart) | ( ( ~(reg_controllable_hmaster0) & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Master 11:
// G( X(start=0) -> ( ((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1)) <-> (X(hmaster0=1) * X(hmaster1=1) * X(hmaster2=0) * X(hmaster3=1)) ) );
assign sys_safe_err39 =  ~( ~(controllable_nstart) | ( ( reg_controllable_hmaster0 & reg_controllable_hmaster1 & ~(reg_controllable_hmaster2) & reg_controllable_hmaster3 ) ^~ ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 )) );

// Guarantee 6.2:
// G( ((X(start=0))) -> ( (hmastlock=1) <-> X(hmastlock=1)) );
assign sys_safe_err40 =  ~( ~(controllable_nstart) | ( reg_controllable_hmastlock ^~ controllable_hmastlock) );

// G( (decide=1  *  hlock0=1  *  X(hgrant0=1) )->X(locked=1));
assign sys_safe_err41 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock0 & ~controllable_nhgrant0) | (controllable_locked) );

// G((decide=1  *  hlock0=0  *  X(hgrant0=1))->X(locked=0));
assign sys_safe_err42 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock0 & ~controllable_nhgrant0) | (~controllable_locked) );

// G( (decide=1  *  hlock1=1  *  X(hgrant1=1) )->X(locked=1));
assign sys_safe_err43 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock1 & controllable_hgrant1) | (controllable_locked) );

// G((decide=1  *  hlock1=0  *  X(hgrant1=1))->X(locked=0));
assign sys_safe_err44 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock1 & controllable_hgrant1) | (~controllable_locked) );

// G( (decide=1  *  hlock2=1  *  X(hgrant2=1) )->X(locked=1));
assign sys_safe_err45 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock2 & controllable_hgrant2) | (controllable_locked) );

// G((decide=1  *  hlock2=0  *  X(hgrant2=1))->X(locked=0));
assign sys_safe_err46 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock2 & controllable_hgrant2) | (~controllable_locked) );

// G( (decide=1  *  hlock3=1  *  X(hgrant3=1) )->X(locked=1));
assign sys_safe_err47 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock3 & controllable_hgrant3) | (controllable_locked) );

// G((decide=1  *  hlock3=0  *  X(hgrant3=1))->X(locked=0));
assign sys_safe_err48 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock3 & controllable_hgrant3) | (~controllable_locked) );

// G( (decide=1  *  hlock4=1  *  X(hgrant4=1) )->X(locked=1));
assign sys_safe_err49 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock4 & controllable_hgrant4) | (controllable_locked) );

// G((decide=1  *  hlock4=0  *  X(hgrant4=1))->X(locked=0));
assign sys_safe_err50 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock4 & controllable_hgrant4) | (~controllable_locked) );

// G( (decide=1  *  hlock5=1  *  X(hgrant5=1) )->X(locked=1));
assign sys_safe_err51 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock5 & controllable_hgrant5) | (controllable_locked) );

// G((decide=1  *  hlock5=0  *  X(hgrant5=1))->X(locked=0));
assign sys_safe_err52 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock5 & controllable_hgrant5) | (~controllable_locked) );

// G( (decide=1  *  hlock6=1  *  X(hgrant6=1) )->X(locked=1));
assign sys_safe_err53 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock6 & controllable_hgrant6) | (controllable_locked) );

// G((decide=1  *  hlock6=0  *  X(hgrant6=1))->X(locked=0));
assign sys_safe_err54 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock6 & controllable_hgrant6) | (~controllable_locked) );

// G( (decide=1  *  hlock7=1  *  X(hgrant7=1) )->X(locked=1));
assign sys_safe_err55 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock7 & controllable_hgrant7) | (controllable_locked) );

// G((decide=1  *  hlock7=0  *  X(hgrant7=1))->X(locked=0));
assign sys_safe_err56 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock7 & controllable_hgrant7) | (~controllable_locked) );

// G( (decide=1  *  hlock8=1  *  X(hgrant8=1) )->X(locked=1));
assign sys_safe_err57 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock8 & controllable_hgrant8) | (controllable_locked) );

// G((decide=1  *  hlock8=0  *  X(hgrant8=1))->X(locked=0));
assign sys_safe_err58 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock8 & controllable_hgrant8) | (~controllable_locked) );

// G( (decide=1  *  hlock9=1  *  X(hgrant9=1) )->X(locked=1));
assign sys_safe_err59 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock9 & controllable_hgrant9) | (controllable_locked) );

// G((decide=1  *  hlock9=0  *  X(hgrant9=1))->X(locked=0));
assign sys_safe_err60 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock9 & controllable_hgrant9) | (~controllable_locked) );

// G( (decide=1  *  hlock10=1  *  X(hgrant10=1) )->X(locked=1));
assign sys_safe_err61 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock10 & controllable_hgrant10) | (controllable_locked) );

// G((decide=1  *  hlock10=0  *  X(hgrant10=1))->X(locked=0));
assign sys_safe_err62 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock10 & controllable_hgrant10) | (~controllable_locked) );

// G( (decide=1  *  hlock11=1  *  X(hgrant11=1) )->X(locked=1));
assign sys_safe_err63 =  ~( ~(~reg_controllable_ndecide & reg_i_hlock11 & controllable_hgrant11) | (controllable_locked) );

// G((decide=1  *  hlock11=0  *  X(hgrant11=1))->X(locked=0));
assign sys_safe_err64 =  ~( ~(~reg_controllable_ndecide & ~reg_i_hlock11 & controllable_hgrant11) | (~controllable_locked) );

// G( (decide=0) -> (  ((hgrant0=0)<->X(hgrant0=0))  ));
assign sys_safe_err65 =  ~( ~(reg_controllable_ndecide) | (reg_controllable_nhgrant0 ^~ controllable_nhgrant0) );

// G( (decide=0) -> (  ((hgrant1=0)<->X(hgrant1=0))  ));
assign sys_safe_err66 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant1 ^~ ~controllable_hgrant1) );

// G( (decide=0) -> (  ((hgrant2=0)<->X(hgrant2=0))  ));
assign sys_safe_err67 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant2 ^~ ~controllable_hgrant2) );

// G( (decide=0) -> (  ((hgrant3=0)<->X(hgrant3=0))  ));
assign sys_safe_err68 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant3 ^~ ~controllable_hgrant3) );

// G( (decide=0) -> (  ((hgrant4=0)<->X(hgrant4=0))  ));
assign sys_safe_err69 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant4 ^~ ~controllable_hgrant4) );

// G( (decide=0) -> (  ((hgrant5=0)<->X(hgrant5=0))  ));
assign sys_safe_err70 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant5 ^~ ~controllable_hgrant5) );

// G( (decide=0) -> (  ((hgrant6=0)<->X(hgrant6=0))  ));
assign sys_safe_err71 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant6 ^~ ~controllable_hgrant6) );

// G( (decide=0) -> (  ((hgrant7=0)<->X(hgrant7=0))  ));
assign sys_safe_err72 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant7 ^~ ~controllable_hgrant7) );

// G( (decide=0) -> (  ((hgrant8=0)<->X(hgrant8=0))  ));
assign sys_safe_err73 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant8 ^~ ~controllable_hgrant8) );

// G( (decide=0) -> (  ((hgrant9=0)<->X(hgrant9=0))  ));
assign sys_safe_err74 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant9 ^~ ~controllable_hgrant9) );

// G( (decide=0) -> (  ((hgrant10=0)<->X(hgrant10=0))  ));
assign sys_safe_err75 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant10 ^~ ~controllable_hgrant10) );

// G( (decide=0) -> (  ((hgrant11=0)<->X(hgrant11=0))  ));
assign sys_safe_err76 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_hgrant11 ^~ ~controllable_hgrant11) );

// G((decide=0)->(locked=0 <-> X(locked=0)));
assign sys_safe_err77 =  ~( ~(reg_controllable_ndecide) | (~reg_controllable_locked ^~ ~controllable_locked) );

// G(((stateG10_1=1) * (((hgrant1=1)) * (hbusreq1=0)))->FALSE);
assign sys_safe_err78 =  ~( ~(reg_stateG10_1 & (controllable_hgrant1 & ~i_hbusreq1)) | 0 );

// G(((stateG10_2=1) * (((hgrant2=1)) * (hbusreq2=0)))->FALSE);
assign sys_safe_err79 =  ~( ~(reg_stateG10_2 & (controllable_hgrant2 & ~i_hbusreq2)) | 0 );

// G(((stateG10_3=1) * (((hgrant3=1)) * (hbusreq3=0)))->FALSE);
assign sys_safe_err80 =  ~( ~(reg_stateG10_3 & (controllable_hgrant3 & ~i_hbusreq3)) | 0 );

// G(((stateG10_4=1) * (((hgrant4=1)) * (hbusreq4=0)))->FALSE);
assign sys_safe_err81 =  ~( ~(reg_stateG10_4 & (controllable_hgrant4 & ~i_hbusreq4)) | 0 );

// G(((stateG10_5=1) * (((hgrant5=1)) * (hbusreq5=0)))->FALSE);
assign sys_safe_err82 =  ~( ~(reg_stateG10_5 & (controllable_hgrant5 & ~i_hbusreq5)) | 0 );

// G(((stateG10_6=1) * (((hgrant6=1)) * (hbusreq6=0)))->FALSE);
assign sys_safe_err83 =  ~( ~(reg_stateG10_6 & (controllable_hgrant6 & ~i_hbusreq6)) | 0 );

// G(((stateG10_7=1) * (((hgrant7=1)) * (hbusreq7=0)))->FALSE);
assign sys_safe_err84 =  ~( ~(reg_stateG10_7 & (controllable_hgrant7 & ~i_hbusreq7)) | 0 );

// G(((stateG10_8=1) * (((hgrant8=1)) * (hbusreq8=0)))->FALSE);
assign sys_safe_err85 =  ~( ~(reg_stateG10_8 & (controllable_hgrant8 & ~i_hbusreq8)) | 0 );

// G(((stateG10_9=1) * (((hgrant9=1)) * (hbusreq9=0)))->FALSE);
assign sys_safe_err86 =  ~( ~(reg_stateG10_9 & (controllable_hgrant9 & ~i_hbusreq9)) | 0 );

// G(((stateG10_10=1) * (((hgrant10=1)) * (hbusreq10=0)))->FALSE);
assign sys_safe_err87 =  ~( ~(reg_stateG10_10 & (controllable_hgrant10 & ~i_hbusreq10)) | 0 );

// G(((stateG10_11=1) * (((hgrant11=1)) * (hbusreq11=0)))->FALSE);
assign sys_safe_err88 =  ~( ~(reg_stateG10_11 & (controllable_hgrant11 & ~i_hbusreq11)) | 0 );

// default master
// G((decide=1  *  hbusreq0=0  *  hbusreq1=0  *  hbusreq2=0  *  hbusreq3=0  *  hbusreq4=0  *  hbusreq5=0  *  hbusreq6=0  *  hbusreq7=0  *  hbusreq8=0  *  hbusreq9=0  *  hbusreq10=0  *  hbusreq11=0) -> X(hgrant0=1));
assign sys_safe_err89 =  ~( ~(~reg_controllable_ndecide & (~reg_i_hbusreq0 & ~reg_i_hbusreq1 & ~reg_i_hbusreq2 & ~reg_i_hbusreq3 & ~reg_i_hbusreq4 & ~reg_i_hbusreq5 & ~reg_i_hbusreq6 & ~reg_i_hbusreq7 & ~reg_i_hbusreq8 & ~reg_i_hbusreq9 & ~reg_i_hbusreq10 & ~reg_i_hbusreq11)) | (~controllable_nhgrant0) );

// collecting together the safety error bits:
assign sys_safe_err = sys_safe_err0 |
                      sys_safe_err1 |
                      sys_safe_err2 |
                      sys_safe_err3 |
                      sys_safe_err4 |
                      sys_safe_err5 |
                      sys_safe_err6 |
                      sys_safe_err7 |
                      sys_safe_err8 |
                      sys_safe_err9 |
                      sys_safe_err10 |
                      sys_safe_err11 |
                      sys_safe_err12 |
                      sys_safe_err13 |
                      sys_safe_err14 |
                      sys_safe_err15 |
                      sys_safe_err16 |
                      sys_safe_err17 |
                      sys_safe_err18 |
                      sys_safe_err19 |
                      sys_safe_err20 |
                      sys_safe_err21 |
                      sys_safe_err22 |
                      sys_safe_err23 |
                      sys_safe_err24 |
                      sys_safe_err25 |
                      sys_safe_err26 |
                      sys_safe_err27 |
                      sys_safe_err28 |
                      sys_safe_err29 |
                      sys_safe_err30 |
                      sys_safe_err31 |
                      sys_safe_err32 |
                      sys_safe_err33 |
                      sys_safe_err34 |
                      sys_safe_err35 |
                      sys_safe_err36 |
                      sys_safe_err37 |
                      sys_safe_err38 |
                      sys_safe_err39 |
                      sys_safe_err40 |
                      sys_safe_err41 |
                      sys_safe_err42 |
                      sys_safe_err43 |
                      sys_safe_err44 |
                      sys_safe_err45 |
                      sys_safe_err46 |
                      sys_safe_err47 |
                      sys_safe_err48 |
                      sys_safe_err49 |
                      sys_safe_err50 |
                      sys_safe_err51 |
                      sys_safe_err52 |
                      sys_safe_err53 |
                      sys_safe_err54 |
                      sys_safe_err55 |
                      sys_safe_err56 |
                      sys_safe_err57 |
                      sys_safe_err58 |
                      sys_safe_err59 |
                      sys_safe_err60 |
                      sys_safe_err61 |
                      sys_safe_err62 |
                      sys_safe_err63 |
                      sys_safe_err64 |
                      sys_safe_err65 |
                      sys_safe_err66 |
                      sys_safe_err67 |
                      sys_safe_err68 |
                      sys_safe_err69 |
                      sys_safe_err70 |
                      sys_safe_err71 |
                      sys_safe_err72 |
                      sys_safe_err73 |
                      sys_safe_err74 |
                      sys_safe_err75 |
                      sys_safe_err76 |
                      sys_safe_err77 |
                      sys_safe_err78 |
                      sys_safe_err79 |
                      sys_safe_err80 |
                      sys_safe_err81 |
                      sys_safe_err82 |
                      sys_safe_err83 |
                      sys_safe_err84 |
                      sys_safe_err85 |
                      sys_safe_err86 |
                      sys_safe_err87 |
                      sys_safe_err88 |
                      sys_safe_err89;

// =============================================================
//                          ENV_FAIRNESS:
// =============================================================
// Assumption 1: 
// G(F(stateA1=0));
assign env_fair0 =  ~reg_stateA1;

// Assumption 2:
// G(F(hready=1));
assign env_fair1 =  i_hready;


// =============================================================
//                          SYS_FAIRNESS:
// =============================================================
// Guarantee 2:
// G(F(stateG2=0));
assign sys_fair0 = ~reg_stateG2;

// Guarantee 3:
// G(F((stateG3_0=0)  *  (stateG3_1=0)  *  (stateG3_2=0)));
assign sys_fair1 =  (~reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2);

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0))  |  hbusreq0=0));
assign sys_fair2 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq0;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=0))  |  hbusreq1=0));
assign sys_fair3 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq1;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0))  |  hbusreq2=0));
assign sys_fair4 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq2;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=0))  |  hbusreq3=0));
assign sys_fair5 =  ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & ~(controllable_hmaster3) ) | ~i_hbusreq3;

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0))  |  hbusreq4=0));
assign sys_fair6 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq4;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=1) * (hmaster3=0))  |  hbusreq5=0));
assign sys_fair7 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq5;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0))  |  hbusreq6=0));
assign sys_fair8 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq6;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=1) * (hmaster3=0))  |  hbusreq7=0));
assign sys_fair9 =  ( controllable_hmaster0 & controllable_hmaster1 & controllable_hmaster2 & ~(controllable_hmaster3) ) | ~i_hbusreq7;

// G(F(((hmaster0=0) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1))  |  hbusreq8=0));
assign sys_fair10 =  ( ~(controllable_hmaster0) & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq8;

// G(F(((hmaster0=1) * (hmaster1=0) * (hmaster2=0) * (hmaster3=1))  |  hbusreq9=0));
assign sys_fair11 =  ( controllable_hmaster0 & ~(controllable_hmaster1) & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq9;

// G(F(((hmaster0=0) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1))  |  hbusreq10=0));
assign sys_fair12 =  ( ~(controllable_hmaster0) & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq10;

// G(F(((hmaster0=1) * (hmaster1=1) * (hmaster2=0) * (hmaster3=1))  |  hbusreq11=0));
assign sys_fair13 =  ( controllable_hmaster0 & controllable_hmaster1 & ~(controllable_hmaster2) & controllable_hmaster3 ) | ~i_hbusreq11;

assign fair_err = (fair_cnt >= 6'b110010);

// computing the error output bit:
assign o_err = ~env_safe_err & ~env_safe_err_happened & (sys_safe_err | fair_err);

initial
 begin
  reg_i_hready = 0;
  reg_i_hbusreq0 = 0;
  reg_i_hlock0 = 0;
  reg_i_hbusreq1 = 0;
  reg_i_hlock1 = 0;
  reg_i_hbusreq2 = 0;
  reg_i_hlock2 = 0;
  reg_i_hbusreq3 = 0;
  reg_i_hlock3 = 0;
  reg_i_hbusreq4 = 0;
  reg_i_hlock4 = 0;
  reg_i_hbusreq5 = 0;
  reg_i_hlock5 = 0;
  reg_i_hbusreq6 = 0;
  reg_i_hlock6 = 0;
  reg_i_hbusreq7 = 0;
  reg_i_hlock7 = 0;
  reg_i_hbusreq8 = 0;
  reg_i_hlock8 = 0;
  reg_i_hbusreq9 = 0;
  reg_i_hlock9 = 0;
  reg_i_hbusreq10 = 0;
  reg_i_hlock10 = 0;
  reg_i_hbusreq11 = 0;
  reg_i_hlock11 = 0;
  reg_controllable_hmaster0 = 0;
  reg_controllable_hmaster1 = 0;
  reg_controllable_hmaster2 = 0;
  reg_controllable_hmaster3 = 0;
  reg_controllable_hmastlock = 0;
  reg_controllable_nstart = 0;
  reg_controllable_ndecide = 0;
  reg_controllable_locked = 0;
  reg_controllable_nhgrant0 = 0;
  reg_controllable_hgrant1 = 0;
  reg_controllable_hgrant2 = 0;
  reg_controllable_hgrant3 = 0;
  reg_controllable_hgrant4 = 0;
  reg_controllable_hgrant5 = 0;
  reg_controllable_hgrant6 = 0;
  reg_controllable_hgrant7 = 0;
  reg_controllable_hgrant8 = 0;
  reg_controllable_hgrant9 = 0;
  reg_controllable_hgrant10 = 0;
  reg_controllable_hgrant11 = 0;
  reg_controllable_busreq = 0;
  reg_stateA1 = 0;
  reg_stateG2 = 0;
  reg_stateG3_0 = 0;
  reg_stateG3_1 = 0;
  reg_stateG3_2 = 0;
  reg_stateG10_1 = 0;
  reg_stateG10_2 = 0;
  reg_stateG10_3 = 0;
  reg_stateG10_4 = 0;
  reg_stateG10_5 = 0;
  reg_stateG10_6 = 0;
  reg_stateG10_7 = 0;
  reg_stateG10_8 = 0;
  reg_stateG10_9 = 0;
  reg_stateG10_10 = 0;
  reg_stateG10_11 = 0;
  env_safe_err_happened = 0;
  next_env_fair = 0;
  fair_cnt = 0;
  next_sys_fair = 0;
 end


always @(posedge i_clk)
 begin
   // We remember if an environment error occurred:
   env_safe_err_happened = env_safe_err_happened | env_safe_err;

   // Updating the fairness counters: 
   if((next_sys_fair == 0) & sys_fair0)
    begin
      next_sys_fair = 1;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 1) & sys_fair1)
    begin
      next_sys_fair = 2;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 2) & sys_fair2)
    begin
      next_sys_fair = 3;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 3) & sys_fair3)
    begin
      next_sys_fair = 4;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 4) & sys_fair4)
    begin
      next_sys_fair = 5;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 5) & sys_fair5)
    begin
      next_sys_fair = 6;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 6) & sys_fair6)
    begin
      next_sys_fair = 7;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 7) & sys_fair7)
    begin
      next_sys_fair = 8;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 8) & sys_fair8)
    begin
      next_sys_fair = 9;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 9) & sys_fair9)
    begin
      next_sys_fair = 10;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 10) & sys_fair10)
    begin
      next_sys_fair = 11;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 11) & sys_fair11)
    begin
      next_sys_fair = 12;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 12) & sys_fair12)
    begin
      next_sys_fair = 13;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if((next_sys_fair == 13) & sys_fair13)
    begin
      next_sys_fair = 0;
      next_env_fair = 0;
      fair_cnt = 0;
    end
   else if(~next_env_fair & env_fair0)
    begin
      next_env_fair = 1;
    end
   else if(next_env_fair & env_fair1)
    begin
      next_env_fair = 0;
      fair_cnt = fair_cnt + 1;
    end

   // Updating the automata: 
   // Automaton A1: 
   if(~reg_stateA1 & controllable_hmastlock & ~i_hburst0 & ~i_hburst1)
    begin
      reg_stateA1 = 1'b1;
    end
   else if(reg_stateA1 & ~controllable_busreq)
    begin
      reg_stateA1 = 1'b0;
    end

   // Automaton G2: 
   if(~reg_stateG2)
    begin
      if(controllable_hmastlock & ~controllable_nstart & ~i_hburst0 & ~i_hburst1)
       begin
         reg_stateG2 = 1'b1;
       end
    end
   else // if(reg_stateG2)
    begin
      if(~controllable_busreq)
       begin
         reg_stateG2 = 1'b0;
       end
    end

   // Automaton G3: 
   if(~reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2 & controllable_hmastlock & ~controllable_nstart &  ~i_hburst0 & i_hburst1 & ~i_hready)
    begin
      reg_stateG3_0 = 1'b1;
      reg_stateG3_1 = 1'b0;
      reg_stateG3_2 = 1'b0;
    end
   else if(~reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2 & controllable_hmastlock & ~controllable_nstart &  ~i_hburst0 & i_hburst1 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b1;
      reg_stateG3_2 = 1'b0;
    end
   else if(reg_stateG3_0 & ~reg_stateG3_1 & ~reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b1;
      reg_stateG3_2 = 1'b0;
    end
   else if(~reg_stateG3_0 & reg_stateG3_1 & ~reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b1;
      reg_stateG3_1 = 1'b1;
      reg_stateG3_2 = 1'b0;
    end
   else if(reg_stateG3_0 & reg_stateG3_1 & ~reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b0;
      reg_stateG3_2 = 1'b1;
    end
   else if(~reg_stateG3_0 & ~reg_stateG3_1 & reg_stateG3_2 & i_hready)
    begin
      reg_stateG3_0 = 1'b0;
      reg_stateG3_1 = 1'b0;
      reg_stateG3_2 = 1'b0;
    end

   // Automaton G10_1: 
   if(~reg_stateG10_1 & ~controllable_hgrant1 & ~i_hbusreq1)
    begin
      reg_stateG10_1 = 1'b1;
    end
   else if(reg_stateG10_1 & i_hbusreq1)
    begin
      reg_stateG10_1 = 1'b0;
    end

   // Automaton G10_2: 
   if(~reg_stateG10_2 & ~controllable_hgrant2 & ~i_hbusreq2)
    begin
      reg_stateG10_2 = 1'b1;
    end
   else if(reg_stateG10_2 & i_hbusreq2)
    begin
      reg_stateG10_2 = 1'b0;
    end

   // Automaton G10_3: 
   if(~reg_stateG10_3 & ~controllable_hgrant3 & ~i_hbusreq3)
    begin
      reg_stateG10_3 = 1'b1;
    end
   else if(reg_stateG10_3 & i_hbusreq3)
    begin
      reg_stateG10_3 = 1'b0;
    end

   // Automaton G10_4: 
   if(~reg_stateG10_4 & ~controllable_hgrant4 & ~i_hbusreq4)
    begin
      reg_stateG10_4 = 1'b1;
    end
   else if(reg_stateG10_4 & i_hbusreq4)
    begin
      reg_stateG10_4 = 1'b0;
    end

   // Automaton G10_5: 
   if(~reg_stateG10_5 & ~controllable_hgrant5 & ~i_hbusreq5)
    begin
      reg_stateG10_5 = 1'b1;
    end
   else if(reg_stateG10_5 & i_hbusreq5)
    begin
      reg_stateG10_5 = 1'b0;
    end

   // Automaton G10_6: 
   if(~reg_stateG10_6 & ~controllable_hgrant6 & ~i_hbusreq6)
    begin
      reg_stateG10_6 = 1'b1;
    end
   else if(reg_stateG10_6 & i_hbusreq6)
    begin
      reg_stateG10_6 = 1'b0;
    end

   // Automaton G10_7: 
   if(~reg_stateG10_7 & ~controllable_hgrant7 & ~i_hbusreq7)
    begin
      reg_stateG10_7 = 1'b1;
    end
   else if(reg_stateG10_7 & i_hbusreq7)
    begin
      reg_stateG10_7 = 1'b0;
    end

   // Automaton G10_8: 
   if(~reg_stateG10_8 & ~controllable_hgrant8 & ~i_hbusreq8)
    begin
      reg_stateG10_8 = 1'b1;
    end
   else if(reg_stateG10_8 & i_hbusreq8)
    begin
      reg_stateG10_8 = 1'b0;
    end

   // Automaton G10_9: 
   if(~reg_stateG10_9 & ~controllable_hgrant9 & ~i_hbusreq9)
    begin
      reg_stateG10_9 = 1'b1;
    end
   else if(reg_stateG10_9 & i_hbusreq9)
    begin
      reg_stateG10_9 = 1'b0;
    end

   // Automaton G10_10: 
   if(~reg_stateG10_10 & ~controllable_hgrant10 & ~i_hbusreq10)
    begin
      reg_stateG10_10 = 1'b1;
    end
   else if(reg_stateG10_10 & i_hbusreq10)
    begin
      reg_stateG10_10 = 1'b0;
    end

   // Automaton G10_11: 
   if(~reg_stateG10_11 & ~controllable_hgrant11 & ~i_hbusreq11)
    begin
      reg_stateG10_11 = 1'b1;
    end
   else if(reg_stateG10_11 & i_hbusreq11)
    begin
      reg_stateG10_11 = 1'b0;
    end

   // Latching the previous input:
   reg_i_hready =  i_hready;
   reg_i_hbusreq0 =  i_hbusreq0;
   reg_i_hlock0 =  i_hlock0;
   reg_i_hbusreq1 =  i_hbusreq1;
   reg_i_hlock1 =  i_hlock1;
   reg_i_hbusreq2 =  i_hbusreq2;
   reg_i_hlock2 =  i_hlock2;
   reg_i_hbusreq3 =  i_hbusreq3;
   reg_i_hlock3 =  i_hlock3;
   reg_i_hbusreq4 =  i_hbusreq4;
   reg_i_hlock4 =  i_hlock4;
   reg_i_hbusreq5 =  i_hbusreq5;
   reg_i_hlock5 =  i_hlock5;
   reg_i_hbusreq6 =  i_hbusreq6;
   reg_i_hlock6 =  i_hlock6;
   reg_i_hbusreq7 =  i_hbusreq7;
   reg_i_hlock7 =  i_hlock7;
   reg_i_hbusreq8 =  i_hbusreq8;
   reg_i_hlock8 =  i_hlock8;
   reg_i_hbusreq9 =  i_hbusreq9;
   reg_i_hlock9 =  i_hlock9;
   reg_i_hbusreq10 =  i_hbusreq10;
   reg_i_hlock10 =  i_hlock10;
   reg_i_hbusreq11 =  i_hbusreq11;
   reg_i_hlock11 =  i_hlock11;
   reg_controllable_hmaster0 =  controllable_hmaster0;
   reg_controllable_hmaster1 =  controllable_hmaster1;
   reg_controllable_hmaster2 =  controllable_hmaster2;
   reg_controllable_hmaster3 =  controllable_hmaster3;
   reg_controllable_hmastlock =  controllable_hmastlock;
   reg_controllable_nstart =  controllable_nstart;
   reg_controllable_ndecide =  controllable_ndecide;
   reg_controllable_locked =  controllable_locked;
   reg_controllable_nhgrant0 =  controllable_nhgrant0;
   reg_controllable_hgrant1 =  controllable_hgrant1;
   reg_controllable_hgrant2 =  controllable_hgrant2;
   reg_controllable_hgrant3 =  controllable_hgrant3;
   reg_controllable_hgrant4 =  controllable_hgrant4;
   reg_controllable_hgrant5 =  controllable_hgrant5;
   reg_controllable_hgrant6 =  controllable_hgrant6;
   reg_controllable_hgrant7 =  controllable_hgrant7;
   reg_controllable_hgrant8 =  controllable_hgrant8;
   reg_controllable_hgrant9 =  controllable_hgrant9;
   reg_controllable_hgrant10 =  controllable_hgrant10;
   reg_controllable_hgrant11 =  controllable_hgrant11;
   reg_controllable_busreq =  controllable_busreq;

 end
endmodule

-------------------------------
#!SYNTCOMP
STATUS : realizable
SOLVED_BY : 3/3 [2015-pre-classification]
SOLVED_IN : 86.2832 [2015-pre-classification]
#.

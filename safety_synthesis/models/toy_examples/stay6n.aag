aag 219 13 8 1 198
2
4
6
8
10
12
14
16
18
20
22
24
26
28 1
30 107
32 399
34 407
36 415
38 423
40 431
42 439
96
44 31 28
46 30 28
48 45 28
50 33 28
52 32 28
54 51 28
56 35 28
58 34 28
60 57 28
62 37 28
64 36 28
66 63 28
68 39 28
70 38 28
72 69 28
74 41 28
76 40 28
78 75 28
80 43 28
82 42 28
84 81 28
86 60 54
88 86 66
90 88 72
92 90 78
94 92 84
96 94 46
98 49 27
100 98 46
102 101 98
104 103 99
106 105 101
108 14 2
110 12 2
112 108 13
114 113 111
116 115 17
118 114 16
120 119 117
122 16 2
124 14 4
126 124 123
128 125 122
130 129 127
132 124 122
134 12 4
136 131 13
138 137 135
140 139 19
142 138 18
144 143 141
146 18 2
148 16 4
150 149 147
152 150 132
154 148 147
156 154 133
158 157 153
160 149 146
162 160 133
164 163 158
166 148 146
168 166 132
170 169 164
172 14 6
174 172 170
176 173 171
178 177 175
180 172 171
182 12 6
184 179 13
186 185 183
188 187 21
190 186 20
192 191 189
194 20 2
196 18 4
198 148 132
200 146 132
202 201 199
204 202 167
206 197 195
208 206 205
210 196 195
212 210 204
214 213 209
216 197 194
218 216 204
220 219 214
222 196 194
224 222 205
226 225 220
228 16 6
230 229 226
232 230 180
234 228 226
236 234 181
238 237 233
240 229 227
242 240 181
244 243 238
246 228 227
248 246 180
250 249 244
252 14 8
254 252 250
256 253 251
258 257 255
260 252 251
262 12 8
264 259 13
266 265 263
268 267 23
270 266 22
272 271 269
274 22 2
276 20 4
278 205 196
280 205 194
282 281 279
284 282 223
286 277 275
288 286 285
290 276 275
292 290 284
294 293 289
296 277 274
298 296 284
300 299 294
302 276 274
304 302 285
306 305 300
308 18 6
310 228 180
312 227 180
314 313 311
316 314 247
318 309 306
320 318 317
322 308 306
324 322 316
326 325 321
328 309 307
330 328 316
332 331 326
334 308 307
336 334 317
338 337 332
340 16 8
342 341 338
344 342 260
346 340 338
348 346 261
350 349 345
352 341 339
354 352 261
356 355 350
358 340 339
360 358 260
362 361 356
364 14 10
366 364 362
368 365 363
370 369 367
372 12 10
374 371 13
376 375 373
378 377 25
380 376 24
382 381 379
384 120 15
386 384 144
388 386 192
390 388 272
392 390 382
394 393 55
396 392 52
398 397 395
400 393 52
402 400 61
404 401 58
406 405 403
408 400 58
410 408 67
412 409 64
414 413 411
416 408 64
418 416 73
420 417 70
422 421 419
424 416 70
426 424 79
428 425 76
430 429 427
432 424 76
434 432 85
436 433 82
438 437 435
i0 controllable_c<0>
i1 controllable_c<1>
i2 controllable_c<2>
i3 controllable_c<3>
i4 controllable_c<4>
i5 controllable_c<5>
i6 in<0>
i7 in<1>
i8 in<2>
i9 in<3>
i10 in<4>
i11 in<5>
i12 controllable_s
l0 bench|n29
l1 bench|bad_out
l2 bench|state<0>_out
l3 bench|state<1>_out
l4 bench|state<2>_out
l5 bench|state<3>_out
l6 bench|state<4>_out
l7 bench|state<5>_out
o0 err
c
bench
This file was written by ABC on Sat Aug 31 20:24:58 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv stay6.v   ---gives--> stay6.mv
> abc -c "read_blif_mv stay6.mv; write_aiger -s stay6n.aig"   ---gives--> stay6n.aig
> aigtoaig stay6n.aig stay6n.aag   ---gives--> stay6n.aag (this file)
Content of stay6.v:
// realizable
module bench(clk, in, controllable_s, controllable_c, err);
  input clk;
  input [5:0] in;
  input controllable_s;
  input [5:0] controllable_c;
  output err;
  reg [5:0] state;
  reg bad;
  wire [5:0] mul;
  wire [5:0] choose;

  assign err = bad & (state == 6'b111111);
  mult6 m(in, controllable_c, mul);
  assign choose = controllable_c[5] ? {controllable_c[4:0],1'b0} : {mul[4:0],1'b0};

  initial
  begin
    state = 0;
    bad = 0;
  end

  always @ (posedge clk)
  begin
    state = state + (in != choose);
    if(bad | controllable_s)
      begin
        bad = 1;
      end
  end
endmodule

module mult6(a,b,r);
  input [5:0] a;
  input [5:0] b;
  output [5:0] r;
  wire [5:0] s0;
  wire [5:0] s1;
  wire [5:0] s2;
  wire [5:0] s3;
  wire [5:0] s4;
  wire [5:0] s5;
  assign s0 = b[0] ? a : 0;
  assign s1 = b[1] ? {a[4:0],1'b0} : 0;
  assign s2 = b[2] ? {a[3:0],2'b00} : 0;
  assign s3 = b[3] ? {a[2:0],3'b000} : 0;
  assign s4 = b[4] ? {a[1:0],4'b0000} : 0;
  assign s5 = b[5] ? {a[0:0],5'b00000} : 0;
  assign r  = s0+s1+s2+s3+s4+s5;
endmodule
-------------------------------
#!SYNTCOMP
STATUS : realizable
SOLVED_BY : 8/8 [SYNTCOMP2014-RealSeq]
SOLVED_IN : 0.020001 [SYNTCOMP2014-RealSeq]
#.

aag 15 2 3 1 10
2
4
6 1
8 27
10 30
16
12 10 6
14 8 6
16 14 12
18 12 2
20 18 14
22 15 4
24 22 19
26 25 21
28 15 13
30 29 19
i0 controllable_c<0>
i1 a<0>
l0 n7
l1 counter<0>_out
l2 counter<1>_out
o0 err
c
bench
This file was written by ABC on Sat Aug 31 20:24:34 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv mvs2.v   ---gives--> mvs2.mv
> abc -c "read_blif_mv mvs2.mv; strash; refactor; rewrite; dfraig; rewrite; dfraig; write_aiger -s mvs2y.aig"   ---gives--> mvs2y.aig
> aigtoaig mvs2y.aig mvs2y.aag   ---gives--> mvs2y.aag (this file)
Content of mvs2.v:
// realizable
module bench(clk, a, controllable_c, err);
  input clk;
  input [0:0] a;
  input [0:0] controllable_c;
  reg [1:0] counter;
  output err;
  wire ctrl_xor;
  
  assign err = (counter == 2'b11) ? 1 : 0;
  assign ctrl_xor = controllable_c[0];

  initial
  begin
    counter = 0;
  end

  always @ (posedge clk)
  begin
    if(counter[1] & ctrl_xor)
       counter[1] = 0;
    else if(counter[0])
      begin
       counter[1] = 1;
       counter[0] = 0;
      end
    else
       counter[0:0] = a;
   end
endmodule
-------------------------------
#!SYNTCOMP
STATUS : realizable
SOLVED_BY : 8/8 [SYNTCOMP2014-RealSeq]
SOLVED_IN : 0 [SYNTCOMP2014-RealSeq]
#.

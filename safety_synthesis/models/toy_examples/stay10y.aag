aag 415 21 12 1 382
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44 1
46 111
48 776
50 782
52 788
54 794
56 800
58 806
60 812
62 818
64 824
66 831
108
68 46 44
70 66 44
72 64 44
74 48 44
76 50 44
78 76 74
80 52 44
82 80 78
84 54 44
86 84 82
88 56 44
90 88 86
92 58 44
94 92 90
96 60 44
98 96 94
100 62 44
102 100 98
104 102 73
106 104 71
108 106 68
110 69 43
112 23 21
114 113 18
116 22 16
118 22 14
120 22 12
122 22 10
124 22 8
126 22 6
128 26 2
130 24 2
132 22 4
134 132 130
136 24 4
138 136 135
140 139 129
142 136 128
144 142 23
146 145 141
148 146 126
150 24 6
152 28 2
154 143 135
156 26 4
158 157 154
160 159 143
162 160 152
164 161 153
166 165 163
168 166 150
170 167 151
172 171 169
174 172 148
176 173 149
178 177 175
180 178 124
182 24 8
184 30 2
186 159 152
188 28 4
190 187 143
192 190 189
194 193 187
196 194 184
198 195 185
200 199 197
202 171 148
204 203 169
206 26 6
208 206 205
210 207 204
212 211 209
214 212 200
216 213 201
218 217 215
220 218 182
222 219 183
224 223 221
226 224 180
228 225 181
230 229 227
232 230 122
234 24 10
236 32 2
238 193 184
240 30 4
242 239 187
244 242 241
246 245 239
248 246 236
250 247 237
252 251 249
254 28 6
256 211 200
258 257 209
260 259 254
262 258 255
264 263 261
266 264 252
268 265 253
270 269 267
272 223 180
274 273 221
276 26 8
278 276 275
280 277 274
282 281 279
284 282 270
286 283 271
288 287 285
290 288 234
292 289 235
294 293 291
296 294 232
298 295 233
300 299 297
302 300 120
304 24 12
306 34 2
308 245 236
310 32 4
312 309 239
314 312 311
316 315 309
318 316 306
320 317 307
322 321 319
324 30 6
326 263 252
328 327 261
330 329 324
332 328 325
334 333 331
336 334 322
338 335 323
340 339 337
342 28 8
344 281 270
346 345 279
348 347 342
350 346 343
352 351 349
354 352 340
356 353 341
358 357 355
360 293 232
362 361 291
364 26 10
366 364 363
368 365 362
370 369 367
372 370 358
374 371 359
376 375 373
378 376 304
380 377 305
382 381 379
384 382 302
386 383 303
388 387 385
390 388 118
392 24 14
394 36 2
396 315 306
398 34 4
400 397 309
402 400 399
404 403 397
406 404 394
408 405 395
410 409 407
412 32 6
414 333 322
416 415 331
418 417 412
420 416 413
422 421 419
424 422 410
426 423 411
428 427 425
430 30 8
432 351 340
434 433 349
436 435 430
438 434 431
440 439 437
442 440 428
444 441 429
446 445 443
448 28 10
450 369 358
452 451 367
454 453 448
456 452 449
458 457 455
460 458 446
462 459 447
464 463 461
466 381 302
468 467 379
470 26 12
472 470 469
474 471 468
476 475 473
478 476 464
480 477 465
482 481 479
484 482 392
486 483 393
488 487 485
490 488 390
492 489 391
494 493 491
496 494 116
498 24 16
500 38 2
502 36 4
504 502 501
506 503 500
508 507 505
510 403 394
512 511 397
514 512 508
516 513 509
518 517 515
520 34 6
522 421 410
524 523 419
526 525 520
528 524 521
530 529 527
532 530 518
534 531 519
536 535 533
538 32 8
540 439 428
542 541 437
544 543 538
546 542 539
548 547 545
550 548 536
552 549 537
554 553 551
556 30 10
558 457 446
560 559 455
562 561 556
564 560 557
566 565 563
568 566 554
570 567 555
572 571 569
574 28 12
576 475 464
578 577 473
580 579 574
582 578 575
584 583 581
586 584 572
588 585 573
590 589 587
592 487 390
594 593 485
596 26 14
598 596 595
600 597 594
602 601 599
604 602 590
606 603 591
608 607 605
610 608 498
612 609 499
614 613 611
616 614 496
618 615 497
620 619 617
622 620 21
624 622 115
626 623 114
628 627 625
630 629 41
632 628 40
634 633 631
636 20 16
638 495 117
640 639 497
642 640 21
644 643 637
646 645 39
648 644 38
650 649 647
652 20 14
654 389 119
656 655 391
658 656 21
660 659 653
662 661 37
664 660 36
666 665 663
668 20 12
670 301 121
672 671 303
674 672 21
676 675 669
678 677 35
680 676 34
682 681 679
684 20 10
686 231 123
688 687 233
690 688 21
692 691 685
694 693 33
696 692 32
698 697 695
700 20 8
702 179 125
704 703 181
706 704 21
708 707 701
710 709 31
712 708 30
714 713 711
716 20 6
718 147 127
720 719 149
722 720 21
724 723 717
726 725 29
728 724 28
730 729 727
732 27 5
734 732 130
736 25 3
738 737 131
740 739 156
742 741 735
744 743 20
746 5 3
748 747 20
750 749 25
752 750 27
754 753 745
756 755 23
758 756 730
760 758 714
762 760 698
764 762 682
766 764 666
768 766 650
770 768 634
772 771 74
774 770 75
776 775 773
778 772 76
780 773 77
782 781 779
784 778 80
786 779 81
788 787 785
790 784 84
792 785 85
794 793 791
796 790 88
798 791 89
800 799 797
802 796 92
804 797 93
806 805 803
808 802 96
810 803 97
812 811 809
814 808 100
816 809 101
818 817 815
820 814 72
822 815 73
824 823 821
826 820 71
828 821 70
830 829 827
i0 controllable_c<0>
i1 controllable_c<1>
i2 controllable_c<2>
i3 controllable_c<3>
i4 controllable_c<4>
i5 controllable_c<5>
i6 controllable_c<6>
i7 controllable_c<7>
i8 controllable_c<8>
i9 controllable_c<9>
i10 in<0>
i11 in<1>
i12 in<2>
i13 in<3>
i14 in<4>
i15 in<5>
i16 in<6>
i17 in<7>
i18 in<8>
i19 in<9>
i20 controllable_s
l0 bench|n45
l1 bench|bad_out
l2 bench|state<0>_out
l3 bench|state<1>_out
l4 bench|state<2>_out
l5 bench|state<3>_out
l6 bench|state<4>_out
l7 bench|state<5>_out
l8 bench|state<6>_out
l9 bench|state<7>_out
l10 bench|state<8>_out
l11 bench|state<9>_out
o0 err
c
bench
This file was written by ABC on Sat Aug 31 20:24:53 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv stay10.v   ---gives--> stay10.mv
> abc -c "read_blif_mv stay10.mv; strash; refactor; rewrite; dfraig; rewrite; dfraig; write_aiger -s stay10y.aig"   ---gives--> stay10y.aig
> aigtoaig stay10y.aig stay10y.aag   ---gives--> stay10y.aag (this file)
Content of stay10.v:
// realizable
module bench(clk, in, controllable_s, controllable_c, err);
  input clk;
  input [9:0] in;
  input controllable_s;
  input [9:0] controllable_c;
  output err;
  reg [9:0] state;
  reg bad;
  wire [9:0] mul;
  wire [9:0] choose;

  assign err = bad & (state == 10'b11111111);
  mult10 m(in, controllable_c, mul);
  assign choose = controllable_c[9] ? {controllable_c[8:0],1'b0} : {mul[8:0],1'b0};

  initial
  begin
    state = 0;
    bad = 0;
  end

  always @ (posedge clk)
  begin
    state = state + (in != choose);
    if(bad | controllable_s)
      begin
        bad = 1;
      end
  end
endmodule

module mult10(a,b,r);
  input [9:0] a;
  input [9:0] b;
  output [9:0] r;
  wire [9:0] s0;
  wire [9:0] s1;
  wire [9:0] s2;
  wire [9:0] s3;
  wire [9:0] s4;
  wire [9:0] s5;
  wire [9:0] s6;
  wire [9:0] s7;
  wire [9:0] s8;
  wire [9:0] s9;
  assign s0 = b[0] ? a : 0;
  assign s1 = b[1] ? {a[8:0],1'b0} : 0;
  assign s2 = b[2] ? {a[7:0],2'b00} : 0;
  assign s3 = b[3] ? {a[6:0],3'b000} : 0;
  assign s4 = b[4] ? {a[5:0],4'b0000} : 0;
  assign s5 = b[5] ? {a[4:0],5'b00000} : 0;
  assign s6 = b[6] ? {a[3:0],6'b000000} : 0;
  assign s7 = b[7] ? {a[2:0],7'b0000000} : 0;
  assign s8 = b[8] ? {a[1:0],8'b00000000} : 0;
  assign s9 = b[9] ? {a[0:0],9'b000000000} : 0;
  assign r  = s0+s1+s2+s3+s4+s5+s6+s7+s8+s9;
endmodule
-------------------------------
#!SYNTCOMP
STATUS : realizable
SOLVED_BY : 8/8 [SYNTCOMP2014-RealSeq]
SOLVED_IN : 0.124007 [SYNTCOMP2014-RealSeq]
#.

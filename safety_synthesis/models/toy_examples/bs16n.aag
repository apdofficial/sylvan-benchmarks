aag 280 5 17 1 258
2
4
6
8
10
12 1
14 177
16 273
18 321
20 369
22 393
24 417
26 441
28 465
30 477
32 489
34 501
36 513
38 525
40 537
42 549
44 561
46
46 15 12
48 14 12
50 49 12
52 16 12
54 18 12
56 52 4
58 54 5
60 59 57
62 20 12
64 22 12
66 62 4
68 64 5
70 69 67
72 61 6
74 71 7
76 75 73
78 24 12
80 26 12
82 78 4
84 80 5
86 85 83
88 28 12
90 30 12
92 88 4
94 90 5
96 95 93
98 87 6
100 97 7
102 101 99
104 77 8
106 103 9
108 107 105
110 32 12
112 34 12
114 110 4
116 112 5
118 117 115
120 36 12
122 38 12
124 120 4
126 122 5
128 127 125
130 119 6
132 129 7
134 133 131
136 40 12
138 42 12
140 136 4
142 138 5
144 143 141
146 44 12
148 146 4
150 51 5
152 151 149
154 145 6
156 153 7
158 157 155
160 135 8
162 159 9
164 163 161
166 109 10
168 165 11
170 169 167
172 171 2
174 51 3
176 175 173
178 54 4
180 62 5
182 181 179
184 64 4
186 78 5
188 187 185
190 183 6
192 189 7
194 193 191
196 80 4
198 88 5
200 199 197
202 90 4
204 110 5
206 205 203
208 201 6
210 207 7
212 211 209
214 195 8
216 213 9
218 217 215
220 112 4
222 120 5
224 223 221
226 122 4
228 136 5
230 229 227
232 225 6
234 231 7
236 235 233
238 138 4
240 146 5
242 241 239
244 51 4
246 52 5
248 247 245
250 243 6
252 249 7
254 253 251
256 237 8
258 255 9
260 259 257
262 219 10
264 261 11
266 265 263
268 267 2
270 52 3
272 271 269
274 71 6
276 87 7
278 277 275
280 97 6
282 119 7
284 283 281
286 279 8
288 285 9
290 289 287
292 129 6
294 145 7
296 295 293
298 153 6
300 61 7
302 301 299
304 297 8
306 303 9
308 307 305
310 291 10
312 309 11
314 313 311
316 315 2
318 54 3
320 319 317
322 189 6
324 201 7
326 325 323
328 207 6
330 225 7
332 331 329
334 327 8
336 333 9
338 337 335
340 231 6
342 243 7
344 343 341
346 249 6
348 183 7
350 349 347
352 345 8
354 351 9
356 355 353
358 339 10
360 357 11
362 361 359
364 363 2
366 62 3
368 367 365
370 103 8
372 135 9
374 373 371
376 159 8
378 77 9
380 379 377
382 375 10
384 381 11
386 385 383
388 387 2
390 64 3
392 391 389
394 213 8
396 237 9
398 397 395
400 255 8
402 195 9
404 403 401
406 399 10
408 405 11
410 409 407
412 411 2
414 78 3
416 415 413
418 285 8
420 297 9
422 421 419
424 303 8
426 279 9
428 427 425
430 423 10
432 429 11
434 433 431
436 435 2
438 80 3
440 439 437
442 333 8
444 345 9
446 445 443
448 351 8
450 327 9
452 451 449
454 447 10
456 453 11
458 457 455
460 459 2
462 88 3
464 463 461
466 165 10
468 109 11
470 469 467
472 471 2
474 90 3
476 475 473
478 261 10
480 219 11
482 481 479
484 483 2
486 110 3
488 487 485
490 309 10
492 291 11
494 493 491
496 495 2
498 112 3
500 499 497
502 357 10
504 339 11
506 505 503
508 507 2
510 120 3
512 511 509
514 381 10
516 375 11
518 517 515
520 519 2
522 122 3
524 523 521
526 405 10
528 399 11
530 529 527
532 531 2
534 136 3
536 535 533
538 429 10
540 423 11
542 541 539
544 543 2
546 138 3
548 547 545
550 453 10
552 447 11
554 553 551
556 555 2
558 146 3
560 559 557
i0 controllable_do_shift
i1 sh<0>
i2 sh<1>
i3 sh<2>
i4 sh<3>
l0 bench|n13
l1 bench|r<0>_out
l2 bench|r<1>_out
l3 bench|r<2>_out
l4 bench|r<3>_out
l5 bench|r<4>_out
l6 bench|r<5>_out
l7 bench|r<6>_out
l8 bench|r<7>_out
l9 bench|r<8>_out
l10 bench|r<9>_out
l11 bench|r<10>_out
l12 bench|r<11>_out
l13 bench|r<12>_out
l14 bench|r<13>_out
l15 bench|r<14>_out
l16 bench|r<15>_out
o0 err
c
bench
This file was written by ABC on Sat Aug 31 20:25:11 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv bs16.v   ---gives--> bs16.mv
> abc -c "read_blif_mv bs16.mv; write_aiger -s bs16n.aig"   ---gives--> bs16n.aig
> aigtoaig bs16n.aig bs16n.aag   ---gives--> bs16n.aag (this file)
Content of bs16.v:
module bench(clk, sh, controllable_do_shift, err);
  input clk;
  input [3:0] sh;
  input controllable_do_shift;
  output err;
  reg[15:0] r;

  wire[15:0] shifted;
  barrel b(r,shifted,sh);

  assign err = ~r[0];

  initial
  begin
    r = 1;
  end

  always @ (posedge clk)
  begin
    r = controllable_do_shift ? shifted : r;
  end
endmodule
  
module barrel(i,o,s);
  input [15:0] i;
  output [15:0] o;
  input [3:0] s;
  wire [15:0] t1;
  wire [15:0] t2;
  wire [15:0] t3;
  
  assign t1 = s[0] ? {i[14:0],i[15:15]} : i;    // shift by 1 pos
  assign t2 = s[1] ? {t1[13:0],t1[15:14]} : t1; // shift by 2 pos
  assign t3 = s[2] ? {t2[11:0],t2[15:12]} : t2; // shift by 4 pos
  assign o  = s[3] ? {t3[7:0],t3[15:8]} : t3; // shift by 8 pos
endmodule

-------------------------------
#!SYNTCOMP
STATUS : realizable
SOLVED_BY : 8/8 [SYNTCOMP2014-RealSeq]
SOLVED_IN : 0.008 [SYNTCOMP2014-RealSeq]
#.

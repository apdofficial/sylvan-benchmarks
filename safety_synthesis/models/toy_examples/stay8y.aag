aag 264 17 10 1 237
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36 1
38 91
40 486
42 492
44 498
46 504
48 510
50 516
52 522
54 529
88
56 38 36
58 40 36
60 42 36
62 60 58
64 44 36
66 64 62
68 46 36
70 68 66
72 48 36
74 72 70
76 50 36
78 76 74
80 52 36
82 80 78
84 54 36
86 84 82
88 86 56
90 57 35
92 19 17
94 93 14
96 18 12
98 18 10
100 18 8
102 18 6
104 22 2
106 20 2
108 18 4
110 108 106
112 20 4
114 112 111
116 115 105
118 112 104
120 118 19
122 121 117
124 122 102
126 20 6
128 24 2
130 119 111
132 22 4
134 133 130
136 135 119
138 136 128
140 137 129
142 141 139
144 142 126
146 143 127
148 147 145
150 148 124
152 149 125
154 153 151
156 154 100
158 20 8
160 26 2
162 135 128
164 24 4
166 163 119
168 166 165
170 169 163
172 170 160
174 171 161
176 175 173
178 147 124
180 179 145
182 22 6
184 182 181
186 183 180
188 187 185
190 188 176
192 189 177
194 193 191
196 194 158
198 195 159
200 199 197
202 200 156
204 201 157
206 205 203
208 206 98
210 20 10
212 28 2
214 169 160
216 26 4
218 215 163
220 218 217
222 221 215
224 222 212
226 223 213
228 227 225
230 24 6
232 187 176
234 233 185
236 235 230
238 234 231
240 239 237
242 240 228
244 241 229
246 245 243
248 199 156
250 249 197
252 22 8
254 252 251
256 253 250
258 257 255
260 258 246
262 259 247
264 263 261
266 264 210
268 265 211
270 269 267
272 270 208
274 271 209
276 275 273
278 276 96
280 20 12
282 30 2
284 28 4
286 284 283
288 285 282
290 289 287
292 221 212
294 293 215
296 294 290
298 295 291
300 299 297
302 26 6
304 239 228
306 305 237
308 307 302
310 306 303
312 311 309
314 312 300
316 313 301
318 317 315
320 24 8
322 257 246
324 323 255
326 325 320
328 324 321
330 329 327
332 330 318
334 331 319
336 335 333
338 269 208
340 339 267
342 22 10
344 342 341
346 343 340
348 347 345
350 348 336
352 349 337
354 353 351
356 354 280
358 355 281
360 359 357
362 360 278
364 361 279
366 365 363
368 366 17
370 368 95
372 369 94
374 373 371
376 375 33
378 374 32
380 379 377
382 16 12
384 277 97
386 385 279
388 386 17
390 389 383
392 391 31
394 390 30
396 395 393
398 16 10
400 207 99
402 401 209
404 402 17
406 405 399
408 407 29
410 406 28
412 411 409
414 16 8
416 155 101
418 417 157
420 418 17
422 421 415
424 423 27
426 422 26
428 427 425
430 16 6
432 123 103
434 433 125
436 434 17
438 437 431
440 439 25
442 438 24
444 443 441
446 23 5
448 446 106
450 21 3
452 451 107
454 453 132
456 455 449
458 457 16
460 5 3
462 461 16
464 463 21
466 464 23
468 467 459
470 469 19
472 470 444
474 472 428
476 474 412
478 476 396
480 478 380
482 481 58
484 480 59
486 485 483
488 482 60
490 483 61
492 491 489
494 488 64
496 489 65
498 497 495
500 494 68
502 495 69
504 503 501
506 500 72
508 501 73
510 509 507
512 506 76
514 507 77
516 515 513
518 512 80
520 513 81
522 521 519
524 518 85
526 519 84
528 527 525
i0 controllable_c<0>
i1 controllable_c<1>
i2 controllable_c<2>
i3 controllable_c<3>
i4 controllable_c<4>
i5 controllable_c<5>
i6 controllable_c<6>
i7 controllable_c<7>
i8 in<0>
i9 in<1>
i10 in<2>
i11 in<3>
i12 in<4>
i13 in<5>
i14 in<6>
i15 in<7>
i16 controllable_s
l0 bench|n37
l1 bench|bad_out
l2 bench|state<0>_out
l3 bench|state<1>_out
l4 bench|state<2>_out
l5 bench|state<3>_out
l6 bench|state<4>_out
l7 bench|state<5>_out
l8 bench|state<6>_out
l9 bench|state<7>_out
o0 err
c
bench
This file was written by ABC on Sat Aug 31 20:24:46 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv stay8.v   ---gives--> stay8.mv
> abc -c "read_blif_mv stay8.mv; strash; refactor; rewrite; dfraig; rewrite; dfraig; write_aiger -s stay8y.aig"   ---gives--> stay8y.aig
> aigtoaig stay8y.aig stay8y.aag   ---gives--> stay8y.aag (this file)
Content of stay8.v:
// realizable
module bench(clk, in, controllable_s, controllable_c, err);
  input clk;
  input [7:0] in;
  input controllable_s;
  input [7:0] controllable_c;
  output err;
  reg [7:0] state;
  reg bad;
  wire [7:0] mul;
  wire [7:0] choose;

  assign err = bad & (state == 8'b11111111);
  mult8 m(in, controllable_c, mul);
  assign choose = controllable_c[7] ? {controllable_c[6:0],1'b0} : {mul[6:0],1'b0};

  initial
  begin
    state = 0;
    bad = 0;
  end

  always @ (posedge clk)
  begin
    state = state + (in != choose);
    if(bad | controllable_s)
      begin
        bad = 1;
      end
  end
endmodule

module mult8(a,b,r);
  input [7:0] a;
  input [7:0] b;
  output [7:0] r;
  wire [7:0] s0;
  wire [7:0] s1;
  wire [7:0] s2;
  wire [7:0] s3;
  wire [7:0] s4;
  wire [7:0] s5;
  wire [7:0] s6;
  wire [7:0] s7;
  assign s0 = b[0] ? a : 0;
  assign s1 = b[1] ? {a[6:0],1'b0} : 0;
  assign s2 = b[2] ? {a[5:0],2'b00} : 0;
  assign s3 = b[3] ? {a[4:0],3'b000} : 0;
  assign s4 = b[4] ? {a[3:0],4'b0000} : 0;
  assign s5 = b[5] ? {a[2:0],5'b00000} : 0;
  assign s6 = b[6] ? {a[1:0],6'b000000} : 0;
  assign s7 = b[7] ? {a[0:0],7'b0000000} : 0;
  assign r  = s0+s1+s2+s3+s4+s5+s6+s7;
endmodule
-------------------------------
#!SYNTCOMP
STATUS : realizable
SOLVED_BY : 8/8 [SYNTCOMP2014-RealSeq]
SOLVED_IN : 0.044002 [SYNTCOMP2014-RealSeq]
#.

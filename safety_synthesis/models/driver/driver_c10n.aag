aag 1007 52 80 1 875
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106 1
108 369
110 381
112 393
114 409
116 421
118 433
120 445
122 457
124 475
126 487
128 499
130 511
132 523
134 535
136 547
138 559
140 657
142 676
144 694
146 711
148 723
150 735
152 747
154 759
156 771
158 783
160 795
162 807
164 831
166 849
168 867
170 877
172 891
174 913
176 931
178 949
180 1103
182 1131
184 1137
186 1143
188 1149
190 1161
192 1173
194 1185
196 1689
198 1738
200 1776
202 1814
204 1821
206 1827
208 1833
210 1839
212 1845
214 1851
216 1857
218 1863
220 1869
222 1870
224 1878
226 1888
228 1898
230 1909
232 1915
234 1921
236 1927
238 1933
240 1939
242 1949
244 1955
246 1961
248 1967
250 1973
252 1979
254 1985
256 1991
258 1997
260 2003
262 2009
264 2015
343
266 229 106
268 228 106
270 267 106
272 227 106
274 226 106
276 273 106
278 225 106
280 224 106
282 279 106
284 223 106
286 222 106
288 285 106
290 283 277
292 290 271
294 293 270
296 294 291
298 282 274
300 299 291
302 291 271
304 290 268
306 305 303
308 287 282
310 308 300
312 310 306
314 313 297
316 95 93
318 316 97
320 319 96
322 320 317
324 94 92
326 325 317
328 317 97
330 316 96
332 331 329
334 92 91
336 334 326
338 336 332
340 339 323
342 340 314
344 93 91
346 344 95
348 346 97
350 348 54
352 4 3
354 352 7
356 354 350
358 109 106
360 108 106
362 359 106
364 356 8
366 360 357
368 367 365
370 111 106
372 110 106
374 371 106
376 356 10
378 372 357
380 379 377
382 113 106
384 112 106
386 383 106
388 356 12
390 384 357
392 391 389
394 344 94
396 394 97
398 115 106
400 114 106
402 399 106
404 396 28
406 400 397
408 407 405
410 117 106
412 116 106
414 411 106
416 396 30
418 412 397
420 419 417
422 119 106
424 118 106
426 423 106
428 396 32
430 424 397
432 431 429
434 121 106
436 120 106
438 435 106
440 396 14
442 436 397
444 443 441
446 123 106
448 122 106
450 447 106
452 396 16
454 448 397
456 455 453
458 5 2
460 458 7
462 460 350
464 125 106
466 124 106
468 465 106
470 462 8
472 466 463
474 473 471
476 127 106
478 126 106
480 477 106
482 462 10
484 478 463
486 485 483
488 129 106
490 128 106
492 489 106
494 396 68
496 490 397
498 497 495
500 131 106
502 130 106
504 501 106
506 396 70
508 502 397
510 509 507
512 133 106
514 132 106
516 513 106
518 396 72
520 514 397
522 521 519
524 135 106
526 134 106
528 525 106
530 396 34
532 526 397
534 533 531
536 137 106
538 136 106
540 537 106
542 396 36
544 538 397
546 545 543
548 139 106
550 138 106
552 549 106
554 396 38
556 550 397
558 557 555
560 93 90
562 560 95
564 562 96
566 141 106
568 140 106
570 567 106
572 143 106
574 142 106
576 573 106
578 145 106
580 144 106
582 579 106
584 575 569
586 584 581
588 586 564
590 479 468
592 590 588
594 480 467
596 594 588
598 480 468
600 598 588
602 374 362
604 602 386
606 604 600
608 575 570
610 608 581
612 610 564
614 612 88
616 576 569
618 616 581
620 618 564
622 620 98
624 576 570
626 624 581
628 626 564
630 628 56
632 584 582
634 632 564
636 634 56
638 637 568
640 638 631
642 640 623
644 642 615
646 644 601
648 646 607
650 649 607
652 651 597
654 652 593
656 655 593
658 637 574
660 658 631
662 660 623
664 662 615
666 664 601
668 666 607
670 669 607
672 671 597
674 673 597
676 675 593
678 637 580
680 678 631
682 680 623
684 682 615
686 684 601
688 687 601
690 689 607
692 690 597
694 692 593
696 334 95
698 696 97
700 147 106
702 146 106
704 701 106
706 698 74
708 702 699
710 709 707
712 149 106
714 148 106
716 713 106
718 698 76
720 714 699
722 721 719
724 151 106
726 150 106
728 725 106
730 698 78
732 726 699
734 733 731
736 153 106
738 152 106
740 737 106
742 698 80
744 738 699
746 745 743
748 155 106
750 154 106
752 749 106
754 698 82
756 750 699
758 757 755
760 157 106
762 156 106
764 761 106
766 698 84
768 762 699
770 769 767
772 159 106
774 158 106
776 773 106
778 396 48
780 774 397
782 781 779
784 161 106
786 160 106
788 785 106
790 396 50
792 786 397
794 793 791
796 163 106
798 162 106
800 797 106
802 396 52
804 798 397
806 805 803
808 4 2
810 808 7
812 810 350
814 255 106
816 254 106
818 815 106
820 165 106
822 164 106
824 821 106
826 816 812
828 822 813
830 829 827
832 257 106
834 256 106
836 833 106
838 167 106
840 166 106
842 839 106
844 834 812
846 840 813
848 847 845
850 259 106
852 258 106
854 851 106
856 169 106
858 168 106
860 857 106
862 852 812
864 858 813
866 865 863
868 352 6
870 868 350
872 870 12
874 871 12
876 875 873
878 348 55
880 5 3
882 880 7
884 882 878
886 884 8
888 885 8
890 889 887
892 880 6
894 892 350
896 261 106
898 260 106
900 897 106
902 175 106
904 174 106
906 903 106
908 898 894
910 904 895
912 911 909
914 263 106
916 262 106
918 915 106
920 177 106
922 176 106
924 921 106
926 916 894
928 922 895
930 929 927
932 265 106
934 264 106
936 933 106
938 179 106
940 178 106
942 939 106
944 934 894
946 940 895
948 947 945
950 172 106
952 951 8
954 181 106
956 180 106
958 955 106
960 956 953
962 183 106
964 182 106
966 963 106
968 966 957
970 221 106
972 220 106
974 971 106
976 231 106
978 230 106
980 977 106
982 233 106
984 232 106
986 983 106
988 234 106
990 985 980
992 990 989
994 993 974
996 986 979
998 996 989
1000 999 973
1002 1001 995
1004 702 363
1006 705 360
1008 1007 1005
1010 714 375
1012 717 372
1014 1013 1011
1016 726 387
1018 729 384
1020 1019 1017
1022 1014 1008
1024 1022 1020
1026 1024 1002
1028 185 106
1030 184 106
1032 1029 106
1034 1033 738
1036 1030 741
1038 1037 1035
1040 187 106
1042 186 106
1044 1041 106
1046 1045 750
1048 1042 753
1050 1049 1047
1052 189 106
1054 188 106
1056 1053 106
1058 1057 762
1060 1054 765
1062 1061 1059
1064 1050 1038
1066 1064 1062
1068 1066 1026
1070 171 106
1072 1071 106
1074 1072 1068
1076 956 47
1078 1077 47
1080 1075 956
1082 1079 1074
1084 1083 1081
1086 966 958
1088 1086 86
1090 1089 956
1092 1085 968
1094 1090 969
1096 1095 1093
1098 960 884
1100 1097 885
1102 1101 1099
1104 964 953
1106 1105 953
1108 964 47
1110 1109 47
1112 1075 964
1114 1111 1074
1116 1115 1113
1118 1089 964
1120 1117 968
1122 1118 969
1124 1123 1121
1126 1107 884
1128 1125 885
1130 1129 1127
1132 360 356
1134 1030 357
1136 1135 1133
1138 372 356
1140 1042 357
1142 1141 1139
1144 384 356
1146 1054 357
1148 1147 1145
1150 191 106
1152 190 106
1154 1151 106
1156 396 100
1158 1152 397
1160 1159 1157
1162 193 106
1164 192 106
1166 1163 106
1168 396 102
1170 1164 397
1172 1171 1169
1174 195 106
1176 194 106
1178 1175 106
1180 396 104
1182 1176 397
1184 1183 1181
1186 197 106
1188 196 106
1190 1187 106
1192 199 106
1194 198 106
1196 1193 106
1198 201 106
1200 200 106
1202 1199 106
1204 203 106
1206 202 106
1208 1205 106
1210 1195 1189
1212 1210 1201
1214 1212 1207
1216 92 90
1218 1216 95
1220 1218 97
1222 1220 1214
1224 1195 1190
1226 1224 1201
1228 1226 1207
1230 618 98
1232 1230 1228
1234 1232 564
1236 1196 1189
1238 1236 1201
1240 1238 1207
1242 632 56
1244 1242 1240
1246 1244 564
1248 1196 1190
1250 1248 1201
1252 1250 1207
1254 1252 396
1256 1254 67
1258 1254 66
1260 1210 1202
1262 1260 1207
1264 1262 1088
1266 816 529
1268 819 526
1270 1269 1267
1272 834 541
1274 837 538
1276 1275 1273
1278 852 553
1280 855 550
1282 1281 1279
1284 1276 1270
1286 1284 1282
1288 237 106
1290 236 106
1292 1289 106
1294 1293 822
1296 1290 825
1298 1297 1295
1300 239 106
1302 238 106
1304 1301 106
1306 1305 840
1308 1302 843
1310 1309 1307
1312 241 106
1314 240 106
1316 1313 106
1318 1317 858
1320 1314 861
1322 1321 1319
1324 1310 1298
1326 1324 1322
1328 1326 1286
1330 1155 898
1332 1152 901
1334 1333 1331
1336 1167 916
1338 1164 919
1340 1339 1337
1342 1179 934
1344 1176 937
1346 1345 1343
1348 1340 1334
1350 1348 1346
1352 1350 1328
1354 904 403
1356 907 400
1358 1357 1355
1360 922 415
1362 925 412
1364 1363 1361
1366 940 427
1368 943 424
1370 1369 1367
1372 1364 1358
1374 1372 1370
1376 1374 1352
1378 215 106
1380 214 106
1382 1379 106
1384 243 106
1386 242 106
1388 1385 106
1390 1386 1383
1392 1389 1380
1394 1393 1391
1396 217 106
1398 216 106
1400 1397 106
1402 245 106
1404 244 106
1406 1403 106
1408 1404 1401
1410 1407 1398
1412 1411 1409
1414 219 106
1416 218 106
1418 1415 106
1420 247 106
1422 246 106
1424 1421 106
1426 1422 1419
1428 1425 1416
1430 1429 1427
1432 1412 1394
1434 1432 1430
1436 1434 1376
1438 249 106
1440 248 106
1442 1439 106
1444 1440 777
1446 1443 774
1448 1447 1445
1450 251 106
1452 250 106
1454 1451 106
1456 1452 789
1458 1455 786
1460 1459 1457
1462 253 106
1464 252 106
1466 1463 106
1468 1464 801
1470 1467 798
1472 1471 1469
1474 1460 1448
1476 1474 1472
1478 1476 1436
1480 493 360
1482 490 363
1484 1483 1481
1486 505 372
1488 502 375
1490 1489 1487
1492 517 384
1494 514 387
1496 1495 1493
1498 1490 1484
1500 1498 1496
1502 1500 1478
1504 209 106
1506 208 106
1508 1505 106
1510 1509 1030
1512 1506 1033
1514 1513 1511
1516 211 106
1518 210 106
1520 1517 106
1522 1521 1042
1524 1518 1045
1526 1525 1523
1528 213 106
1530 212 106
1532 1529 106
1534 1533 1054
1536 1530 1057
1538 1537 1535
1540 1526 1514
1542 1540 1538
1544 1542 1502
1546 205 106
1548 204 106
1550 1547 106
1552 1548 439
1554 1551 436
1556 1555 1553
1558 207 106
1560 206 106
1562 1559 106
1564 1560 451
1566 1563 448
1568 1567 1565
1570 1568 1556
1572 1570 1544
1574 1572 973
1576 1575 1264
1578 1576 564
1580 1264 58
1582 1580 564
1584 1264 59
1586 1584 564
1588 1224 1202
1590 1588 1207
1592 1590 1088
1594 1572 974
1596 1595 1592
1598 1596 564
1600 1592 58
1602 1600 564
1604 1592 59
1606 1604 564
1608 1236 1202
1610 1608 1207
1612 560 94
1614 1612 97
1616 1614 1610
1618 1248 1202
1620 1618 1207
1622 334 94
1624 1622 97
1626 1624 1620
1628 1212 1208
1630 1216 94
1632 1630 97
1634 1632 1628
1636 1226 1208
1638 346 96
1640 1638 1636
1642 1641 1188
1644 1643 1641
1646 1645 1635
1648 1647 1635
1650 1649 1627
1652 1651 1627
1654 1653 1617
1656 1655 1617
1658 1657 1607
1660 1659 1607
1662 1661 1603
1664 1662 1599
1666 1664 1587
1668 1667 1587
1670 1669 1583
1672 1670 1579
1674 1672 1259
1676 1675 1259
1678 1677 1257
1680 1678 1247
1682 1681 1247
1684 1683 1235
1686 1684 1223
1688 1687 1223
1690 1641 1194
1692 1691 1641
1694 1693 1635
1696 1695 1635
1698 1697 1627
1700 1699 1627
1702 1701 1617
1704 1703 1617
1706 1705 1607
1708 1706 1603
1710 1708 1599
1712 1711 1599
1714 1713 1587
1716 1715 1587
1718 1717 1583
1720 1719 1583
1722 1721 1579
1724 1723 1579
1726 1725 1259
1728 1726 1257
1730 1728 1247
1732 1731 1247
1734 1733 1235
1736 1735 1235
1738 1737 1223
1740 1641 1200
1742 1740 1635
1744 1742 1627
1746 1744 1617
1748 1746 1607
1750 1748 1603
1752 1750 1599
1754 1752 1587
1756 1755 1587
1758 1757 1583
1760 1759 1583
1762 1761 1579
1764 1762 1259
1766 1765 1259
1768 1767 1257
1770 1769 1257
1772 1771 1247
1774 1772 1235
1776 1774 1223
1778 1641 1206
1780 1778 1635
1782 1780 1627
1784 1782 1617
1786 1784 1607
1788 1787 1607
1790 1789 1603
1792 1791 1603
1794 1793 1599
1796 1795 1599
1798 1797 1587
1800 1798 1583
1802 1800 1579
1804 1803 1579
1806 1805 1259
1808 1806 1257
1810 1808 1247
1812 1810 1235
1814 1812 1223
1816 698 24
1818 1548 699
1820 1819 1817
1822 698 26
1824 1560 699
1826 1825 1823
1828 396 60
1830 1506 397
1832 1831 1829
1834 396 62
1836 1518 397
1838 1837 1835
1840 396 64
1842 1530 397
1844 1843 1841
1846 396 40
1848 1380 397
1850 1849 1847
1852 396 42
1854 1398 397
1856 1855 1853
1858 396 44
1860 1416 397
1862 1861 1859
1864 884 10
1866 885 10
1868 1867 1865
1870 1253 289
1872 286 283
1874 287 280
1876 1875 1873
1878 1877 1253
1880 286 280
1882 1880 277
1884 1881 274
1886 1885 1883
1888 1887 1253
1890 1880 274
1892 1890 271
1894 1891 268
1896 1895 1893
1898 1897 1253
1900 808 6
1902 1900 350
1904 1902 8
1906 1903 978
1908 1907 1905
1910 1902 10
1912 1903 984
1914 1913 1911
1916 1902 12
1918 1903 988
1920 1919 1917
1922 396 18
1924 1290 397
1926 1925 1923
1928 396 20
1930 1302 397
1932 1931 1929
1934 396 22
1936 1314 397
1938 1937 1935
1940 458 6
1942 1940 350
1944 1942 8
1946 1943 1386
1948 1947 1945
1950 1942 10
1952 1943 1404
1954 1953 1951
1956 1942 12
1958 1943 1422
1960 1959 1957
1962 1942 1386
1964 1943 1440
1966 1965 1963
1968 1942 1404
1970 1943 1452
1972 1971 1969
1974 1942 1422
1976 1943 1464
1978 1977 1975
1980 812 8
1982 816 813
1984 1983 1981
1986 812 10
1988 834 813
1990 1989 1987
1992 812 12
1994 852 813
1996 1995 1993
1998 894 8
2000 898 895
2002 2001 1999
2004 894 10
2006 916 895
2008 2007 2005
2010 894 12
2012 934 895
2014 2013 2011
i0 controllable_addr_abs<0>
i1 controllable_addr_abs<1>
i2 controllable_addr_abs<2>
i3 controllable_write8_val_abs<0>
i4 controllable_write8_val_abs<1>
i5 controllable_write8_val_abs<2>
i6 i_reqBuf_abs<0>
i7 i_reqBuf_abs<1>
i8 i_reqLBA1_abs<0>
i9 i_reqLBA1_abs<1>
i10 i_reqLBA1_abs<2>
i11 controllable_fillPrdAddr_abs<0>
i12 controllable_fillPrdAddr_abs<1>
i13 i_reqLBA3_abs<0>
i14 i_reqLBA3_abs<1>
i15 i_reqLBA3_abs<2>
i16 i_reqLBA0_abs<0>
i17 i_reqLBA0_abs<1>
i18 i_reqLBA0_abs<2>
i19 i_reqLBA4_abs<0>
i20 i_reqLBA4_abs<1>
i21 i_reqLBA4_abs<2>
i22 controllable_dmaStartClass_conc
i23 i_reqLBA5_abs<0>
i24 i_reqLBA5_abs<1>
i25 i_reqLBA5_abs<2>
i26 controllable_bank_abs
i27 controllable_featXFRClass_conc
i28 i_transSuccess_conc
i29 i_reqSect1_abs<0>
i30 i_reqSect1_abs<1>
i31 i_reqSect1_abs<2>
i32 i_osReqType_conc
i33 i_reqSect0_abs<0>
i34 i_reqSect0_abs<1>
i35 i_reqSect0_abs<2>
i36 controllable_fillPrdNSect_abs<0>
i37 controllable_fillPrdNSect_abs<1>
i38 controllable_fillPrdNSect_abs<2>
i39 controllable_fillPrdNSect_abs<3>
i40 controllable_fillPrdNSect_abs<4>
i41 controllable_fillPrdNSect_abs<5>
i42 controllable_busMasterClass_conc
i43 controllable_featWCClass_conc
i44 controllable_tag_conc<0>
i45 controllable_tag_conc<1>
i46 controllable_tag_conc<2>
i47 controllable_tag_conc<3>
i48 controllable_featNWCClass_conc
i49 i_reqLBA2_abs<0>
i50 i_reqLBA2_abs<1>
i51 i_reqLBA2_abs<2>
l0 n107
l1 state_regSectors0_abs<0>_out
l2 state_regSectors0_abs<1>_out
l3 state_regSectors0_abs<2>_out
l4 state_os_lba3_abs<0>_out
l5 state_os_lba3_abs<1>_out
l6 state_os_lba3_abs<2>_out
l7 state_os_buf_abs<0>_out
l8 state_os_buf_abs<1>_out
l9 state_regFeature0_abs<0>_out
l10 state_regFeature0_abs<1>_out
l11 state_os_sect0_abs<0>_out
l12 state_os_sect0_abs<1>_out
l13 state_os_sect0_abs<2>_out
l14 state_os_lba0_abs<0>_out
l15 state_os_lba0_abs<1>_out
l16 state_os_lba0_abs<2>_out
l17 state_setFeatState_conc<0>_out
l18 state_setFeatState_conc<1>_out
l19 state_setFeatState_conc<2>_out
l20 state_bufSectors_abs<0>_out
l21 state_bufSectors_abs<1>_out
l22 state_bufSectors_abs<2>_out
l23 state_bufSectors_abs<3>_out
l24 state_bufSectors_abs<4>_out
l25 state_bufSectors_abs<5>_out
l26 state_os_lba5_abs<0>_out
l27 state_os_lba5_abs<1>_out
l28 state_os_lba5_abs<2>_out
l29 state_regLBALow1_abs<0>_out
l30 state_regLBALow1_abs<1>_out
l31 state_regLBALow1_abs<2>_out
l32 state_regDev_LBA_abs_out
l33 state_regBMCommand_Start_abs_out
l34 state_regLBAMid1_abs<0>_out
l35 state_regLBAMid1_abs<1>_out
l36 state_regLBAMid1_abs<2>_out
l37 state_stDMACmd_conc<0>_out
l38 state_stDMACmd_conc<1>_out
l39 state_regSectors1_abs<0>_out
l40 state_regSectors1_abs<1>_out
l41 state_regSectors1_abs<2>_out
l42 state_os_lba2_abs<0>_out
l43 state_os_lba2_abs<1>_out
l44 state_os_lba2_abs<2>_out
l45 state_osState_conc<0>_out
l46 state_osState_conc<1>_out
l47 state_osState_conc<2>_out
l48 state_osState_conc<3>_out
l49 state_bufAddr_abs<0>_out
l50 state_bufAddr_abs<1>_out
l51 state_os_sect1_abs<0>_out
l52 state_os_sect1_abs<1>_out
l53 state_os_sect1_abs<2>_out
l54 state_os_lba4_abs<0>_out
l55 state_os_lba4_abs<1>_out
l56 state_os_lba4_abs<2>_out
l57 state_regBMCommand_RW_abs_out
l58 fair_cnt<0>_out
l59 fair_cnt<1>_out
l60 fair_cnt<2>_out
l61 fair_cnt<3>_out
l62 state_regCommand_abs<0>_out
l63 state_regCommand_abs<1>_out
l64 state_regCommand_abs<2>_out
l65 state_os_lba1_abs<0>_out
l66 state_os_lba1_abs<1>_out
l67 state_os_lba1_abs<2>_out
l68 state_regLBAHigh0_abs<0>_out
l69 state_regLBAHigh0_abs<1>_out
l70 state_regLBAHigh0_abs<2>_out
l71 state_regLBAHigh1_abs<0>_out
l72 state_regLBAHigh1_abs<1>_out
l73 state_regLBAHigh1_abs<2>_out
l74 state_regLBALow0_abs<0>_out
l75 state_regLBALow0_abs<1>_out
l76 state_regLBALow0_abs<2>_out
l77 state_regLBAMid0_abs<0>_out
l78 state_regLBAMid0_abs<1>_out
l79 state_regLBAMid0_abs<2>_out
o0 o_err
c
ide_hard_drive_controller_2
This file was written by ABC on Tue Mar 11 20:24:20 2014
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv driver_c10.v   ---gives--> driver_c10.mv
> abc -c "read_blif_mv driver_c10.mv; write_aiger -s driver_c10n.aig"   ---gives--> driver_c10n.aig
> aigtoaig driver_c10n.aig driver_c10n.aag   ---gives--> driver_c10n.aag (this file)
Content of driver_c10.v:
// IDE hard drive controller specification and operating system interface
// specification for device driver synthesis.
// This file describes a GR(1) game played by a device driver for an IDE hard
// disk against its environment consisting of the hard disk and operating
// system.

`define WIDTH1 2
`define WIDTH2 1

`define CMD_READ_DMA_EXT  1
`define CMD_WRITE_DMA_EXT 2
`define FEAT_WC           1
`define FEAT_NWC          2
`define FEAT_XFR_MODE     3
`define XM_ULTRA_DMA      7

`define RCMD              1
`define REG_FEATURE0      1
`define REG_SECTORS       2
`define REG_LBA_LOW       3
`define REG_LBA_MID       4
`define REG_LBA_HIGH      5
`define REG_DEV           6
`define REG_ERRCMD        7

`define RDMA              0
`define REG_BM_COMMAND    0

//typedef enum {read=0, write=1} i_osReqType_enum;
`define read              0
`define write             1

//typedef enum {write8, write32, fillPrd, reset, os_req, ack_read_succ, ack_read_fail, ack_write_succ, ack_write_fail, class_event} controllable_tag_enum;
`define write8            0
`define write32           1
`define fillPrd           2
`define reset             3
`define os_req            4
`define ack_read_succ     5
`define ack_read_fail     6
`define ack_write_succ    7
`define ack_write_fail    8
`define class_event       9

//typedef enum {wait_bm_ready=0, dma_read=1, bm_read_prd=2, bm_ready=3} state_stDMACmd_enum;
`define wait_bm_ready     0
`define dma_read          1
`define bm_read_prd       2
`define bm_ready          3


//typedef enum {setFeatIdle=0, setFeatWC=1, setFeatNWC=2, setFeatXFR0=3, setFeatXFR1=4} state_setFeatState_enum;
`define setFeatIdle       0
`define setFeatWC         1
`define setFeatNWC        2
`define setFeatXFR0       3
`define setFeatXFR1       4

//typedef enum {os_init=0, os_reset=1, os_write_cache=2, os_idle=3, os_read_pending=4, os_write_pending=5, os_read_ack_succ=6, os_read_ack_fail=7, os_write_ack_succ=8, os_write_ack_fail=9, os_error=10} state_osState_enum;
`define os_init           0
`define os_reset          1
`define os_write_cache    2
`define os_idle           3
`define os_read_pending   4
`define os_write_pending  5
`define os_read_ack_succ  6
`define os_read_ack_fail  7
`define os_write_ack_succ 8
`define os_write_ack_fail 9
`define os_error          10

module ide_hard_drive_controller_2(
        o_err,
        i_clk,
        i_osReqType_conc,
        i_reqLBA0_abs,
        i_reqLBA1_abs,
        i_reqLBA2_abs,
        i_reqLBA3_abs,
        i_reqLBA4_abs,
        i_reqLBA5_abs,
        i_reqSect0_abs,
        i_reqSect1_abs,
        i_reqBuf_abs,
        i_transSuccess_conc,
        controllable_tag_conc,
        controllable_bank_abs,
        controllable_addr_abs,
        controllable_write8_val_abs,
        controllable_fillPrdAddr_abs,
        controllable_fillPrdNSect_abs,
        controllable_featWCClass_conc,
        controllable_featNWCClass_conc,
        controllable_featXFRClass_conc,
        controllable_busMasterClass_conc,
        controllable_dmaStartClass_conc );

input i_clk;
input i_osReqType_conc ;
input [`WIDTH1:0] i_reqLBA0_abs ;
input [`WIDTH1:0] i_reqLBA1_abs ;
input [`WIDTH1:0] i_reqLBA2_abs ;
input [`WIDTH1:0] i_reqLBA3_abs ;
input [`WIDTH1:0] i_reqLBA4_abs ;
input [`WIDTH1:0] i_reqLBA5_abs ;
input [`WIDTH1:0] i_reqSect0_abs ;
input [`WIDTH1:0] i_reqSect1_abs ;
input [`WIDTH2:0] i_reqBuf_abs ;
input i_transSuccess_conc ;
input [3:0] controllable_tag_conc ;
input controllable_bank_abs ;
input [2:0] controllable_addr_abs ;
input [`WIDTH1:0] controllable_write8_val_abs ;
input [`WIDTH2:0] controllable_fillPrdAddr_abs ;
input [5:0] controllable_fillPrdNSect_abs ;
input controllable_featWCClass_conc ;
input controllable_featNWCClass_conc ;
input controllable_featXFRClass_conc ;
input controllable_busMasterClass_conc ;
input controllable_dmaStartClass_conc ;
output o_err;

reg [1:0] state_stDMACmd_conc ;
reg [2:0] state_setFeatState_conc ;
reg [1:0] state_regFeature0_abs ;
reg [`WIDTH1:0] state_regSectors0_abs ;
reg [`WIDTH1:0] state_regSectors1_abs ;
reg [`WIDTH1:0] state_regLBALow0_abs ;
reg [`WIDTH1:0] state_regLBALow1_abs ;
reg [`WIDTH1:0] state_regLBAMid0_abs ;
reg [`WIDTH1:0] state_regLBAMid1_abs ;
reg [`WIDTH1:0] state_regLBAHigh0_abs ;
reg [`WIDTH1:0] state_regLBAHigh1_abs ;
reg state_regDev_LBA_abs ;
reg [`WIDTH1:0] state_regCommand_abs ;
reg state_regBMCommand_Start_abs ;
reg state_regBMCommand_RW_abs ;
reg [`WIDTH2:0] state_bufAddr_abs ;
reg [5:0] state_bufSectors_abs ;

reg [3:0] state_osState_conc ;
reg [`WIDTH1:0] state_os_lba0_abs ;
reg [`WIDTH1:0] state_os_lba1_abs ;
reg [`WIDTH1:0] state_os_lba2_abs ;
reg [`WIDTH1:0] state_os_lba3_abs ;
reg [`WIDTH1:0] state_os_lba4_abs ;
reg [`WIDTH1:0] state_os_lba5_abs ;
reg [`WIDTH1:0] state_os_sect0_abs ;
reg [`WIDTH1:0] state_os_sect1_abs ;
reg [`WIDTH2:0] state_os_buf_abs ;

reg [3:0] fair_cnt;

wire transferMode3;
wire nwc;
wire bm_event;
wire transferCorrect;
wire transferCorrect_0;
wire transferCorrect_1;
wire buechi_satisfied;
wire [1:0] next_state_stDMACmd_conc ;
wire [2:0] next_state_setFeatState_conc ;
wire [1:0] next_state_regFeature0_abs ;
wire [`WIDTH1:0] next_state_regSectors0_abs ;
wire [`WIDTH1:0] next_state_regSectors1_abs ;
wire [`WIDTH1:0] next_state_regLBALow0_abs ;
wire [`WIDTH1:0] next_state_regLBALow1_abs ;
wire [`WIDTH1:0] next_state_regLBAMid0_abs ;
wire [`WIDTH1:0] next_state_regLBAMid1_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh0_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh1_abs ;
wire next_state_regDev_LBA_abs ;
wire [`WIDTH1:0] next_state_regCommand_abs ;
wire next_state_regBMCommand_Start_abs ;
wire next_state_regBMCommand_RW_abs ;
wire [`WIDTH2:0] next_state_bufAddr_abs ;
wire [5:0] next_state_bufSectors_abs ;

wire [3:0] next_state_osState_conc ;
wire [`WIDTH1:0] next_state_os_lba0_abs ;
wire [`WIDTH1:0] next_state_os_lba1_abs ;
wire [`WIDTH1:0] next_state_os_lba2_abs ;
wire [`WIDTH1:0] next_state_os_lba3_abs ;
wire [`WIDTH1:0] next_state_os_lba4_abs ;
wire [`WIDTH1:0] next_state_os_lba5_abs ;
wire [`WIDTH1:0] next_state_os_sect0_abs ;
wire [`WIDTH1:0] next_state_os_sect1_abs ;
wire [`WIDTH2:0] next_state_os_buf_abs ;

// some abbreviations:
assign transferMode3 = (state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1);
assign nwc =           (state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1);
assign bm_event = (state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1);
assign transferCorrect = (state_os_lba0_abs==state_regLBALow0_abs    &&
                          state_os_lba1_abs==state_regLBALow1_abs    &&
                          state_os_lba2_abs==state_regLBAMid0_abs    &&
                          state_os_lba3_abs==state_regLBAMid1_abs    &&
                          state_os_lba4_abs==state_regLBAHigh0_abs   &&
                          state_os_lba5_abs==state_regLBAHigh1_abs   &&
                          state_os_sect0_abs==state_regSectors0_abs  &&
                          state_os_sect1_abs==state_regSectors1_abs  &&
                          state_os_buf_abs==state_bufAddr_abs);
assign transferCorrect_0 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==0);
assign transferCorrect_1 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==1);


// state updates:
  //Device state updates:
assign next_state_regFeature0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_FEATURE0) ? controllable_write8_val_abs  : state_regFeature0_abs;
assign next_state_regSectors0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? controllable_write8_val_abs  : state_regSectors0_abs;
assign next_state_regSectors1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? state_regSectors0_abs : state_regSectors1_abs;
assign next_state_regLBALow0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? controllable_write8_val_abs  : state_regLBALow0_abs;
assign next_state_regLBALow1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? state_regLBALow0_abs  : state_regLBALow1_abs;
assign next_state_regLBAMid0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? controllable_write8_val_abs  : state_regLBAMid0_abs;
assign next_state_regLBAMid1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? state_regLBAMid0_abs  : state_regLBAMid1_abs;
assign next_state_regLBAHigh0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? controllable_write8_val_abs  : state_regLBAHigh0_abs;
assign next_state_regLBAHigh1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? state_regLBAHigh0_abs : state_regLBAHigh1_abs;
assign next_state_regDev_LBA_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_DEV)      ? controllable_write8_val_abs[2:2] : state_regDev_LBA_abs;
assign next_state_regCommand_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_ERRCMD)   ? controllable_write8_val_abs  : state_regCommand_abs;
assign next_state_regBMCommand_Start_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[0:0] : state_regBMCommand_Start_abs;
assign next_state_regBMCommand_RW_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[1:1] : state_regBMCommand_RW_abs;
assign next_state_bufAddr_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdAddr_abs : state_bufAddr_abs;
assign next_state_bufSectors_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdNSect_abs : state_bufSectors_abs;

assign next_state_setFeatState_conc = (controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_WC) ? `setFeatWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_NWC) ? `setFeatNWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE && state_regSectors0_abs==`XM_ULTRA_DMA) ? `setFeatXFR0 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE) ? `setFeatXFR1 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatWC   && controllable_featWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR0 && controllable_featXFRClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1) ? `setFeatIdle : state_setFeatState_conc)))))));

assign next_state_stDMACmd_conc = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ?
               (
                 (state_regBMCommand_Start_abs==0 && controllable_write8_val_abs[0:0]==1) ? `bm_read_prd : state_stDMACmd_conc
               ) :
               (
                 (state_stDMACmd_conc==`bm_read_prd) ?
                 (((state_regBMCommand_RW_abs == 1 && state_regCommand_abs != `CMD_READ_DMA_EXT) || (state_regBMCommand_RW_abs == 0 && state_regCommand_abs != `CMD_WRITE_DMA_EXT) || (state_regSectors0_abs != state_bufSectors_abs[`WIDTH1:0]) || (state_regSectors1_abs != state_bufSectors_abs[5:3]) || state_regDev_LBA_abs != 1) ? state_stDMACmd_conc : ((controllable_dmaStartClass_conc==1) ? `bm_ready : state_stDMACmd_conc)) :
                 ((state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1) ? `wait_bm_ready : state_stDMACmd_conc)
               );

//OS state updates
assign next_state_os_lba0_abs = (controllable_tag_conc==`os_req) ? i_reqLBA0_abs : state_os_lba0_abs;
assign next_state_os_lba1_abs = (controllable_tag_conc==`os_req) ? i_reqLBA1_abs : state_os_lba1_abs;
assign next_state_os_lba2_abs = (controllable_tag_conc==`os_req) ? i_reqLBA2_abs : state_os_lba2_abs;
assign next_state_os_lba3_abs = (controllable_tag_conc==`os_req) ? i_reqLBA3_abs : state_os_lba3_abs;
assign next_state_os_lba4_abs = (controllable_tag_conc==`os_req) ? i_reqLBA4_abs : state_os_lba4_abs;
assign next_state_os_lba5_abs = (controllable_tag_conc==`os_req) ? i_reqLBA5_abs : state_os_lba5_abs;
assign next_state_os_sect0_abs = (controllable_tag_conc==`os_req) ? i_reqSect0_abs : state_os_sect0_abs;
assign next_state_os_sect1_abs = (controllable_tag_conc==`os_req) ? i_reqSect1_abs : state_os_sect1_abs;
assign next_state_os_buf_abs = (controllable_tag_conc==`os_req) ? i_reqBuf_abs : state_os_buf_abs;

assign next_state_osState_conc = (state_osState_conc==`os_init && controllable_tag_conc==`reset) ? `os_reset :
      ((state_osState_conc==`os_reset && nwc && controllable_tag_conc==`class_event) ? `os_write_cache :
      ((state_osState_conc==`os_write_cache && transferMode3 && controllable_tag_conc==`class_event) ? `os_idle :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`read) ? `os_read_pending :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`write) ? `os_write_pending :
      ((state_osState_conc==`os_read_pending && bm_event && !transferCorrect_0 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_read_ack_succ :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_read_ack_fail :
      ((state_osState_conc==`os_write_pending && bm_event && !transferCorrect_1 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_write_ack_succ :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_write_ack_fail :
      ((state_osState_conc==`os_read_ack_succ && controllable_tag_conc==`ack_read_succ) ? `os_idle :
      ((state_osState_conc==`os_read_ack_fail && controllable_tag_conc==`ack_read_fail) ? `os_idle :
      ((state_osState_conc==`os_write_ack_succ && controllable_tag_conc==`ack_write_succ) ? `os_idle :
      ((state_osState_conc==`os_write_ack_fail && controllable_tag_conc==`ack_write_fail) ? `os_idle : state_osState_conc))))))))))))));


// buechi-to-safety construction:                            
assign buechi_satisfied = (state_osState_conc == `os_idle);                          
                            
assign o_err = (fair_cnt >= 10) || controllable_tag_conc >= 10;

initial
 begin
  state_stDMACmd_conc = `wait_bm_ready;
  state_setFeatState_conc = `setFeatIdle;
  state_regFeature0_abs = 0;
  state_regSectors0_abs = 0;
  state_regSectors1_abs = 0;
  state_regLBALow0_abs = 0;
  state_regLBALow1_abs = 0;
  state_regLBAMid0_abs = 0;
  state_regLBAMid1_abs = 0;
  state_regLBAHigh0_abs = 0;
  state_regLBAHigh1_abs = 0;
  state_regDev_LBA_abs = 0;
  state_regCommand_abs = 0;
  state_regBMCommand_Start_abs = 0;
  state_regBMCommand_RW_abs = 0;
  state_bufAddr_abs = 0;
  state_bufSectors_abs = 0;
  state_osState_conc = `os_init;
  state_os_lba0_abs = 0;
  state_os_lba1_abs = 0;
  state_os_lba2_abs = 0;
  state_os_lba3_abs = 0;
  state_os_lba4_abs = 0;
  state_os_lba5_abs = 0;
  state_os_sect0_abs = 0;
  state_os_sect1_abs = 0;
  state_os_buf_abs = 0;
  fair_cnt = 0;
 end

always @(posedge i_clk)
 begin

  if(buechi_satisfied)
   begin
    fair_cnt = 0;
   end
  else
   begin
    fair_cnt = fair_cnt + 1;
   end
 
  //Device state updates:
  state_regFeature0_abs          = next_state_regFeature0_abs ;
  state_regSectors0_abs          = next_state_regSectors0_abs ;
  state_regSectors1_abs          = next_state_regSectors1_abs ;
  state_regLBALow0_abs           = next_state_regLBALow0_abs ;
  state_regLBALow1_abs           = next_state_regLBALow1_abs ;
  state_regLBAMid0_abs           = next_state_regLBAMid0_abs ;
  state_regLBAMid1_abs           = next_state_regLBAMid1_abs ;
  state_regLBAHigh0_abs          = next_state_regLBAHigh0_abs ;
  state_regLBAHigh1_abs          = next_state_regLBAHigh1_abs ;
  state_regDev_LBA_abs           = next_state_regDev_LBA_abs ;
  state_regCommand_abs           = next_state_regCommand_abs ;
  state_regBMCommand_Start_abs   = next_state_regBMCommand_Start_abs ;
  state_regBMCommand_RW_abs      = next_state_regBMCommand_RW_abs ;
  state_bufAddr_abs              = next_state_bufAddr_abs ;
  state_bufSectors_abs           = next_state_bufSectors_abs ;
  state_setFeatState_conc        = next_state_setFeatState_conc ;
  state_stDMACmd_conc            = next_state_stDMACmd_conc ;
  state_os_lba0_abs              = next_state_os_lba0_abs ;
  state_os_lba1_abs              = next_state_os_lba1_abs ;
  state_os_lba2_abs              = next_state_os_lba2_abs ;
  state_os_lba3_abs              = next_state_os_lba3_abs ;
  state_os_lba4_abs              = next_state_os_lba4_abs ;
  state_os_lba5_abs              = next_state_os_lba5_abs ;
  state_os_sect0_abs             = next_state_os_sect0_abs ;
  state_os_sect1_abs             = next_state_os_sect1_abs ;
  state_os_buf_abs               = next_state_os_buf_abs ;
  state_osState_conc             = next_state_osState_conc ;
 end
 
 
endmodule
-------------------------------
#!SYNTCOMP
SOLVED_BY : 1/3 [2015-pre-classification], 0/4 [SYNTCOMP2015-SyntSeq], 1/3 [SYNTCOMP2015-SyntPar], 0/7 [SYNTCOMP2015-RealSeq], 1/4 [SYNTCOMP2015-RealPar]
SOLVED_IN : 1172.88 [2015-pre-classification], 0.0 [SYNTCOMP2015-RealSeq], 0.314687 [SYNTCOMP2015-RealPar]
REF_SIZE : 919
STATUS : realizable
#.

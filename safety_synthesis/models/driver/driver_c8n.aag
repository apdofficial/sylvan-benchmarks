aag 998 52 80 1 866
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106 1
108 351
110 363
112 375
114 391
116 403
118 415
120 427
122 439
124 457
126 469
128 481
130 493
132 505
134 517
136 529
138 541
140 639
142 658
144 676
146 693
148 705
150 717
152 729
154 741
156 753
158 765
160 777
162 789
164 813
166 831
168 849
170 859
172 873
174 895
176 913
178 931
180 1085
182 1113
184 1119
186 1125
188 1131
190 1143
192 1155
194 1167
196 1671
198 1720
200 1758
202 1796
204 1803
206 1809
208 1815
210 1821
212 1827
214 1833
216 1839
218 1845
220 1851
222 1852
224 1860
226 1870
228 1880
230 1891
232 1897
234 1903
236 1909
238 1915
240 1921
242 1931
244 1937
246 1943
248 1949
250 1955
252 1961
254 1967
256 1973
258 1979
260 1985
262 1991
264 1997
325
266 229 106
268 228 106
270 267 106
272 227 106
274 226 106
276 273 106
278 225 106
280 224 106
282 279 106
284 223 106
286 222 106
288 285 106
290 287 281
292 290 275
294 292 270
296 295 271
298 95 93
300 298 97
302 301 96
304 302 299
306 94 92
308 307 299
310 299 97
312 298 96
314 313 311
316 92 91
318 316 308
320 318 314
322 321 305
324 322 296
326 93 91
328 326 95
330 328 97
332 330 54
334 4 3
336 334 7
338 336 332
340 109 106
342 108 106
344 341 106
346 338 8
348 342 339
350 349 347
352 111 106
354 110 106
356 353 106
358 338 10
360 354 339
362 361 359
364 113 106
366 112 106
368 365 106
370 338 12
372 366 339
374 373 371
376 326 94
378 376 97
380 115 106
382 114 106
384 381 106
386 378 28
388 382 379
390 389 387
392 117 106
394 116 106
396 393 106
398 378 30
400 394 379
402 401 399
404 119 106
406 118 106
408 405 106
410 378 32
412 406 379
414 413 411
416 121 106
418 120 106
420 417 106
422 378 14
424 418 379
426 425 423
428 123 106
430 122 106
432 429 106
434 378 16
436 430 379
438 437 435
440 5 2
442 440 7
444 442 332
446 125 106
448 124 106
450 447 106
452 444 8
454 448 445
456 455 453
458 127 106
460 126 106
462 459 106
464 444 10
466 460 445
468 467 465
470 129 106
472 128 106
474 471 106
476 378 68
478 472 379
480 479 477
482 131 106
484 130 106
486 483 106
488 378 70
490 484 379
492 491 489
494 133 106
496 132 106
498 495 106
500 378 72
502 496 379
504 503 501
506 135 106
508 134 106
510 507 106
512 378 34
514 508 379
516 515 513
518 137 106
520 136 106
522 519 106
524 378 36
526 520 379
528 527 525
530 139 106
532 138 106
534 531 106
536 378 38
538 532 379
540 539 537
542 93 90
544 542 95
546 544 96
548 141 106
550 140 106
552 549 106
554 143 106
556 142 106
558 555 106
560 145 106
562 144 106
564 561 106
566 557 551
568 566 563
570 568 546
572 461 450
574 572 570
576 462 449
578 576 570
580 462 450
582 580 570
584 356 344
586 584 368
588 586 582
590 557 552
592 590 563
594 592 546
596 594 88
598 558 551
600 598 563
602 600 546
604 602 98
606 558 552
608 606 563
610 608 546
612 610 56
614 566 564
616 614 546
618 616 56
620 619 550
622 620 613
624 622 605
626 624 597
628 626 583
630 628 589
632 631 589
634 633 579
636 634 575
638 637 575
640 619 556
642 640 613
644 642 605
646 644 597
648 646 583
650 648 589
652 651 589
654 653 579
656 655 579
658 657 575
660 619 562
662 660 613
664 662 605
666 664 597
668 666 583
670 669 583
672 671 589
674 672 579
676 674 575
678 316 95
680 678 97
682 147 106
684 146 106
686 683 106
688 680 74
690 684 681
692 691 689
694 149 106
696 148 106
698 695 106
700 680 76
702 696 681
704 703 701
706 151 106
708 150 106
710 707 106
712 680 78
714 708 681
716 715 713
718 153 106
720 152 106
722 719 106
724 680 80
726 720 681
728 727 725
730 155 106
732 154 106
734 731 106
736 680 82
738 732 681
740 739 737
742 157 106
744 156 106
746 743 106
748 680 84
750 744 681
752 751 749
754 159 106
756 158 106
758 755 106
760 378 48
762 756 379
764 763 761
766 161 106
768 160 106
770 767 106
772 378 50
774 768 379
776 775 773
778 163 106
780 162 106
782 779 106
784 378 52
786 780 379
788 787 785
790 4 2
792 790 7
794 792 332
796 255 106
798 254 106
800 797 106
802 165 106
804 164 106
806 803 106
808 798 794
810 804 795
812 811 809
814 257 106
816 256 106
818 815 106
820 167 106
822 166 106
824 821 106
826 816 794
828 822 795
830 829 827
832 259 106
834 258 106
836 833 106
838 169 106
840 168 106
842 839 106
844 834 794
846 840 795
848 847 845
850 334 6
852 850 332
854 852 12
856 853 12
858 857 855
860 330 55
862 5 3
864 862 7
866 864 860
868 866 8
870 867 8
872 871 869
874 862 6
876 874 332
878 261 106
880 260 106
882 879 106
884 175 106
886 174 106
888 885 106
890 880 876
892 886 877
894 893 891
896 263 106
898 262 106
900 897 106
902 177 106
904 176 106
906 903 106
908 898 876
910 904 877
912 911 909
914 265 106
916 264 106
918 915 106
920 179 106
922 178 106
924 921 106
926 916 876
928 922 877
930 929 927
932 172 106
934 933 8
936 181 106
938 180 106
940 937 106
942 938 935
944 183 106
946 182 106
948 945 106
950 948 939
952 221 106
954 220 106
956 953 106
958 231 106
960 230 106
962 959 106
964 233 106
966 232 106
968 965 106
970 234 106
972 967 962
974 972 971
976 975 956
978 968 961
980 978 971
982 981 955
984 983 977
986 684 345
988 687 342
990 989 987
992 696 357
994 699 354
996 995 993
998 708 369
1000 711 366
1002 1001 999
1004 996 990
1006 1004 1002
1008 1006 984
1010 185 106
1012 184 106
1014 1011 106
1016 1015 720
1018 1012 723
1020 1019 1017
1022 187 106
1024 186 106
1026 1023 106
1028 1027 732
1030 1024 735
1032 1031 1029
1034 189 106
1036 188 106
1038 1035 106
1040 1039 744
1042 1036 747
1044 1043 1041
1046 1032 1020
1048 1046 1044
1050 1048 1008
1052 171 106
1054 1053 106
1056 1054 1050
1058 938 47
1060 1059 47
1062 1057 938
1064 1061 1056
1066 1065 1063
1068 948 940
1070 1068 86
1072 1071 938
1074 1067 950
1076 1072 951
1078 1077 1075
1080 942 866
1082 1079 867
1084 1083 1081
1086 946 935
1088 1087 935
1090 946 47
1092 1091 47
1094 1057 946
1096 1093 1056
1098 1097 1095
1100 1071 946
1102 1099 950
1104 1100 951
1106 1105 1103
1108 1089 866
1110 1107 867
1112 1111 1109
1114 342 338
1116 1012 339
1118 1117 1115
1120 354 338
1122 1024 339
1124 1123 1121
1126 366 338
1128 1036 339
1130 1129 1127
1132 191 106
1134 190 106
1136 1133 106
1138 378 100
1140 1134 379
1142 1141 1139
1144 193 106
1146 192 106
1148 1145 106
1150 378 102
1152 1146 379
1154 1153 1151
1156 195 106
1158 194 106
1160 1157 106
1162 378 104
1164 1158 379
1166 1165 1163
1168 197 106
1170 196 106
1172 1169 106
1174 199 106
1176 198 106
1178 1175 106
1180 201 106
1182 200 106
1184 1181 106
1186 203 106
1188 202 106
1190 1187 106
1192 1177 1171
1194 1192 1183
1196 1194 1189
1198 92 90
1200 1198 95
1202 1200 97
1204 1202 1196
1206 1177 1172
1208 1206 1183
1210 1208 1189
1212 600 98
1214 1212 1210
1216 1214 546
1218 1178 1171
1220 1218 1183
1222 1220 1189
1224 614 56
1226 1224 1222
1228 1226 546
1230 1178 1172
1232 1230 1183
1234 1232 1189
1236 1234 378
1238 1236 67
1240 1236 66
1242 1192 1184
1244 1242 1189
1246 1244 1070
1248 798 511
1250 801 508
1252 1251 1249
1254 816 523
1256 819 520
1258 1257 1255
1260 834 535
1262 837 532
1264 1263 1261
1266 1258 1252
1268 1266 1264
1270 237 106
1272 236 106
1274 1271 106
1276 1275 804
1278 1272 807
1280 1279 1277
1282 239 106
1284 238 106
1286 1283 106
1288 1287 822
1290 1284 825
1292 1291 1289
1294 241 106
1296 240 106
1298 1295 106
1300 1299 840
1302 1296 843
1304 1303 1301
1306 1292 1280
1308 1306 1304
1310 1308 1268
1312 1137 880
1314 1134 883
1316 1315 1313
1318 1149 898
1320 1146 901
1322 1321 1319
1324 1161 916
1326 1158 919
1328 1327 1325
1330 1322 1316
1332 1330 1328
1334 1332 1310
1336 886 385
1338 889 382
1340 1339 1337
1342 904 397
1344 907 394
1346 1345 1343
1348 922 409
1350 925 406
1352 1351 1349
1354 1346 1340
1356 1354 1352
1358 1356 1334
1360 215 106
1362 214 106
1364 1361 106
1366 243 106
1368 242 106
1370 1367 106
1372 1368 1365
1374 1371 1362
1376 1375 1373
1378 217 106
1380 216 106
1382 1379 106
1384 245 106
1386 244 106
1388 1385 106
1390 1386 1383
1392 1389 1380
1394 1393 1391
1396 219 106
1398 218 106
1400 1397 106
1402 247 106
1404 246 106
1406 1403 106
1408 1404 1401
1410 1407 1398
1412 1411 1409
1414 1394 1376
1416 1414 1412
1418 1416 1358
1420 249 106
1422 248 106
1424 1421 106
1426 1422 759
1428 1425 756
1430 1429 1427
1432 251 106
1434 250 106
1436 1433 106
1438 1434 771
1440 1437 768
1442 1441 1439
1444 253 106
1446 252 106
1448 1445 106
1450 1446 783
1452 1449 780
1454 1453 1451
1456 1442 1430
1458 1456 1454
1460 1458 1418
1462 475 342
1464 472 345
1466 1465 1463
1468 487 354
1470 484 357
1472 1471 1469
1474 499 366
1476 496 369
1478 1477 1475
1480 1472 1466
1482 1480 1478
1484 1482 1460
1486 209 106
1488 208 106
1490 1487 106
1492 1491 1012
1494 1488 1015
1496 1495 1493
1498 211 106
1500 210 106
1502 1499 106
1504 1503 1024
1506 1500 1027
1508 1507 1505
1510 213 106
1512 212 106
1514 1511 106
1516 1515 1036
1518 1512 1039
1520 1519 1517
1522 1508 1496
1524 1522 1520
1526 1524 1484
1528 205 106
1530 204 106
1532 1529 106
1534 1530 421
1536 1533 418
1538 1537 1535
1540 207 106
1542 206 106
1544 1541 106
1546 1542 433
1548 1545 430
1550 1549 1547
1552 1550 1538
1554 1552 1526
1556 1554 955
1558 1557 1246
1560 1558 546
1562 1246 58
1564 1562 546
1566 1246 59
1568 1566 546
1570 1206 1184
1572 1570 1189
1574 1572 1070
1576 1554 956
1578 1577 1574
1580 1578 546
1582 1574 58
1584 1582 546
1586 1574 59
1588 1586 546
1590 1218 1184
1592 1590 1189
1594 542 94
1596 1594 97
1598 1596 1592
1600 1230 1184
1602 1600 1189
1604 316 94
1606 1604 97
1608 1606 1602
1610 1194 1190
1612 1198 94
1614 1612 97
1616 1614 1610
1618 1208 1190
1620 328 96
1622 1620 1618
1624 1623 1170
1626 1625 1623
1628 1627 1617
1630 1629 1617
1632 1631 1609
1634 1633 1609
1636 1635 1599
1638 1637 1599
1640 1639 1589
1642 1641 1589
1644 1643 1585
1646 1644 1581
1648 1646 1569
1650 1649 1569
1652 1651 1565
1654 1652 1561
1656 1654 1241
1658 1657 1241
1660 1659 1239
1662 1660 1229
1664 1663 1229
1666 1665 1217
1668 1666 1205
1670 1669 1205
1672 1623 1176
1674 1673 1623
1676 1675 1617
1678 1677 1617
1680 1679 1609
1682 1681 1609
1684 1683 1599
1686 1685 1599
1688 1687 1589
1690 1688 1585
1692 1690 1581
1694 1693 1581
1696 1695 1569
1698 1697 1569
1700 1699 1565
1702 1701 1565
1704 1703 1561
1706 1705 1561
1708 1707 1241
1710 1708 1239
1712 1710 1229
1714 1713 1229
1716 1715 1217
1718 1717 1217
1720 1719 1205
1722 1623 1182
1724 1722 1617
1726 1724 1609
1728 1726 1599
1730 1728 1589
1732 1730 1585
1734 1732 1581
1736 1734 1569
1738 1737 1569
1740 1739 1565
1742 1741 1565
1744 1743 1561
1746 1744 1241
1748 1747 1241
1750 1749 1239
1752 1751 1239
1754 1753 1229
1756 1754 1217
1758 1756 1205
1760 1623 1188
1762 1760 1617
1764 1762 1609
1766 1764 1599
1768 1766 1589
1770 1769 1589
1772 1771 1585
1774 1773 1585
1776 1775 1581
1778 1777 1581
1780 1779 1569
1782 1780 1565
1784 1782 1561
1786 1785 1561
1788 1787 1241
1790 1788 1239
1792 1790 1229
1794 1792 1217
1796 1794 1205
1798 680 24
1800 1530 681
1802 1801 1799
1804 680 26
1806 1542 681
1808 1807 1805
1810 378 60
1812 1488 379
1814 1813 1811
1816 378 62
1818 1500 379
1820 1819 1817
1822 378 64
1824 1512 379
1826 1825 1823
1828 378 40
1830 1362 379
1832 1831 1829
1834 378 42
1836 1380 379
1838 1837 1835
1840 378 44
1842 1398 379
1844 1843 1841
1846 866 10
1848 867 10
1850 1849 1847
1852 1235 289
1854 286 283
1856 287 280
1858 1857 1855
1860 1859 1235
1862 286 280
1864 1862 277
1866 1863 274
1868 1867 1865
1870 1869 1235
1872 1862 274
1874 1872 271
1876 1873 268
1878 1877 1875
1880 1879 1235
1882 790 6
1884 1882 332
1886 1884 8
1888 1885 960
1890 1889 1887
1892 1884 10
1894 1885 966
1896 1895 1893
1898 1884 12
1900 1885 970
1902 1901 1899
1904 378 18
1906 1272 379
1908 1907 1905
1910 378 20
1912 1284 379
1914 1913 1911
1916 378 22
1918 1296 379
1920 1919 1917
1922 440 6
1924 1922 332
1926 1924 8
1928 1925 1368
1930 1929 1927
1932 1924 10
1934 1925 1386
1936 1935 1933
1938 1924 12
1940 1925 1404
1942 1941 1939
1944 1924 1368
1946 1925 1422
1948 1947 1945
1950 1924 1386
1952 1925 1434
1954 1953 1951
1956 1924 1404
1958 1925 1446
1960 1959 1957
1962 794 8
1964 798 795
1966 1965 1963
1968 794 10
1970 816 795
1972 1971 1969
1974 794 12
1976 834 795
1978 1977 1975
1980 876 8
1982 880 877
1984 1983 1981
1986 876 10
1988 898 877
1990 1989 1987
1992 876 12
1994 916 877
1996 1995 1993
i0 controllable_addr_abs<0>
i1 controllable_addr_abs<1>
i2 controllable_addr_abs<2>
i3 controllable_write8_val_abs<0>
i4 controllable_write8_val_abs<1>
i5 controllable_write8_val_abs<2>
i6 i_reqBuf_abs<0>
i7 i_reqBuf_abs<1>
i8 i_reqLBA1_abs<0>
i9 i_reqLBA1_abs<1>
i10 i_reqLBA1_abs<2>
i11 controllable_fillPrdAddr_abs<0>
i12 controllable_fillPrdAddr_abs<1>
i13 i_reqLBA3_abs<0>
i14 i_reqLBA3_abs<1>
i15 i_reqLBA3_abs<2>
i16 i_reqLBA0_abs<0>
i17 i_reqLBA0_abs<1>
i18 i_reqLBA0_abs<2>
i19 i_reqLBA4_abs<0>
i20 i_reqLBA4_abs<1>
i21 i_reqLBA4_abs<2>
i22 controllable_dmaStartClass_conc
i23 i_reqLBA5_abs<0>
i24 i_reqLBA5_abs<1>
i25 i_reqLBA5_abs<2>
i26 controllable_bank_abs
i27 controllable_featXFRClass_conc
i28 i_transSuccess_conc
i29 i_reqSect1_abs<0>
i30 i_reqSect1_abs<1>
i31 i_reqSect1_abs<2>
i32 i_osReqType_conc
i33 i_reqSect0_abs<0>
i34 i_reqSect0_abs<1>
i35 i_reqSect0_abs<2>
i36 controllable_fillPrdNSect_abs<0>
i37 controllable_fillPrdNSect_abs<1>
i38 controllable_fillPrdNSect_abs<2>
i39 controllable_fillPrdNSect_abs<3>
i40 controllable_fillPrdNSect_abs<4>
i41 controllable_fillPrdNSect_abs<5>
i42 controllable_busMasterClass_conc
i43 controllable_featWCClass_conc
i44 controllable_tag_conc<0>
i45 controllable_tag_conc<1>
i46 controllable_tag_conc<2>
i47 controllable_tag_conc<3>
i48 controllable_featNWCClass_conc
i49 i_reqLBA2_abs<0>
i50 i_reqLBA2_abs<1>
i51 i_reqLBA2_abs<2>
l0 n107
l1 state_regSectors0_abs<0>_out
l2 state_regSectors0_abs<1>_out
l3 state_regSectors0_abs<2>_out
l4 state_os_lba3_abs<0>_out
l5 state_os_lba3_abs<1>_out
l6 state_os_lba3_abs<2>_out
l7 state_os_buf_abs<0>_out
l8 state_os_buf_abs<1>_out
l9 state_regFeature0_abs<0>_out
l10 state_regFeature0_abs<1>_out
l11 state_os_sect0_abs<0>_out
l12 state_os_sect0_abs<1>_out
l13 state_os_sect0_abs<2>_out
l14 state_os_lba0_abs<0>_out
l15 state_os_lba0_abs<1>_out
l16 state_os_lba0_abs<2>_out
l17 state_setFeatState_conc<0>_out
l18 state_setFeatState_conc<1>_out
l19 state_setFeatState_conc<2>_out
l20 state_bufSectors_abs<0>_out
l21 state_bufSectors_abs<1>_out
l22 state_bufSectors_abs<2>_out
l23 state_bufSectors_abs<3>_out
l24 state_bufSectors_abs<4>_out
l25 state_bufSectors_abs<5>_out
l26 state_os_lba5_abs<0>_out
l27 state_os_lba5_abs<1>_out
l28 state_os_lba5_abs<2>_out
l29 state_regLBALow1_abs<0>_out
l30 state_regLBALow1_abs<1>_out
l31 state_regLBALow1_abs<2>_out
l32 state_regDev_LBA_abs_out
l33 state_regBMCommand_Start_abs_out
l34 state_regLBAMid1_abs<0>_out
l35 state_regLBAMid1_abs<1>_out
l36 state_regLBAMid1_abs<2>_out
l37 state_stDMACmd_conc<0>_out
l38 state_stDMACmd_conc<1>_out
l39 state_regSectors1_abs<0>_out
l40 state_regSectors1_abs<1>_out
l41 state_regSectors1_abs<2>_out
l42 state_os_lba2_abs<0>_out
l43 state_os_lba2_abs<1>_out
l44 state_os_lba2_abs<2>_out
l45 state_osState_conc<0>_out
l46 state_osState_conc<1>_out
l47 state_osState_conc<2>_out
l48 state_osState_conc<3>_out
l49 state_bufAddr_abs<0>_out
l50 state_bufAddr_abs<1>_out
l51 state_os_sect1_abs<0>_out
l52 state_os_sect1_abs<1>_out
l53 state_os_sect1_abs<2>_out
l54 state_os_lba4_abs<0>_out
l55 state_os_lba4_abs<1>_out
l56 state_os_lba4_abs<2>_out
l57 state_regBMCommand_RW_abs_out
l58 fair_cnt<0>_out
l59 fair_cnt<1>_out
l60 fair_cnt<2>_out
l61 fair_cnt<3>_out
l62 state_regCommand_abs<0>_out
l63 state_regCommand_abs<1>_out
l64 state_regCommand_abs<2>_out
l65 state_os_lba1_abs<0>_out
l66 state_os_lba1_abs<1>_out
l67 state_os_lba1_abs<2>_out
l68 state_regLBAHigh0_abs<0>_out
l69 state_regLBAHigh0_abs<1>_out
l70 state_regLBAHigh0_abs<2>_out
l71 state_regLBAHigh1_abs<0>_out
l72 state_regLBAHigh1_abs<1>_out
l73 state_regLBAHigh1_abs<2>_out
l74 state_regLBALow0_abs<0>_out
l75 state_regLBALow0_abs<1>_out
l76 state_regLBALow0_abs<2>_out
l77 state_regLBAMid0_abs<0>_out
l78 state_regLBAMid0_abs<1>_out
l79 state_regLBAMid0_abs<2>_out
o0 o_err
c
ide_hard_drive_controller_2
This file was written by ABC on Tue Mar 11 20:24:23 2014
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv driver_c8.v   ---gives--> driver_c8.mv
> abc -c "read_blif_mv driver_c8.mv; write_aiger -s driver_c8n.aig"   ---gives--> driver_c8n.aig
> aigtoaig driver_c8n.aig driver_c8n.aag   ---gives--> driver_c8n.aag (this file)
Content of driver_c8.v:
// IDE hard drive controller specification and operating system interface
// specification for device driver synthesis.
// This file describes a GR(1) game played by a device driver for an IDE hard
// disk against its environment consisting of the hard disk and operating
// system.

`define WIDTH1 2
`define WIDTH2 1

`define CMD_READ_DMA_EXT  1
`define CMD_WRITE_DMA_EXT 2
`define FEAT_WC           1
`define FEAT_NWC          2
`define FEAT_XFR_MODE     3
`define XM_ULTRA_DMA      7

`define RCMD              1
`define REG_FEATURE0      1
`define REG_SECTORS       2
`define REG_LBA_LOW       3
`define REG_LBA_MID       4
`define REG_LBA_HIGH      5
`define REG_DEV           6
`define REG_ERRCMD        7

`define RDMA              0
`define REG_BM_COMMAND    0

//typedef enum {read=0, write=1} i_osReqType_enum;
`define read              0
`define write             1

//typedef enum {write8, write32, fillPrd, reset, os_req, ack_read_succ, ack_read_fail, ack_write_succ, ack_write_fail, class_event} controllable_tag_enum;
`define write8            0
`define write32           1
`define fillPrd           2
`define reset             3
`define os_req            4
`define ack_read_succ     5
`define ack_read_fail     6
`define ack_write_succ    7
`define ack_write_fail    8
`define class_event       9

//typedef enum {wait_bm_ready=0, dma_read=1, bm_read_prd=2, bm_ready=3} state_stDMACmd_enum;
`define wait_bm_ready     0
`define dma_read          1
`define bm_read_prd       2
`define bm_ready          3


//typedef enum {setFeatIdle=0, setFeatWC=1, setFeatNWC=2, setFeatXFR0=3, setFeatXFR1=4} state_setFeatState_enum;
`define setFeatIdle       0
`define setFeatWC         1
`define setFeatNWC        2
`define setFeatXFR0       3
`define setFeatXFR1       4

//typedef enum {os_init=0, os_reset=1, os_write_cache=2, os_idle=3, os_read_pending=4, os_write_pending=5, os_read_ack_succ=6, os_read_ack_fail=7, os_write_ack_succ=8, os_write_ack_fail=9, os_error=10} state_osState_enum;
`define os_init           0
`define os_reset          1
`define os_write_cache    2
`define os_idle           3
`define os_read_pending   4
`define os_write_pending  5
`define os_read_ack_succ  6
`define os_read_ack_fail  7
`define os_write_ack_succ 8
`define os_write_ack_fail 9
`define os_error          10

module ide_hard_drive_controller_2(
        o_err,
        i_clk,
        i_osReqType_conc,
        i_reqLBA0_abs,
        i_reqLBA1_abs,
        i_reqLBA2_abs,
        i_reqLBA3_abs,
        i_reqLBA4_abs,
        i_reqLBA5_abs,
        i_reqSect0_abs,
        i_reqSect1_abs,
        i_reqBuf_abs,
        i_transSuccess_conc,
        controllable_tag_conc,
        controllable_bank_abs,
        controllable_addr_abs,
        controllable_write8_val_abs,
        controllable_fillPrdAddr_abs,
        controllable_fillPrdNSect_abs,
        controllable_featWCClass_conc,
        controllable_featNWCClass_conc,
        controllable_featXFRClass_conc,
        controllable_busMasterClass_conc,
        controllable_dmaStartClass_conc );

input i_clk;
input i_osReqType_conc ;
input [`WIDTH1:0] i_reqLBA0_abs ;
input [`WIDTH1:0] i_reqLBA1_abs ;
input [`WIDTH1:0] i_reqLBA2_abs ;
input [`WIDTH1:0] i_reqLBA3_abs ;
input [`WIDTH1:0] i_reqLBA4_abs ;
input [`WIDTH1:0] i_reqLBA5_abs ;
input [`WIDTH1:0] i_reqSect0_abs ;
input [`WIDTH1:0] i_reqSect1_abs ;
input [`WIDTH2:0] i_reqBuf_abs ;
input i_transSuccess_conc ;
input [3:0] controllable_tag_conc ;
input controllable_bank_abs ;
input [2:0] controllable_addr_abs ;
input [`WIDTH1:0] controllable_write8_val_abs ;
input [`WIDTH2:0] controllable_fillPrdAddr_abs ;
input [5:0] controllable_fillPrdNSect_abs ;
input controllable_featWCClass_conc ;
input controllable_featNWCClass_conc ;
input controllable_featXFRClass_conc ;
input controllable_busMasterClass_conc ;
input controllable_dmaStartClass_conc ;
output o_err;

reg [1:0] state_stDMACmd_conc ;
reg [2:0] state_setFeatState_conc ;
reg [1:0] state_regFeature0_abs ;
reg [`WIDTH1:0] state_regSectors0_abs ;
reg [`WIDTH1:0] state_regSectors1_abs ;
reg [`WIDTH1:0] state_regLBALow0_abs ;
reg [`WIDTH1:0] state_regLBALow1_abs ;
reg [`WIDTH1:0] state_regLBAMid0_abs ;
reg [`WIDTH1:0] state_regLBAMid1_abs ;
reg [`WIDTH1:0] state_regLBAHigh0_abs ;
reg [`WIDTH1:0] state_regLBAHigh1_abs ;
reg state_regDev_LBA_abs ;
reg [`WIDTH1:0] state_regCommand_abs ;
reg state_regBMCommand_Start_abs ;
reg state_regBMCommand_RW_abs ;
reg [`WIDTH2:0] state_bufAddr_abs ;
reg [5:0] state_bufSectors_abs ;

reg [3:0] state_osState_conc ;
reg [`WIDTH1:0] state_os_lba0_abs ;
reg [`WIDTH1:0] state_os_lba1_abs ;
reg [`WIDTH1:0] state_os_lba2_abs ;
reg [`WIDTH1:0] state_os_lba3_abs ;
reg [`WIDTH1:0] state_os_lba4_abs ;
reg [`WIDTH1:0] state_os_lba5_abs ;
reg [`WIDTH1:0] state_os_sect0_abs ;
reg [`WIDTH1:0] state_os_sect1_abs ;
reg [`WIDTH2:0] state_os_buf_abs ;

reg [3:0] fair_cnt;

wire transferMode3;
wire nwc;
wire bm_event;
wire transferCorrect;
wire transferCorrect_0;
wire transferCorrect_1;
wire buechi_satisfied;
wire [1:0] next_state_stDMACmd_conc ;
wire [2:0] next_state_setFeatState_conc ;
wire [1:0] next_state_regFeature0_abs ;
wire [`WIDTH1:0] next_state_regSectors0_abs ;
wire [`WIDTH1:0] next_state_regSectors1_abs ;
wire [`WIDTH1:0] next_state_regLBALow0_abs ;
wire [`WIDTH1:0] next_state_regLBALow1_abs ;
wire [`WIDTH1:0] next_state_regLBAMid0_abs ;
wire [`WIDTH1:0] next_state_regLBAMid1_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh0_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh1_abs ;
wire next_state_regDev_LBA_abs ;
wire [`WIDTH1:0] next_state_regCommand_abs ;
wire next_state_regBMCommand_Start_abs ;
wire next_state_regBMCommand_RW_abs ;
wire [`WIDTH2:0] next_state_bufAddr_abs ;
wire [5:0] next_state_bufSectors_abs ;

wire [3:0] next_state_osState_conc ;
wire [`WIDTH1:0] next_state_os_lba0_abs ;
wire [`WIDTH1:0] next_state_os_lba1_abs ;
wire [`WIDTH1:0] next_state_os_lba2_abs ;
wire [`WIDTH1:0] next_state_os_lba3_abs ;
wire [`WIDTH1:0] next_state_os_lba4_abs ;
wire [`WIDTH1:0] next_state_os_lba5_abs ;
wire [`WIDTH1:0] next_state_os_sect0_abs ;
wire [`WIDTH1:0] next_state_os_sect1_abs ;
wire [`WIDTH2:0] next_state_os_buf_abs ;

// some abbreviations:
assign transferMode3 = (state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1);
assign nwc =           (state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1);
assign bm_event = (state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1);
assign transferCorrect = (state_os_lba0_abs==state_regLBALow0_abs    &&
                          state_os_lba1_abs==state_regLBALow1_abs    &&
                          state_os_lba2_abs==state_regLBAMid0_abs    &&
                          state_os_lba3_abs==state_regLBAMid1_abs    &&
                          state_os_lba4_abs==state_regLBAHigh0_abs   &&
                          state_os_lba5_abs==state_regLBAHigh1_abs   &&
                          state_os_sect0_abs==state_regSectors0_abs  &&
                          state_os_sect1_abs==state_regSectors1_abs  &&
                          state_os_buf_abs==state_bufAddr_abs);
assign transferCorrect_0 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==0);
assign transferCorrect_1 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==1);


// state updates:
  //Device state updates:
assign next_state_regFeature0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_FEATURE0) ? controllable_write8_val_abs  : state_regFeature0_abs;
assign next_state_regSectors0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? controllable_write8_val_abs  : state_regSectors0_abs;
assign next_state_regSectors1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? state_regSectors0_abs : state_regSectors1_abs;
assign next_state_regLBALow0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? controllable_write8_val_abs  : state_regLBALow0_abs;
assign next_state_regLBALow1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? state_regLBALow0_abs  : state_regLBALow1_abs;
assign next_state_regLBAMid0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? controllable_write8_val_abs  : state_regLBAMid0_abs;
assign next_state_regLBAMid1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? state_regLBAMid0_abs  : state_regLBAMid1_abs;
assign next_state_regLBAHigh0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? controllable_write8_val_abs  : state_regLBAHigh0_abs;
assign next_state_regLBAHigh1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? state_regLBAHigh0_abs : state_regLBAHigh1_abs;
assign next_state_regDev_LBA_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_DEV)      ? controllable_write8_val_abs[2:2] : state_regDev_LBA_abs;
assign next_state_regCommand_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_ERRCMD)   ? controllable_write8_val_abs  : state_regCommand_abs;
assign next_state_regBMCommand_Start_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[0:0] : state_regBMCommand_Start_abs;
assign next_state_regBMCommand_RW_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[1:1] : state_regBMCommand_RW_abs;
assign next_state_bufAddr_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdAddr_abs : state_bufAddr_abs;
assign next_state_bufSectors_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdNSect_abs : state_bufSectors_abs;

assign next_state_setFeatState_conc = (controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_WC) ? `setFeatWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_NWC) ? `setFeatNWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE && state_regSectors0_abs==`XM_ULTRA_DMA) ? `setFeatXFR0 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE) ? `setFeatXFR1 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatWC   && controllable_featWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR0 && controllable_featXFRClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1) ? `setFeatIdle : state_setFeatState_conc)))))));

assign next_state_stDMACmd_conc = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ?
               (
                 (state_regBMCommand_Start_abs==0 && controllable_write8_val_abs[0:0]==1) ? `bm_read_prd : state_stDMACmd_conc
               ) :
               (
                 (state_stDMACmd_conc==`bm_read_prd) ?
                 (((state_regBMCommand_RW_abs == 1 && state_regCommand_abs != `CMD_READ_DMA_EXT) || (state_regBMCommand_RW_abs == 0 && state_regCommand_abs != `CMD_WRITE_DMA_EXT) || (state_regSectors0_abs != state_bufSectors_abs[`WIDTH1:0]) || (state_regSectors1_abs != state_bufSectors_abs[5:3]) || state_regDev_LBA_abs != 1) ? state_stDMACmd_conc : ((controllable_dmaStartClass_conc==1) ? `bm_ready : state_stDMACmd_conc)) :
                 ((state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1) ? `wait_bm_ready : state_stDMACmd_conc)
               );

//OS state updates
assign next_state_os_lba0_abs = (controllable_tag_conc==`os_req) ? i_reqLBA0_abs : state_os_lba0_abs;
assign next_state_os_lba1_abs = (controllable_tag_conc==`os_req) ? i_reqLBA1_abs : state_os_lba1_abs;
assign next_state_os_lba2_abs = (controllable_tag_conc==`os_req) ? i_reqLBA2_abs : state_os_lba2_abs;
assign next_state_os_lba3_abs = (controllable_tag_conc==`os_req) ? i_reqLBA3_abs : state_os_lba3_abs;
assign next_state_os_lba4_abs = (controllable_tag_conc==`os_req) ? i_reqLBA4_abs : state_os_lba4_abs;
assign next_state_os_lba5_abs = (controllable_tag_conc==`os_req) ? i_reqLBA5_abs : state_os_lba5_abs;
assign next_state_os_sect0_abs = (controllable_tag_conc==`os_req) ? i_reqSect0_abs : state_os_sect0_abs;
assign next_state_os_sect1_abs = (controllable_tag_conc==`os_req) ? i_reqSect1_abs : state_os_sect1_abs;
assign next_state_os_buf_abs = (controllable_tag_conc==`os_req) ? i_reqBuf_abs : state_os_buf_abs;

assign next_state_osState_conc = (state_osState_conc==`os_init && controllable_tag_conc==`reset) ? `os_reset :
      ((state_osState_conc==`os_reset && nwc && controllable_tag_conc==`class_event) ? `os_write_cache :
      ((state_osState_conc==`os_write_cache && transferMode3 && controllable_tag_conc==`class_event) ? `os_idle :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`read) ? `os_read_pending :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`write) ? `os_write_pending :
      ((state_osState_conc==`os_read_pending && bm_event && !transferCorrect_0 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_read_ack_succ :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_read_ack_fail :
      ((state_osState_conc==`os_write_pending && bm_event && !transferCorrect_1 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_write_ack_succ :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_write_ack_fail :
      ((state_osState_conc==`os_read_ack_succ && controllable_tag_conc==`ack_read_succ) ? `os_idle :
      ((state_osState_conc==`os_read_ack_fail && controllable_tag_conc==`ack_read_fail) ? `os_idle :
      ((state_osState_conc==`os_write_ack_succ && controllable_tag_conc==`ack_write_succ) ? `os_idle :
      ((state_osState_conc==`os_write_ack_fail && controllable_tag_conc==`ack_write_fail) ? `os_idle : state_osState_conc))))))))))))));


// buechi-to-safety construction:                            
assign buechi_satisfied = (state_osState_conc == `os_idle);                          
                            
assign o_err = (fair_cnt >= 8) || controllable_tag_conc >= 10;

initial
 begin
  state_stDMACmd_conc = `wait_bm_ready;
  state_setFeatState_conc = `setFeatIdle;
  state_regFeature0_abs = 0;
  state_regSectors0_abs = 0;
  state_regSectors1_abs = 0;
  state_regLBALow0_abs = 0;
  state_regLBALow1_abs = 0;
  state_regLBAMid0_abs = 0;
  state_regLBAMid1_abs = 0;
  state_regLBAHigh0_abs = 0;
  state_regLBAHigh1_abs = 0;
  state_regDev_LBA_abs = 0;
  state_regCommand_abs = 0;
  state_regBMCommand_Start_abs = 0;
  state_regBMCommand_RW_abs = 0;
  state_bufAddr_abs = 0;
  state_bufSectors_abs = 0;
  state_osState_conc = `os_init;
  state_os_lba0_abs = 0;
  state_os_lba1_abs = 0;
  state_os_lba2_abs = 0;
  state_os_lba3_abs = 0;
  state_os_lba4_abs = 0;
  state_os_lba5_abs = 0;
  state_os_sect0_abs = 0;
  state_os_sect1_abs = 0;
  state_os_buf_abs = 0;
  fair_cnt = 0;
 end

always @(posedge i_clk)
 begin

  if(buechi_satisfied)
   begin
    fair_cnt = 0;
   end
  else
   begin
    fair_cnt = fair_cnt + 1;
   end
 
  //Device state updates:
  state_regFeature0_abs          = next_state_regFeature0_abs ;
  state_regSectors0_abs          = next_state_regSectors0_abs ;
  state_regSectors1_abs          = next_state_regSectors1_abs ;
  state_regLBALow0_abs           = next_state_regLBALow0_abs ;
  state_regLBALow1_abs           = next_state_regLBALow1_abs ;
  state_regLBAMid0_abs           = next_state_regLBAMid0_abs ;
  state_regLBAMid1_abs           = next_state_regLBAMid1_abs ;
  state_regLBAHigh0_abs          = next_state_regLBAHigh0_abs ;
  state_regLBAHigh1_abs          = next_state_regLBAHigh1_abs ;
  state_regDev_LBA_abs           = next_state_regDev_LBA_abs ;
  state_regCommand_abs           = next_state_regCommand_abs ;
  state_regBMCommand_Start_abs   = next_state_regBMCommand_Start_abs ;
  state_regBMCommand_RW_abs      = next_state_regBMCommand_RW_abs ;
  state_bufAddr_abs              = next_state_bufAddr_abs ;
  state_bufSectors_abs           = next_state_bufSectors_abs ;
  state_setFeatState_conc        = next_state_setFeatState_conc ;
  state_stDMACmd_conc            = next_state_stDMACmd_conc ;
  state_os_lba0_abs              = next_state_os_lba0_abs ;
  state_os_lba1_abs              = next_state_os_lba1_abs ;
  state_os_lba2_abs              = next_state_os_lba2_abs ;
  state_os_lba3_abs              = next_state_os_lba3_abs ;
  state_os_lba4_abs              = next_state_os_lba4_abs ;
  state_os_lba5_abs              = next_state_os_lba5_abs ;
  state_os_sect0_abs             = next_state_os_sect0_abs ;
  state_os_sect1_abs             = next_state_os_sect1_abs ;
  state_os_buf_abs               = next_state_os_buf_abs ;
  state_osState_conc             = next_state_osState_conc ;
 end
 
 
endmodule
-------------------------------
#!SYNTCOMP
SOLVED_BY : 1/3 [2015-pre-classification], 0/4 [SYNTCOMP2015-SyntSeq], 1/3 [SYNTCOMP2015-SyntPar], 1/7 [SYNTCOMP2015-RealSeq], 1/4 [SYNTCOMP2015-RealPar]
SOLVED_IN : 3206.81 [2015-pre-classification], 486.108 [SYNTCOMP2015-RealSeq], 0.223733 [SYNTCOMP2015-RealPar]
REF_SIZE : 907
STATUS : realizable
#.

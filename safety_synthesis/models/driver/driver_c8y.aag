aag 720 52 80 1 588
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106 1
108 295
110 303
112 311
114 323
116 331
118 339
120 347
122 355
124 369
126 377
128 385
130 393
132 401
134 409
136 417
138 425
140 495
142 507
144 514
146 529
148 537
150 545
152 553
154 561
156 569
158 577
160 585
162 593
164 609
166 619
168 629
170 12
172 8
174 645
176 655
178 665
180 779
182 791
184 797
186 803
188 809
190 817
192 825
194 833
196 1207
198 1227
200 1237
202 1245
204 1251
206 1257
208 1263
210 1269
212 1275
214 1281
216 1287
218 1293
220 10
222 1296
224 1306
226 1316
228 1324
230 1335
232 1341
234 1347
236 1353
238 1359
240 1365
242 1375
244 1381
246 1387
248 1393
250 1399
252 1405
254 1411
256 1417
258 1423
260 1429
262 1435
264 1441
273
266 95 93
268 267 96
270 228 106
272 271 269
274 93 91
276 274 95
278 276 97
280 278 54
282 4 3
284 282 7
286 284 280
288 286 8
290 108 106
292 290 287
294 293 289
296 286 10
298 110 106
300 298 287
302 301 297
304 286 12
306 112 106
308 306 287
310 309 305
312 274 94
314 312 97
316 314 28
318 114 106
320 318 315
322 321 317
324 314 30
326 116 106
328 326 315
330 329 325
332 314 32
334 118 106
336 334 315
338 337 333
340 314 14
342 120 106
344 342 315
346 345 341
348 314 16
350 122 106
352 350 315
354 353 349
356 5 2
358 356 7
360 358 280
362 360 8
364 124 106
366 364 361
368 367 363
370 360 10
372 126 106
374 372 361
376 375 371
378 314 68
380 128 106
382 380 315
384 383 379
386 314 70
388 130 106
390 388 315
392 391 387
394 314 72
396 132 106
398 396 315
400 399 395
402 314 34
404 134 106
406 404 315
408 407 403
410 314 36
412 136 106
414 412 315
416 415 411
418 314 38
420 138 106
422 420 315
424 423 419
426 93 90
428 426 95
430 428 96
432 144 106
434 140 106
436 142 106
438 437 435
440 438 433
442 440 430
444 373 364
446 444 442
448 372 364
450 448 442
452 298 290
454 452 306
456 454 450
458 436 434
460 458 433
462 430 56
464 462 460
466 465 434
468 438 432
470 468 56
472 436 435
474 472 433
476 474 98
478 437 434
480 478 433
482 480 88
484 483 477
486 484 471
488 487 430
490 489 466
492 491 457
494 492 447
496 489 436
498 496 465
500 372 365
502 500 442
504 503 457
506 504 499
508 462 438
510 509 432
512 511 451
514 513 504
516 92 91
518 516 95
520 518 97
522 520 74
524 146 106
526 524 521
528 527 523
530 520 76
532 148 106
534 532 521
536 535 531
538 520 78
540 150 106
542 540 521
544 543 539
546 520 80
548 152 106
550 548 521
552 551 547
554 520 82
556 154 106
558 556 521
560 559 555
562 520 84
564 156 106
566 564 521
568 567 563
570 314 48
572 158 106
574 572 315
576 575 571
578 314 50
580 160 106
582 580 315
584 583 579
586 314 52
588 162 106
590 588 315
592 591 587
594 4 2
596 594 7
598 596 280
600 254 106
602 600 598
604 164 106
606 604 599
608 607 603
610 256 106
612 610 598
614 166 106
616 614 599
618 617 613
620 258 106
622 620 598
624 168 106
626 624 599
628 627 623
630 5 3
632 630 6
634 632 280
636 260 106
638 636 634
640 174 106
642 640 635
644 643 639
646 262 106
648 646 634
650 176 106
652 650 635
654 653 649
656 264 106
658 656 634
660 178 106
662 660 635
664 663 659
666 278 55
668 630 7
670 668 666
672 172 106
674 673 8
676 180 106
678 676 675
680 678 670
682 182 106
684 682 676
686 684 86
688 687 676
690 682 677
692 540 307
694 541 306
696 695 693
698 524 291
700 525 290
702 701 699
704 532 299
706 533 298
708 707 705
710 708 702
712 710 696
714 234 106
716 232 106
718 230 106
720 718 717
722 220 106
724 722 720
726 719 716
728 726 723
730 729 725
732 731 715
734 732 712
736 188 106
738 737 564
740 736 565
742 741 739
744 184 106
746 745 548
748 744 549
750 749 747
752 186 106
754 753 556
756 752 557
758 757 755
760 758 750
762 760 742
764 762 734
766 170 106
768 766 764
770 768 46
772 770 690
774 773 689
776 775 671
778 777 681
780 683 675
782 781 670
784 687 684
786 785 691
788 787 671
790 789 783
792 290 286
794 744 287
796 795 793
798 298 286
800 752 287
802 801 799
804 306 286
806 736 287
808 807 805
810 314 100
812 190 106
814 812 315
816 815 811
818 314 102
820 192 106
822 820 315
824 823 819
826 314 104
828 194 106
830 828 315
832 831 827
834 202 106
836 200 106
838 196 106
840 198 106
842 841 839
844 842 837
846 844 835
848 92 90
850 848 95
852 850 97
854 852 846
856 841 838
858 856 837
860 858 835
862 860 476
864 862 430
866 840 839
868 866 837
870 868 835
872 870 470
874 872 430
876 840 838
878 876 837
880 878 835
882 880 314
884 882 67
886 842 836
888 886 835
890 888 686
892 620 421
894 621 420
896 895 893
898 600 405
900 601 404
902 901 899
904 610 413
906 611 412
908 907 905
910 908 902
912 910 896
914 240 106
916 915 624
918 914 625
920 919 917
922 236 106
924 923 604
926 922 605
928 927 925
930 238 106
932 931 614
934 930 615
936 935 933
938 936 928
940 938 920
942 940 912
944 829 656
946 828 657
948 947 945
950 813 636
952 812 637
954 953 951
956 821 646
958 820 647
960 959 957
962 960 954
964 962 948
966 964 942
968 660 335
970 661 334
972 971 969
974 640 319
976 641 318
978 977 975
980 650 327
982 651 326
984 983 981
986 984 978
988 986 972
990 988 966
992 246 106
994 218 106
996 995 992
998 994 993
1000 999 997
1002 242 106
1004 214 106
1006 1005 1002
1008 1004 1003
1010 1009 1007
1012 244 106
1014 216 106
1016 1015 1012
1018 1014 1013
1020 1019 1017
1022 1020 1010
1024 1022 1000
1026 1024 990
1028 252 106
1030 1028 589
1032 1029 588
1034 1033 1031
1036 248 106
1038 1036 573
1040 1037 572
1042 1041 1039
1044 250 106
1046 1044 581
1048 1045 580
1050 1049 1047
1052 1050 1042
1054 1052 1034
1056 1054 1026
1058 397 306
1060 396 307
1062 1061 1059
1064 381 290
1066 380 291
1068 1067 1065
1070 389 298
1072 388 299
1074 1073 1071
1076 1074 1068
1078 1076 1062
1080 1078 1056
1082 212 106
1084 1083 736
1086 1082 737
1088 1087 1085
1090 208 106
1092 1091 744
1094 1090 745
1096 1095 1093
1098 210 106
1100 1099 752
1102 1098 753
1104 1103 1101
1106 1104 1096
1108 1106 1088
1110 1108 1080
1112 204 106
1114 1112 343
1116 1113 342
1118 1117 1115
1120 206 106
1122 1120 351
1124 1121 350
1126 1125 1123
1128 1126 1118
1130 1128 1110
1132 1130 723
1134 1133 890
1136 1134 430
1138 890 59
1140 1138 430
1142 856 836
1144 1142 835
1146 1144 686
1148 1130 722
1150 1149 1146
1152 1150 430
1154 1146 58
1156 1154 430
1158 866 836
1160 1158 835
1162 426 94
1164 1162 97
1166 1164 1160
1168 876 836
1170 1168 835
1172 516 94
1174 1172 97
1176 1174 1170
1178 844 834
1180 848 94
1182 1180 97
1184 1182 1178
1186 1185 1177
1188 1186 1167
1190 1188 839
1192 1191 1157
1194 1192 1153
1196 1195 1141
1198 1197 1137
1200 1198 885
1202 1201 875
1204 1203 865
1206 1205 855
1208 858 834
1210 276 96
1212 1210 1208
1214 1213 841
1216 1214 1188
1218 1216 1153
1220 890 430
1222 1221 1218
1224 1223 883
1226 1225 865
1228 1188 836
1230 1146 430
1232 1231 1228
1234 1232 1137
1236 1235 883
1238 1213 834
1240 1238 1188
1242 1241 1231
1244 1242 1137
1246 520 24
1248 1112 521
1250 1249 1247
1252 520 26
1254 1120 521
1256 1255 1253
1258 314 60
1260 1090 315
1262 1261 1259
1264 314 62
1266 1098 315
1268 1267 1265
1270 314 64
1272 1082 315
1274 1273 1271
1276 314 40
1278 1004 315
1280 1279 1277
1282 314 42
1284 1014 315
1286 1285 1283
1288 314 44
1290 994 315
1292 1291 1289
1294 222 106
1296 1295 881
1298 224 106
1300 1298 1294
1302 1299 1295
1304 1303 1301
1306 1304 881
1308 226 106
1310 1308 1300
1312 1309 1301
1314 1313 1311
1316 1314 881
1318 1310 271
1320 1311 270
1322 1321 1319
1324 1323 881
1326 594 6
1328 1326 280
1330 1328 8
1332 1329 718
1334 1333 1331
1336 1328 10
1338 1329 716
1340 1339 1337
1342 1328 12
1344 1329 714
1346 1345 1343
1348 314 18
1350 922 315
1352 1351 1349
1354 314 20
1356 930 315
1358 1357 1355
1360 314 22
1362 914 315
1364 1363 1361
1366 356 6
1368 1366 280
1370 1368 8
1372 1369 1002
1374 1373 1371
1376 1368 10
1378 1369 1012
1380 1379 1377
1382 1368 12
1384 1369 992
1386 1385 1383
1388 1368 1002
1390 1369 1036
1392 1391 1389
1394 1368 1012
1396 1369 1044
1398 1397 1395
1400 1368 992
1402 1369 1028
1404 1403 1401
1406 598 8
1408 600 599
1410 1409 1407
1412 598 10
1414 610 599
1416 1415 1413
1418 598 12
1420 620 599
1422 1421 1419
1424 634 8
1426 636 635
1428 1427 1425
1430 634 10
1432 646 635
1434 1433 1431
1436 634 12
1438 656 635
1440 1439 1437
i0 controllable_addr_abs<0>
i1 controllable_addr_abs<1>
i2 controllable_addr_abs<2>
i3 controllable_write8_val_abs<0>
i4 controllable_write8_val_abs<1>
i5 controllable_write8_val_abs<2>
i6 i_reqBuf_abs<0>
i7 i_reqBuf_abs<1>
i8 i_reqLBA1_abs<0>
i9 i_reqLBA1_abs<1>
i10 i_reqLBA1_abs<2>
i11 controllable_fillPrdAddr_abs<0>
i12 controllable_fillPrdAddr_abs<1>
i13 i_reqLBA3_abs<0>
i14 i_reqLBA3_abs<1>
i15 i_reqLBA3_abs<2>
i16 i_reqLBA0_abs<0>
i17 i_reqLBA0_abs<1>
i18 i_reqLBA0_abs<2>
i19 i_reqLBA4_abs<0>
i20 i_reqLBA4_abs<1>
i21 i_reqLBA4_abs<2>
i22 controllable_dmaStartClass_conc
i23 i_reqLBA5_abs<0>
i24 i_reqLBA5_abs<1>
i25 i_reqLBA5_abs<2>
i26 controllable_bank_abs
i27 controllable_featXFRClass_conc
i28 i_transSuccess_conc
i29 i_reqSect1_abs<0>
i30 i_reqSect1_abs<1>
i31 i_reqSect1_abs<2>
i32 i_osReqType_conc
i33 i_reqSect0_abs<0>
i34 i_reqSect0_abs<1>
i35 i_reqSect0_abs<2>
i36 controllable_fillPrdNSect_abs<0>
i37 controllable_fillPrdNSect_abs<1>
i38 controllable_fillPrdNSect_abs<2>
i39 controllable_fillPrdNSect_abs<3>
i40 controllable_fillPrdNSect_abs<4>
i41 controllable_fillPrdNSect_abs<5>
i42 controllable_busMasterClass_conc
i43 controllable_featWCClass_conc
i44 controllable_tag_conc<0>
i45 controllable_tag_conc<1>
i46 controllable_tag_conc<2>
i47 controllable_tag_conc<3>
i48 controllable_featNWCClass_conc
i49 i_reqLBA2_abs<0>
i50 i_reqLBA2_abs<1>
i51 i_reqLBA2_abs<2>
l0 n107
l1 state_regSectors0_abs<0>_out
l2 state_regSectors0_abs<1>_out
l3 state_regSectors0_abs<2>_out
l4 state_os_lba3_abs<0>_out
l5 state_os_lba3_abs<1>_out
l6 state_os_lba3_abs<2>_out
l7 state_os_buf_abs<0>_out
l8 state_os_buf_abs<1>_out
l9 state_regFeature0_abs<0>_out
l10 state_regFeature0_abs<1>_out
l11 state_os_sect0_abs<0>_out
l12 state_os_sect0_abs<1>_out
l13 state_os_sect0_abs<2>_out
l14 state_os_lba0_abs<0>_out
l15 state_os_lba0_abs<1>_out
l16 state_os_lba0_abs<2>_out
l17 state_setFeatState_conc<0>_out
l18 state_setFeatState_conc<1>_out
l19 state_setFeatState_conc<2>_out
l20 state_bufSectors_abs<0>_out
l21 state_bufSectors_abs<1>_out
l22 state_bufSectors_abs<2>_out
l23 state_bufSectors_abs<3>_out
l24 state_bufSectors_abs<4>_out
l25 state_bufSectors_abs<5>_out
l26 state_os_lba5_abs<0>_out
l27 state_os_lba5_abs<1>_out
l28 state_os_lba5_abs<2>_out
l29 state_regLBALow1_abs<0>_out
l30 state_regLBALow1_abs<1>_out
l31 state_regLBALow1_abs<2>_out
l32 state_regDev_LBA_abs_out
l33 state_regBMCommand_Start_abs_out
l34 state_regLBAMid1_abs<0>_out
l35 state_regLBAMid1_abs<1>_out
l36 state_regLBAMid1_abs<2>_out
l37 state_stDMACmd_conc<0>_out
l38 state_stDMACmd_conc<1>_out
l39 state_regSectors1_abs<0>_out
l40 state_regSectors1_abs<1>_out
l41 state_regSectors1_abs<2>_out
l42 state_os_lba2_abs<0>_out
l43 state_os_lba2_abs<1>_out
l44 state_os_lba2_abs<2>_out
l45 state_osState_conc<0>_out
l46 state_osState_conc<1>_out
l47 state_osState_conc<2>_out
l48 state_osState_conc<3>_out
l49 state_bufAddr_abs<0>_out
l50 state_bufAddr_abs<1>_out
l51 state_os_sect1_abs<0>_out
l52 state_os_sect1_abs<1>_out
l53 state_os_sect1_abs<2>_out
l54 state_os_lba4_abs<0>_out
l55 state_os_lba4_abs<1>_out
l56 state_os_lba4_abs<2>_out
l57 state_regBMCommand_RW_abs_out
l58 fair_cnt<0>_out
l59 fair_cnt<1>_out
l60 fair_cnt<2>_out
l61 fair_cnt<3>_out
l62 state_regCommand_abs<0>_out
l63 state_regCommand_abs<1>_out
l64 state_regCommand_abs<2>_out
l65 state_os_lba1_abs<0>_out
l66 state_os_lba1_abs<1>_out
l67 state_os_lba1_abs<2>_out
l68 state_regLBAHigh0_abs<0>_out
l69 state_regLBAHigh0_abs<1>_out
l70 state_regLBAHigh0_abs<2>_out
l71 state_regLBAHigh1_abs<0>_out
l72 state_regLBAHigh1_abs<1>_out
l73 state_regLBAHigh1_abs<2>_out
l74 state_regLBALow0_abs<0>_out
l75 state_regLBALow0_abs<1>_out
l76 state_regLBALow0_abs<2>_out
l77 state_regLBAMid0_abs<0>_out
l78 state_regLBAMid0_abs<1>_out
l79 state_regLBAMid0_abs<2>_out
o0 o_err
c
ide_hard_drive_controller_2
This file was written by ABC on Tue Mar 11 20:24:23 2014
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv driver_c8.v   ---gives--> driver_c8.mv
> abc -c "read_blif_mv driver_c8.mv; strash; refactor; rewrite; dfraig; rewrite; dfraig; write_aiger -s driver_c8y.aig"   ---gives--> driver_c8y.aig
> aigtoaig driver_c8y.aig driver_c8y.aag   ---gives--> driver_c8y.aag (this file)
Content of driver_c8.v:
// IDE hard drive controller specification and operating system interface
// specification for device driver synthesis.
// This file describes a GR(1) game played by a device driver for an IDE hard
// disk against its environment consisting of the hard disk and operating
// system.

`define WIDTH1 2
`define WIDTH2 1

`define CMD_READ_DMA_EXT  1
`define CMD_WRITE_DMA_EXT 2
`define FEAT_WC           1
`define FEAT_NWC          2
`define FEAT_XFR_MODE     3
`define XM_ULTRA_DMA      7

`define RCMD              1
`define REG_FEATURE0      1
`define REG_SECTORS       2
`define REG_LBA_LOW       3
`define REG_LBA_MID       4
`define REG_LBA_HIGH      5
`define REG_DEV           6
`define REG_ERRCMD        7

`define RDMA              0
`define REG_BM_COMMAND    0

//typedef enum {read=0, write=1} i_osReqType_enum;
`define read              0
`define write             1

//typedef enum {write8, write32, fillPrd, reset, os_req, ack_read_succ, ack_read_fail, ack_write_succ, ack_write_fail, class_event} controllable_tag_enum;
`define write8            0
`define write32           1
`define fillPrd           2
`define reset             3
`define os_req            4
`define ack_read_succ     5
`define ack_read_fail     6
`define ack_write_succ    7
`define ack_write_fail    8
`define class_event       9

//typedef enum {wait_bm_ready=0, dma_read=1, bm_read_prd=2, bm_ready=3} state_stDMACmd_enum;
`define wait_bm_ready     0
`define dma_read          1
`define bm_read_prd       2
`define bm_ready          3


//typedef enum {setFeatIdle=0, setFeatWC=1, setFeatNWC=2, setFeatXFR0=3, setFeatXFR1=4} state_setFeatState_enum;
`define setFeatIdle       0
`define setFeatWC         1
`define setFeatNWC        2
`define setFeatXFR0       3
`define setFeatXFR1       4

//typedef enum {os_init=0, os_reset=1, os_write_cache=2, os_idle=3, os_read_pending=4, os_write_pending=5, os_read_ack_succ=6, os_read_ack_fail=7, os_write_ack_succ=8, os_write_ack_fail=9, os_error=10} state_osState_enum;
`define os_init           0
`define os_reset          1
`define os_write_cache    2
`define os_idle           3
`define os_read_pending   4
`define os_write_pending  5
`define os_read_ack_succ  6
`define os_read_ack_fail  7
`define os_write_ack_succ 8
`define os_write_ack_fail 9
`define os_error          10

module ide_hard_drive_controller_2(
        o_err,
        i_clk,
        i_osReqType_conc,
        i_reqLBA0_abs,
        i_reqLBA1_abs,
        i_reqLBA2_abs,
        i_reqLBA3_abs,
        i_reqLBA4_abs,
        i_reqLBA5_abs,
        i_reqSect0_abs,
        i_reqSect1_abs,
        i_reqBuf_abs,
        i_transSuccess_conc,
        controllable_tag_conc,
        controllable_bank_abs,
        controllable_addr_abs,
        controllable_write8_val_abs,
        controllable_fillPrdAddr_abs,
        controllable_fillPrdNSect_abs,
        controllable_featWCClass_conc,
        controllable_featNWCClass_conc,
        controllable_featXFRClass_conc,
        controllable_busMasterClass_conc,
        controllable_dmaStartClass_conc );

input i_clk;
input i_osReqType_conc ;
input [`WIDTH1:0] i_reqLBA0_abs ;
input [`WIDTH1:0] i_reqLBA1_abs ;
input [`WIDTH1:0] i_reqLBA2_abs ;
input [`WIDTH1:0] i_reqLBA3_abs ;
input [`WIDTH1:0] i_reqLBA4_abs ;
input [`WIDTH1:0] i_reqLBA5_abs ;
input [`WIDTH1:0] i_reqSect0_abs ;
input [`WIDTH1:0] i_reqSect1_abs ;
input [`WIDTH2:0] i_reqBuf_abs ;
input i_transSuccess_conc ;
input [3:0] controllable_tag_conc ;
input controllable_bank_abs ;
input [2:0] controllable_addr_abs ;
input [`WIDTH1:0] controllable_write8_val_abs ;
input [`WIDTH2:0] controllable_fillPrdAddr_abs ;
input [5:0] controllable_fillPrdNSect_abs ;
input controllable_featWCClass_conc ;
input controllable_featNWCClass_conc ;
input controllable_featXFRClass_conc ;
input controllable_busMasterClass_conc ;
input controllable_dmaStartClass_conc ;
output o_err;

reg [1:0] state_stDMACmd_conc ;
reg [2:0] state_setFeatState_conc ;
reg [1:0] state_regFeature0_abs ;
reg [`WIDTH1:0] state_regSectors0_abs ;
reg [`WIDTH1:0] state_regSectors1_abs ;
reg [`WIDTH1:0] state_regLBALow0_abs ;
reg [`WIDTH1:0] state_regLBALow1_abs ;
reg [`WIDTH1:0] state_regLBAMid0_abs ;
reg [`WIDTH1:0] state_regLBAMid1_abs ;
reg [`WIDTH1:0] state_regLBAHigh0_abs ;
reg [`WIDTH1:0] state_regLBAHigh1_abs ;
reg state_regDev_LBA_abs ;
reg [`WIDTH1:0] state_regCommand_abs ;
reg state_regBMCommand_Start_abs ;
reg state_regBMCommand_RW_abs ;
reg [`WIDTH2:0] state_bufAddr_abs ;
reg [5:0] state_bufSectors_abs ;

reg [3:0] state_osState_conc ;
reg [`WIDTH1:0] state_os_lba0_abs ;
reg [`WIDTH1:0] state_os_lba1_abs ;
reg [`WIDTH1:0] state_os_lba2_abs ;
reg [`WIDTH1:0] state_os_lba3_abs ;
reg [`WIDTH1:0] state_os_lba4_abs ;
reg [`WIDTH1:0] state_os_lba5_abs ;
reg [`WIDTH1:0] state_os_sect0_abs ;
reg [`WIDTH1:0] state_os_sect1_abs ;
reg [`WIDTH2:0] state_os_buf_abs ;

reg [3:0] fair_cnt;

wire transferMode3;
wire nwc;
wire bm_event;
wire transferCorrect;
wire transferCorrect_0;
wire transferCorrect_1;
wire buechi_satisfied;
wire [1:0] next_state_stDMACmd_conc ;
wire [2:0] next_state_setFeatState_conc ;
wire [1:0] next_state_regFeature0_abs ;
wire [`WIDTH1:0] next_state_regSectors0_abs ;
wire [`WIDTH1:0] next_state_regSectors1_abs ;
wire [`WIDTH1:0] next_state_regLBALow0_abs ;
wire [`WIDTH1:0] next_state_regLBALow1_abs ;
wire [`WIDTH1:0] next_state_regLBAMid0_abs ;
wire [`WIDTH1:0] next_state_regLBAMid1_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh0_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh1_abs ;
wire next_state_regDev_LBA_abs ;
wire [`WIDTH1:0] next_state_regCommand_abs ;
wire next_state_regBMCommand_Start_abs ;
wire next_state_regBMCommand_RW_abs ;
wire [`WIDTH2:0] next_state_bufAddr_abs ;
wire [5:0] next_state_bufSectors_abs ;

wire [3:0] next_state_osState_conc ;
wire [`WIDTH1:0] next_state_os_lba0_abs ;
wire [`WIDTH1:0] next_state_os_lba1_abs ;
wire [`WIDTH1:0] next_state_os_lba2_abs ;
wire [`WIDTH1:0] next_state_os_lba3_abs ;
wire [`WIDTH1:0] next_state_os_lba4_abs ;
wire [`WIDTH1:0] next_state_os_lba5_abs ;
wire [`WIDTH1:0] next_state_os_sect0_abs ;
wire [`WIDTH1:0] next_state_os_sect1_abs ;
wire [`WIDTH2:0] next_state_os_buf_abs ;

// some abbreviations:
assign transferMode3 = (state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1);
assign nwc =           (state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1);
assign bm_event = (state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1);
assign transferCorrect = (state_os_lba0_abs==state_regLBALow0_abs    &&
                          state_os_lba1_abs==state_regLBALow1_abs    &&
                          state_os_lba2_abs==state_regLBAMid0_abs    &&
                          state_os_lba3_abs==state_regLBAMid1_abs    &&
                          state_os_lba4_abs==state_regLBAHigh0_abs   &&
                          state_os_lba5_abs==state_regLBAHigh1_abs   &&
                          state_os_sect0_abs==state_regSectors0_abs  &&
                          state_os_sect1_abs==state_regSectors1_abs  &&
                          state_os_buf_abs==state_bufAddr_abs);
assign transferCorrect_0 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==0);
assign transferCorrect_1 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==1);


// state updates:
  //Device state updates:
assign next_state_regFeature0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_FEATURE0) ? controllable_write8_val_abs  : state_regFeature0_abs;
assign next_state_regSectors0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? controllable_write8_val_abs  : state_regSectors0_abs;
assign next_state_regSectors1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? state_regSectors0_abs : state_regSectors1_abs;
assign next_state_regLBALow0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? controllable_write8_val_abs  : state_regLBALow0_abs;
assign next_state_regLBALow1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? state_regLBALow0_abs  : state_regLBALow1_abs;
assign next_state_regLBAMid0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? controllable_write8_val_abs  : state_regLBAMid0_abs;
assign next_state_regLBAMid1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? state_regLBAMid0_abs  : state_regLBAMid1_abs;
assign next_state_regLBAHigh0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? controllable_write8_val_abs  : state_regLBAHigh0_abs;
assign next_state_regLBAHigh1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? state_regLBAHigh0_abs : state_regLBAHigh1_abs;
assign next_state_regDev_LBA_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_DEV)      ? controllable_write8_val_abs[2:2] : state_regDev_LBA_abs;
assign next_state_regCommand_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_ERRCMD)   ? controllable_write8_val_abs  : state_regCommand_abs;
assign next_state_regBMCommand_Start_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[0:0] : state_regBMCommand_Start_abs;
assign next_state_regBMCommand_RW_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[1:1] : state_regBMCommand_RW_abs;
assign next_state_bufAddr_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdAddr_abs : state_bufAddr_abs;
assign next_state_bufSectors_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdNSect_abs : state_bufSectors_abs;

assign next_state_setFeatState_conc = (controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_WC) ? `setFeatWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_NWC) ? `setFeatNWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE && state_regSectors0_abs==`XM_ULTRA_DMA) ? `setFeatXFR0 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE) ? `setFeatXFR1 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatWC   && controllable_featWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR0 && controllable_featXFRClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1) ? `setFeatIdle : state_setFeatState_conc)))))));

assign next_state_stDMACmd_conc = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ?
               (
                 (state_regBMCommand_Start_abs==0 && controllable_write8_val_abs[0:0]==1) ? `bm_read_prd : state_stDMACmd_conc
               ) :
               (
                 (state_stDMACmd_conc==`bm_read_prd) ?
                 (((state_regBMCommand_RW_abs == 1 && state_regCommand_abs != `CMD_READ_DMA_EXT) || (state_regBMCommand_RW_abs == 0 && state_regCommand_abs != `CMD_WRITE_DMA_EXT) || (state_regSectors0_abs != state_bufSectors_abs[`WIDTH1:0]) || (state_regSectors1_abs != state_bufSectors_abs[5:3]) || state_regDev_LBA_abs != 1) ? state_stDMACmd_conc : ((controllable_dmaStartClass_conc==1) ? `bm_ready : state_stDMACmd_conc)) :
                 ((state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1) ? `wait_bm_ready : state_stDMACmd_conc)
               );

//OS state updates
assign next_state_os_lba0_abs = (controllable_tag_conc==`os_req) ? i_reqLBA0_abs : state_os_lba0_abs;
assign next_state_os_lba1_abs = (controllable_tag_conc==`os_req) ? i_reqLBA1_abs : state_os_lba1_abs;
assign next_state_os_lba2_abs = (controllable_tag_conc==`os_req) ? i_reqLBA2_abs : state_os_lba2_abs;
assign next_state_os_lba3_abs = (controllable_tag_conc==`os_req) ? i_reqLBA3_abs : state_os_lba3_abs;
assign next_state_os_lba4_abs = (controllable_tag_conc==`os_req) ? i_reqLBA4_abs : state_os_lba4_abs;
assign next_state_os_lba5_abs = (controllable_tag_conc==`os_req) ? i_reqLBA5_abs : state_os_lba5_abs;
assign next_state_os_sect0_abs = (controllable_tag_conc==`os_req) ? i_reqSect0_abs : state_os_sect0_abs;
assign next_state_os_sect1_abs = (controllable_tag_conc==`os_req) ? i_reqSect1_abs : state_os_sect1_abs;
assign next_state_os_buf_abs = (controllable_tag_conc==`os_req) ? i_reqBuf_abs : state_os_buf_abs;

assign next_state_osState_conc = (state_osState_conc==`os_init && controllable_tag_conc==`reset) ? `os_reset :
      ((state_osState_conc==`os_reset && nwc && controllable_tag_conc==`class_event) ? `os_write_cache :
      ((state_osState_conc==`os_write_cache && transferMode3 && controllable_tag_conc==`class_event) ? `os_idle :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`read) ? `os_read_pending :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`write) ? `os_write_pending :
      ((state_osState_conc==`os_read_pending && bm_event && !transferCorrect_0 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_read_ack_succ :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_read_ack_fail :
      ((state_osState_conc==`os_write_pending && bm_event && !transferCorrect_1 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_write_ack_succ :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_write_ack_fail :
      ((state_osState_conc==`os_read_ack_succ && controllable_tag_conc==`ack_read_succ) ? `os_idle :
      ((state_osState_conc==`os_read_ack_fail && controllable_tag_conc==`ack_read_fail) ? `os_idle :
      ((state_osState_conc==`os_write_ack_succ && controllable_tag_conc==`ack_write_succ) ? `os_idle :
      ((state_osState_conc==`os_write_ack_fail && controllable_tag_conc==`ack_write_fail) ? `os_idle : state_osState_conc))))))))))))));


// buechi-to-safety construction:                            
assign buechi_satisfied = (state_osState_conc == `os_idle);                          
                            
assign o_err = (fair_cnt >= 8) || controllable_tag_conc >= 10;

initial
 begin
  state_stDMACmd_conc = `wait_bm_ready;
  state_setFeatState_conc = `setFeatIdle;
  state_regFeature0_abs = 0;
  state_regSectors0_abs = 0;
  state_regSectors1_abs = 0;
  state_regLBALow0_abs = 0;
  state_regLBALow1_abs = 0;
  state_regLBAMid0_abs = 0;
  state_regLBAMid1_abs = 0;
  state_regLBAHigh0_abs = 0;
  state_regLBAHigh1_abs = 0;
  state_regDev_LBA_abs = 0;
  state_regCommand_abs = 0;
  state_regBMCommand_Start_abs = 0;
  state_regBMCommand_RW_abs = 0;
  state_bufAddr_abs = 0;
  state_bufSectors_abs = 0;
  state_osState_conc = `os_init;
  state_os_lba0_abs = 0;
  state_os_lba1_abs = 0;
  state_os_lba2_abs = 0;
  state_os_lba3_abs = 0;
  state_os_lba4_abs = 0;
  state_os_lba5_abs = 0;
  state_os_sect0_abs = 0;
  state_os_sect1_abs = 0;
  state_os_buf_abs = 0;
  fair_cnt = 0;
 end

always @(posedge i_clk)
 begin

  if(buechi_satisfied)
   begin
    fair_cnt = 0;
   end
  else
   begin
    fair_cnt = fair_cnt + 1;
   end
 
  //Device state updates:
  state_regFeature0_abs          = next_state_regFeature0_abs ;
  state_regSectors0_abs          = next_state_regSectors0_abs ;
  state_regSectors1_abs          = next_state_regSectors1_abs ;
  state_regLBALow0_abs           = next_state_regLBALow0_abs ;
  state_regLBALow1_abs           = next_state_regLBALow1_abs ;
  state_regLBAMid0_abs           = next_state_regLBAMid0_abs ;
  state_regLBAMid1_abs           = next_state_regLBAMid1_abs ;
  state_regLBAHigh0_abs          = next_state_regLBAHigh0_abs ;
  state_regLBAHigh1_abs          = next_state_regLBAHigh1_abs ;
  state_regDev_LBA_abs           = next_state_regDev_LBA_abs ;
  state_regCommand_abs           = next_state_regCommand_abs ;
  state_regBMCommand_Start_abs   = next_state_regBMCommand_Start_abs ;
  state_regBMCommand_RW_abs      = next_state_regBMCommand_RW_abs ;
  state_bufAddr_abs              = next_state_bufAddr_abs ;
  state_bufSectors_abs           = next_state_bufSectors_abs ;
  state_setFeatState_conc        = next_state_setFeatState_conc ;
  state_stDMACmd_conc            = next_state_stDMACmd_conc ;
  state_os_lba0_abs              = next_state_os_lba0_abs ;
  state_os_lba1_abs              = next_state_os_lba1_abs ;
  state_os_lba2_abs              = next_state_os_lba2_abs ;
  state_os_lba3_abs              = next_state_os_lba3_abs ;
  state_os_lba4_abs              = next_state_os_lba4_abs ;
  state_os_lba5_abs              = next_state_os_lba5_abs ;
  state_os_sect0_abs             = next_state_os_sect0_abs ;
  state_os_sect1_abs             = next_state_os_sect1_abs ;
  state_os_buf_abs               = next_state_os_buf_abs ;
  state_osState_conc             = next_state_osState_conc ;
 end
 
 
endmodule
-------------------------------
#!SYNTCOMP
SOLVED_BY : 3/3 [2015-pre-classification], 6/11 [SYNTCOMP2016-RealSeq], 3/6 [SYNTCOMP2016-RealPar], 0/4 [2017-pre-classification], 6/10 [SYNTCOMP2017-RealSeq], 4/6 [SYNTCOMP2017-RealPar], 0/6 [SYNTCOMP2017-SyntSeq], 1/4 [SYNTCOMP2017-SyntPar]
SOLVED_IN : 439.652 [2015-pre-classification], 0.072 [SYNTCOMP2016-RealSeq], 0.2318 [SYNTCOMP2016-RealPar], 0.072 [SYNTCOMP2017-RealSeq], 0.128533 [SYNTCOMP2017-RealPar]
STATUS : realizable
REF_SIZE : 632
#.

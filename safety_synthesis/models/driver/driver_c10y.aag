aag 722 52 80 1 590
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106 1
108 303
110 311
112 319
114 331
116 339
118 347
120 355
122 363
124 377
126 385
128 393
130 401
132 409
134 417
136 425
138 433
140 503
142 515
144 522
146 537
148 545
150 553
152 561
154 569
156 577
158 585
160 593
162 601
164 617
166 627
168 637
170 12
172 8
174 653
176 663
178 673
180 787
182 799
184 805
186 811
188 817
190 825
192 833
194 841
196 1215
198 1235
200 1245
202 1253
204 1259
206 1265
208 1271
210 1277
212 1283
214 1289
216 1295
218 1301
220 10
222 1304
224 1312
226 1320
228 1328
230 1339
232 1345
234 1351
236 1357
238 1363
240 1369
242 1379
244 1385
246 1391
248 1397
250 1403
252 1409
254 1415
256 1421
258 1427
260 1433
262 1439
264 1445
281
266 226 106
268 224 106
270 269 267
272 228 106
274 272 271
276 95 93
278 277 96
280 279 275
282 93 91
284 282 95
286 284 97
288 286 54
290 4 3
292 290 7
294 292 288
296 294 8
298 108 106
300 298 295
302 301 297
304 294 10
306 110 106
308 306 295
310 309 305
312 294 12
314 112 106
316 314 295
318 317 313
320 282 94
322 320 97
324 322 28
326 114 106
328 326 323
330 329 325
332 322 30
334 116 106
336 334 323
338 337 333
340 322 32
342 118 106
344 342 323
346 345 341
348 322 14
350 120 106
352 350 323
354 353 349
356 322 16
358 122 106
360 358 323
362 361 357
364 5 2
366 364 7
368 366 288
370 368 8
372 124 106
374 372 369
376 375 371
378 368 10
380 126 106
382 380 369
384 383 379
386 322 68
388 128 106
390 388 323
392 391 387
394 322 70
396 130 106
398 396 323
400 399 395
402 322 72
404 132 106
406 404 323
408 407 403
410 322 34
412 134 106
414 412 323
416 415 411
418 322 36
420 136 106
422 420 323
424 423 419
426 322 38
428 138 106
430 428 323
432 431 427
434 93 90
436 434 95
438 436 96
440 144 106
442 140 106
444 142 106
446 445 443
448 446 441
450 448 438
452 381 372
454 452 450
456 380 372
458 456 450
460 306 298
462 460 314
464 462 458
466 444 442
468 466 441
470 438 56
472 470 468
474 473 442
476 446 440
478 476 56
480 444 443
482 480 441
484 482 98
486 445 442
488 486 441
490 488 88
492 491 485
494 492 479
496 495 438
498 497 474
500 499 465
502 500 455
504 497 444
506 504 473
508 380 373
510 508 450
512 511 465
514 512 507
516 470 446
518 517 440
520 519 459
522 521 512
524 92 91
526 524 95
528 526 97
530 528 74
532 146 106
534 532 529
536 535 531
538 528 76
540 148 106
542 540 529
544 543 539
546 528 78
548 150 106
550 548 529
552 551 547
554 528 80
556 152 106
558 556 529
560 559 555
562 528 82
564 154 106
566 564 529
568 567 563
570 528 84
572 156 106
574 572 529
576 575 571
578 322 48
580 158 106
582 580 323
584 583 579
586 322 50
588 160 106
590 588 323
592 591 587
594 322 52
596 162 106
598 596 323
600 599 595
602 4 2
604 602 7
606 604 288
608 254 106
610 608 606
612 164 106
614 612 607
616 615 611
618 256 106
620 618 606
622 166 106
624 622 607
626 625 621
628 258 106
630 628 606
632 168 106
634 632 607
636 635 631
638 5 3
640 638 6
642 640 288
644 260 106
646 644 642
648 174 106
650 648 643
652 651 647
654 262 106
656 654 642
658 176 106
660 658 643
662 661 657
664 264 106
666 664 642
668 178 106
670 668 643
672 671 667
674 286 55
676 638 7
678 676 674
680 172 106
682 681 8
684 180 106
686 684 683
688 686 678
690 182 106
692 690 684
694 692 86
696 695 684
698 690 685
700 548 315
702 549 314
704 703 701
706 532 299
708 533 298
710 709 707
712 540 307
714 541 306
716 715 713
718 716 710
720 718 704
722 234 106
724 232 106
726 230 106
728 726 725
730 220 106
732 730 728
734 727 724
736 734 731
738 737 733
740 739 723
742 740 720
744 188 106
746 745 572
748 744 573
750 749 747
752 184 106
754 753 556
756 752 557
758 757 755
760 186 106
762 761 564
764 760 565
766 765 763
768 766 758
770 768 750
772 770 742
774 170 106
776 774 772
778 776 46
780 778 698
782 781 697
784 783 679
786 785 689
788 691 683
790 789 678
792 695 692
794 793 699
796 795 679
798 797 791
800 298 294
802 752 295
804 803 801
806 306 294
808 760 295
810 809 807
812 314 294
814 744 295
816 815 813
818 322 100
820 190 106
822 820 323
824 823 819
826 322 102
828 192 106
830 828 323
832 831 827
834 322 104
836 194 106
838 836 323
840 839 835
842 202 106
844 200 106
846 196 106
848 198 106
850 849 847
852 850 845
854 852 843
856 92 90
858 856 95
860 858 97
862 860 854
864 849 846
866 864 845
868 866 843
870 868 484
872 870 438
874 848 847
876 874 845
878 876 843
880 878 478
882 880 438
884 848 846
886 884 845
888 886 843
890 888 322
892 890 67
894 850 844
896 894 843
898 896 694
900 628 429
902 629 428
904 903 901
906 608 413
908 609 412
910 909 907
912 618 421
914 619 420
916 915 913
918 916 910
920 918 904
922 240 106
924 923 632
926 922 633
928 927 925
930 236 106
932 931 612
934 930 613
936 935 933
938 238 106
940 939 622
942 938 623
944 943 941
946 944 936
948 946 928
950 948 920
952 837 664
954 836 665
956 955 953
958 821 644
960 820 645
962 961 959
964 829 654
966 828 655
968 967 965
970 968 962
972 970 956
974 972 950
976 668 343
978 669 342
980 979 977
982 648 327
984 649 326
986 985 983
988 658 335
990 659 334
992 991 989
994 992 986
996 994 980
998 996 974
1000 246 106
1002 218 106
1004 1003 1000
1006 1002 1001
1008 1007 1005
1010 242 106
1012 214 106
1014 1013 1010
1016 1012 1011
1018 1017 1015
1020 244 106
1022 216 106
1024 1023 1020
1026 1022 1021
1028 1027 1025
1030 1028 1018
1032 1030 1008
1034 1032 998
1036 252 106
1038 1036 597
1040 1037 596
1042 1041 1039
1044 248 106
1046 1044 581
1048 1045 580
1050 1049 1047
1052 250 106
1054 1052 589
1056 1053 588
1058 1057 1055
1060 1058 1050
1062 1060 1042
1064 1062 1034
1066 405 314
1068 404 315
1070 1069 1067
1072 389 298
1074 388 299
1076 1075 1073
1078 397 306
1080 396 307
1082 1081 1079
1084 1082 1076
1086 1084 1070
1088 1086 1064
1090 212 106
1092 1091 744
1094 1090 745
1096 1095 1093
1098 208 106
1100 1099 752
1102 1098 753
1104 1103 1101
1106 210 106
1108 1107 760
1110 1106 761
1112 1111 1109
1114 1112 1104
1116 1114 1096
1118 1116 1088
1120 204 106
1122 1120 351
1124 1121 350
1126 1125 1123
1128 206 106
1130 1128 359
1132 1129 358
1134 1133 1131
1136 1134 1126
1138 1136 1118
1140 1138 731
1142 1141 898
1144 1142 438
1146 898 59
1148 1146 438
1150 864 844
1152 1150 843
1154 1152 694
1156 1138 730
1158 1157 1154
1160 1158 438
1162 1154 58
1164 1162 438
1166 874 844
1168 1166 843
1170 434 94
1172 1170 97
1174 1172 1168
1176 884 844
1178 1176 843
1180 524 94
1182 1180 97
1184 1182 1178
1186 852 842
1188 856 94
1190 1188 97
1192 1190 1186
1194 1193 1185
1196 1194 1175
1198 1196 847
1200 1199 1165
1202 1200 1161
1204 1203 1149
1206 1205 1145
1208 1206 893
1210 1209 883
1212 1211 873
1214 1213 863
1216 866 842
1218 284 96
1220 1218 1216
1222 1221 849
1224 1222 1196
1226 1224 1161
1228 898 438
1230 1229 1226
1232 1231 891
1234 1233 873
1236 1196 844
1238 1154 438
1240 1239 1236
1242 1240 1145
1244 1243 891
1246 1221 842
1248 1246 1196
1250 1249 1239
1252 1250 1145
1254 528 24
1256 1120 529
1258 1257 1255
1260 528 26
1262 1128 529
1264 1263 1261
1266 322 60
1268 1098 323
1270 1269 1267
1272 322 62
1274 1106 323
1276 1275 1273
1278 322 64
1280 1090 323
1282 1281 1279
1284 322 40
1286 1012 323
1288 1287 1285
1290 322 42
1292 1022 323
1294 1293 1291
1296 322 44
1298 1002 323
1300 1299 1297
1302 222 106
1304 1303 889
1306 1302 268
1308 1303 269
1310 1309 1307
1312 1310 889
1314 1306 266
1316 1307 267
1318 1317 1315
1320 1318 889
1322 1314 273
1324 1315 272
1326 1325 1323
1328 1327 889
1330 602 6
1332 1330 288
1334 1332 8
1336 1333 726
1338 1337 1335
1340 1332 10
1342 1333 724
1344 1343 1341
1346 1332 12
1348 1333 722
1350 1349 1347
1352 322 18
1354 930 323
1356 1355 1353
1358 322 20
1360 938 323
1362 1361 1359
1364 322 22
1366 922 323
1368 1367 1365
1370 364 6
1372 1370 288
1374 1372 8
1376 1373 1010
1378 1377 1375
1380 1372 10
1382 1373 1020
1384 1383 1381
1386 1372 12
1388 1373 1000
1390 1389 1387
1392 1372 1010
1394 1373 1044
1396 1395 1393
1398 1372 1020
1400 1373 1052
1402 1401 1399
1404 1372 1000
1406 1373 1036
1408 1407 1405
1410 606 8
1412 608 607
1414 1413 1411
1416 606 10
1418 618 607
1420 1419 1417
1422 606 12
1424 628 607
1426 1425 1423
1428 642 8
1430 644 643
1432 1431 1429
1434 642 10
1436 654 643
1438 1437 1435
1440 642 12
1442 664 643
1444 1443 1441
i0 controllable_addr_abs<0>
i1 controllable_addr_abs<1>
i2 controllable_addr_abs<2>
i3 controllable_write8_val_abs<0>
i4 controllable_write8_val_abs<1>
i5 controllable_write8_val_abs<2>
i6 i_reqBuf_abs<0>
i7 i_reqBuf_abs<1>
i8 i_reqLBA1_abs<0>
i9 i_reqLBA1_abs<1>
i10 i_reqLBA1_abs<2>
i11 controllable_fillPrdAddr_abs<0>
i12 controllable_fillPrdAddr_abs<1>
i13 i_reqLBA3_abs<0>
i14 i_reqLBA3_abs<1>
i15 i_reqLBA3_abs<2>
i16 i_reqLBA0_abs<0>
i17 i_reqLBA0_abs<1>
i18 i_reqLBA0_abs<2>
i19 i_reqLBA4_abs<0>
i20 i_reqLBA4_abs<1>
i21 i_reqLBA4_abs<2>
i22 controllable_dmaStartClass_conc
i23 i_reqLBA5_abs<0>
i24 i_reqLBA5_abs<1>
i25 i_reqLBA5_abs<2>
i26 controllable_bank_abs
i27 controllable_featXFRClass_conc
i28 i_transSuccess_conc
i29 i_reqSect1_abs<0>
i30 i_reqSect1_abs<1>
i31 i_reqSect1_abs<2>
i32 i_osReqType_conc
i33 i_reqSect0_abs<0>
i34 i_reqSect0_abs<1>
i35 i_reqSect0_abs<2>
i36 controllable_fillPrdNSect_abs<0>
i37 controllable_fillPrdNSect_abs<1>
i38 controllable_fillPrdNSect_abs<2>
i39 controllable_fillPrdNSect_abs<3>
i40 controllable_fillPrdNSect_abs<4>
i41 controllable_fillPrdNSect_abs<5>
i42 controllable_busMasterClass_conc
i43 controllable_featWCClass_conc
i44 controllable_tag_conc<0>
i45 controllable_tag_conc<1>
i46 controllable_tag_conc<2>
i47 controllable_tag_conc<3>
i48 controllable_featNWCClass_conc
i49 i_reqLBA2_abs<0>
i50 i_reqLBA2_abs<1>
i51 i_reqLBA2_abs<2>
l0 n107
l1 state_regSectors0_abs<0>_out
l2 state_regSectors0_abs<1>_out
l3 state_regSectors0_abs<2>_out
l4 state_os_lba3_abs<0>_out
l5 state_os_lba3_abs<1>_out
l6 state_os_lba3_abs<2>_out
l7 state_os_buf_abs<0>_out
l8 state_os_buf_abs<1>_out
l9 state_regFeature0_abs<0>_out
l10 state_regFeature0_abs<1>_out
l11 state_os_sect0_abs<0>_out
l12 state_os_sect0_abs<1>_out
l13 state_os_sect0_abs<2>_out
l14 state_os_lba0_abs<0>_out
l15 state_os_lba0_abs<1>_out
l16 state_os_lba0_abs<2>_out
l17 state_setFeatState_conc<0>_out
l18 state_setFeatState_conc<1>_out
l19 state_setFeatState_conc<2>_out
l20 state_bufSectors_abs<0>_out
l21 state_bufSectors_abs<1>_out
l22 state_bufSectors_abs<2>_out
l23 state_bufSectors_abs<3>_out
l24 state_bufSectors_abs<4>_out
l25 state_bufSectors_abs<5>_out
l26 state_os_lba5_abs<0>_out
l27 state_os_lba5_abs<1>_out
l28 state_os_lba5_abs<2>_out
l29 state_regLBALow1_abs<0>_out
l30 state_regLBALow1_abs<1>_out
l31 state_regLBALow1_abs<2>_out
l32 state_regDev_LBA_abs_out
l33 state_regBMCommand_Start_abs_out
l34 state_regLBAMid1_abs<0>_out
l35 state_regLBAMid1_abs<1>_out
l36 state_regLBAMid1_abs<2>_out
l37 state_stDMACmd_conc<0>_out
l38 state_stDMACmd_conc<1>_out
l39 state_regSectors1_abs<0>_out
l40 state_regSectors1_abs<1>_out
l41 state_regSectors1_abs<2>_out
l42 state_os_lba2_abs<0>_out
l43 state_os_lba2_abs<1>_out
l44 state_os_lba2_abs<2>_out
l45 state_osState_conc<0>_out
l46 state_osState_conc<1>_out
l47 state_osState_conc<2>_out
l48 state_osState_conc<3>_out
l49 state_bufAddr_abs<0>_out
l50 state_bufAddr_abs<1>_out
l51 state_os_sect1_abs<0>_out
l52 state_os_sect1_abs<1>_out
l53 state_os_sect1_abs<2>_out
l54 state_os_lba4_abs<0>_out
l55 state_os_lba4_abs<1>_out
l56 state_os_lba4_abs<2>_out
l57 state_regBMCommand_RW_abs_out
l58 fair_cnt<0>_out
l59 fair_cnt<1>_out
l60 fair_cnt<2>_out
l61 fair_cnt<3>_out
l62 state_regCommand_abs<0>_out
l63 state_regCommand_abs<1>_out
l64 state_regCommand_abs<2>_out
l65 state_os_lba1_abs<0>_out
l66 state_os_lba1_abs<1>_out
l67 state_os_lba1_abs<2>_out
l68 state_regLBAHigh0_abs<0>_out
l69 state_regLBAHigh0_abs<1>_out
l70 state_regLBAHigh0_abs<2>_out
l71 state_regLBAHigh1_abs<0>_out
l72 state_regLBAHigh1_abs<1>_out
l73 state_regLBAHigh1_abs<2>_out
l74 state_regLBALow0_abs<0>_out
l75 state_regLBALow0_abs<1>_out
l76 state_regLBALow0_abs<2>_out
l77 state_regLBAMid0_abs<0>_out
l78 state_regLBAMid0_abs<1>_out
l79 state_regLBAMid0_abs<2>_out
o0 o_err
c
ide_hard_drive_controller_2
This file was written by ABC on Tue Mar 11 20:24:20 2014
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv driver_c10.v   ---gives--> driver_c10.mv
> abc -c "read_blif_mv driver_c10.mv; strash; refactor; rewrite; dfraig; rewrite; dfraig; write_aiger -s driver_c10y.aig"   ---gives--> driver_c10y.aig
> aigtoaig driver_c10y.aig driver_c10y.aag   ---gives--> driver_c10y.aag (this file)
Content of driver_c10.v:
// IDE hard drive controller specification and operating system interface
// specification for device driver synthesis.
// This file describes a GR(1) game played by a device driver for an IDE hard
// disk against its environment consisting of the hard disk and operating
// system.

`define WIDTH1 2
`define WIDTH2 1

`define CMD_READ_DMA_EXT  1
`define CMD_WRITE_DMA_EXT 2
`define FEAT_WC           1
`define FEAT_NWC          2
`define FEAT_XFR_MODE     3
`define XM_ULTRA_DMA      7

`define RCMD              1
`define REG_FEATURE0      1
`define REG_SECTORS       2
`define REG_LBA_LOW       3
`define REG_LBA_MID       4
`define REG_LBA_HIGH      5
`define REG_DEV           6
`define REG_ERRCMD        7

`define RDMA              0
`define REG_BM_COMMAND    0

//typedef enum {read=0, write=1} i_osReqType_enum;
`define read              0
`define write             1

//typedef enum {write8, write32, fillPrd, reset, os_req, ack_read_succ, ack_read_fail, ack_write_succ, ack_write_fail, class_event} controllable_tag_enum;
`define write8            0
`define write32           1
`define fillPrd           2
`define reset             3
`define os_req            4
`define ack_read_succ     5
`define ack_read_fail     6
`define ack_write_succ    7
`define ack_write_fail    8
`define class_event       9

//typedef enum {wait_bm_ready=0, dma_read=1, bm_read_prd=2, bm_ready=3} state_stDMACmd_enum;
`define wait_bm_ready     0
`define dma_read          1
`define bm_read_prd       2
`define bm_ready          3


//typedef enum {setFeatIdle=0, setFeatWC=1, setFeatNWC=2, setFeatXFR0=3, setFeatXFR1=4} state_setFeatState_enum;
`define setFeatIdle       0
`define setFeatWC         1
`define setFeatNWC        2
`define setFeatXFR0       3
`define setFeatXFR1       4

//typedef enum {os_init=0, os_reset=1, os_write_cache=2, os_idle=3, os_read_pending=4, os_write_pending=5, os_read_ack_succ=6, os_read_ack_fail=7, os_write_ack_succ=8, os_write_ack_fail=9, os_error=10} state_osState_enum;
`define os_init           0
`define os_reset          1
`define os_write_cache    2
`define os_idle           3
`define os_read_pending   4
`define os_write_pending  5
`define os_read_ack_succ  6
`define os_read_ack_fail  7
`define os_write_ack_succ 8
`define os_write_ack_fail 9
`define os_error          10

module ide_hard_drive_controller_2(
        o_err,
        i_clk,
        i_osReqType_conc,
        i_reqLBA0_abs,
        i_reqLBA1_abs,
        i_reqLBA2_abs,
        i_reqLBA3_abs,
        i_reqLBA4_abs,
        i_reqLBA5_abs,
        i_reqSect0_abs,
        i_reqSect1_abs,
        i_reqBuf_abs,
        i_transSuccess_conc,
        controllable_tag_conc,
        controllable_bank_abs,
        controllable_addr_abs,
        controllable_write8_val_abs,
        controllable_fillPrdAddr_abs,
        controllable_fillPrdNSect_abs,
        controllable_featWCClass_conc,
        controllable_featNWCClass_conc,
        controllable_featXFRClass_conc,
        controllable_busMasterClass_conc,
        controllable_dmaStartClass_conc );

input i_clk;
input i_osReqType_conc ;
input [`WIDTH1:0] i_reqLBA0_abs ;
input [`WIDTH1:0] i_reqLBA1_abs ;
input [`WIDTH1:0] i_reqLBA2_abs ;
input [`WIDTH1:0] i_reqLBA3_abs ;
input [`WIDTH1:0] i_reqLBA4_abs ;
input [`WIDTH1:0] i_reqLBA5_abs ;
input [`WIDTH1:0] i_reqSect0_abs ;
input [`WIDTH1:0] i_reqSect1_abs ;
input [`WIDTH2:0] i_reqBuf_abs ;
input i_transSuccess_conc ;
input [3:0] controllable_tag_conc ;
input controllable_bank_abs ;
input [2:0] controllable_addr_abs ;
input [`WIDTH1:0] controllable_write8_val_abs ;
input [`WIDTH2:0] controllable_fillPrdAddr_abs ;
input [5:0] controllable_fillPrdNSect_abs ;
input controllable_featWCClass_conc ;
input controllable_featNWCClass_conc ;
input controllable_featXFRClass_conc ;
input controllable_busMasterClass_conc ;
input controllable_dmaStartClass_conc ;
output o_err;

reg [1:0] state_stDMACmd_conc ;
reg [2:0] state_setFeatState_conc ;
reg [1:0] state_regFeature0_abs ;
reg [`WIDTH1:0] state_regSectors0_abs ;
reg [`WIDTH1:0] state_regSectors1_abs ;
reg [`WIDTH1:0] state_regLBALow0_abs ;
reg [`WIDTH1:0] state_regLBALow1_abs ;
reg [`WIDTH1:0] state_regLBAMid0_abs ;
reg [`WIDTH1:0] state_regLBAMid1_abs ;
reg [`WIDTH1:0] state_regLBAHigh0_abs ;
reg [`WIDTH1:0] state_regLBAHigh1_abs ;
reg state_regDev_LBA_abs ;
reg [`WIDTH1:0] state_regCommand_abs ;
reg state_regBMCommand_Start_abs ;
reg state_regBMCommand_RW_abs ;
reg [`WIDTH2:0] state_bufAddr_abs ;
reg [5:0] state_bufSectors_abs ;

reg [3:0] state_osState_conc ;
reg [`WIDTH1:0] state_os_lba0_abs ;
reg [`WIDTH1:0] state_os_lba1_abs ;
reg [`WIDTH1:0] state_os_lba2_abs ;
reg [`WIDTH1:0] state_os_lba3_abs ;
reg [`WIDTH1:0] state_os_lba4_abs ;
reg [`WIDTH1:0] state_os_lba5_abs ;
reg [`WIDTH1:0] state_os_sect0_abs ;
reg [`WIDTH1:0] state_os_sect1_abs ;
reg [`WIDTH2:0] state_os_buf_abs ;

reg [3:0] fair_cnt;

wire transferMode3;
wire nwc;
wire bm_event;
wire transferCorrect;
wire transferCorrect_0;
wire transferCorrect_1;
wire buechi_satisfied;
wire [1:0] next_state_stDMACmd_conc ;
wire [2:0] next_state_setFeatState_conc ;
wire [1:0] next_state_regFeature0_abs ;
wire [`WIDTH1:0] next_state_regSectors0_abs ;
wire [`WIDTH1:0] next_state_regSectors1_abs ;
wire [`WIDTH1:0] next_state_regLBALow0_abs ;
wire [`WIDTH1:0] next_state_regLBALow1_abs ;
wire [`WIDTH1:0] next_state_regLBAMid0_abs ;
wire [`WIDTH1:0] next_state_regLBAMid1_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh0_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh1_abs ;
wire next_state_regDev_LBA_abs ;
wire [`WIDTH1:0] next_state_regCommand_abs ;
wire next_state_regBMCommand_Start_abs ;
wire next_state_regBMCommand_RW_abs ;
wire [`WIDTH2:0] next_state_bufAddr_abs ;
wire [5:0] next_state_bufSectors_abs ;

wire [3:0] next_state_osState_conc ;
wire [`WIDTH1:0] next_state_os_lba0_abs ;
wire [`WIDTH1:0] next_state_os_lba1_abs ;
wire [`WIDTH1:0] next_state_os_lba2_abs ;
wire [`WIDTH1:0] next_state_os_lba3_abs ;
wire [`WIDTH1:0] next_state_os_lba4_abs ;
wire [`WIDTH1:0] next_state_os_lba5_abs ;
wire [`WIDTH1:0] next_state_os_sect0_abs ;
wire [`WIDTH1:0] next_state_os_sect1_abs ;
wire [`WIDTH2:0] next_state_os_buf_abs ;

// some abbreviations:
assign transferMode3 = (state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1);
assign nwc =           (state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1);
assign bm_event = (state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1);
assign transferCorrect = (state_os_lba0_abs==state_regLBALow0_abs    &&
                          state_os_lba1_abs==state_regLBALow1_abs    &&
                          state_os_lba2_abs==state_regLBAMid0_abs    &&
                          state_os_lba3_abs==state_regLBAMid1_abs    &&
                          state_os_lba4_abs==state_regLBAHigh0_abs   &&
                          state_os_lba5_abs==state_regLBAHigh1_abs   &&
                          state_os_sect0_abs==state_regSectors0_abs  &&
                          state_os_sect1_abs==state_regSectors1_abs  &&
                          state_os_buf_abs==state_bufAddr_abs);
assign transferCorrect_0 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==0);
assign transferCorrect_1 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==1);


// state updates:
  //Device state updates:
assign next_state_regFeature0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_FEATURE0) ? controllable_write8_val_abs  : state_regFeature0_abs;
assign next_state_regSectors0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? controllable_write8_val_abs  : state_regSectors0_abs;
assign next_state_regSectors1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? state_regSectors0_abs : state_regSectors1_abs;
assign next_state_regLBALow0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? controllable_write8_val_abs  : state_regLBALow0_abs;
assign next_state_regLBALow1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? state_regLBALow0_abs  : state_regLBALow1_abs;
assign next_state_regLBAMid0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? controllable_write8_val_abs  : state_regLBAMid0_abs;
assign next_state_regLBAMid1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? state_regLBAMid0_abs  : state_regLBAMid1_abs;
assign next_state_regLBAHigh0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? controllable_write8_val_abs  : state_regLBAHigh0_abs;
assign next_state_regLBAHigh1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? state_regLBAHigh0_abs : state_regLBAHigh1_abs;
assign next_state_regDev_LBA_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_DEV)      ? controllable_write8_val_abs[2:2] : state_regDev_LBA_abs;
assign next_state_regCommand_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_ERRCMD)   ? controllable_write8_val_abs  : state_regCommand_abs;
assign next_state_regBMCommand_Start_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[0:0] : state_regBMCommand_Start_abs;
assign next_state_regBMCommand_RW_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[1:1] : state_regBMCommand_RW_abs;
assign next_state_bufAddr_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdAddr_abs : state_bufAddr_abs;
assign next_state_bufSectors_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdNSect_abs : state_bufSectors_abs;

assign next_state_setFeatState_conc = (controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_WC) ? `setFeatWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_NWC) ? `setFeatNWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE && state_regSectors0_abs==`XM_ULTRA_DMA) ? `setFeatXFR0 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE) ? `setFeatXFR1 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatWC   && controllable_featWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR0 && controllable_featXFRClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1) ? `setFeatIdle : state_setFeatState_conc)))))));

assign next_state_stDMACmd_conc = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ?
               (
                 (state_regBMCommand_Start_abs==0 && controllable_write8_val_abs[0:0]==1) ? `bm_read_prd : state_stDMACmd_conc
               ) :
               (
                 (state_stDMACmd_conc==`bm_read_prd) ?
                 (((state_regBMCommand_RW_abs == 1 && state_regCommand_abs != `CMD_READ_DMA_EXT) || (state_regBMCommand_RW_abs == 0 && state_regCommand_abs != `CMD_WRITE_DMA_EXT) || (state_regSectors0_abs != state_bufSectors_abs[`WIDTH1:0]) || (state_regSectors1_abs != state_bufSectors_abs[5:3]) || state_regDev_LBA_abs != 1) ? state_stDMACmd_conc : ((controllable_dmaStartClass_conc==1) ? `bm_ready : state_stDMACmd_conc)) :
                 ((state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1) ? `wait_bm_ready : state_stDMACmd_conc)
               );

//OS state updates
assign next_state_os_lba0_abs = (controllable_tag_conc==`os_req) ? i_reqLBA0_abs : state_os_lba0_abs;
assign next_state_os_lba1_abs = (controllable_tag_conc==`os_req) ? i_reqLBA1_abs : state_os_lba1_abs;
assign next_state_os_lba2_abs = (controllable_tag_conc==`os_req) ? i_reqLBA2_abs : state_os_lba2_abs;
assign next_state_os_lba3_abs = (controllable_tag_conc==`os_req) ? i_reqLBA3_abs : state_os_lba3_abs;
assign next_state_os_lba4_abs = (controllable_tag_conc==`os_req) ? i_reqLBA4_abs : state_os_lba4_abs;
assign next_state_os_lba5_abs = (controllable_tag_conc==`os_req) ? i_reqLBA5_abs : state_os_lba5_abs;
assign next_state_os_sect0_abs = (controllable_tag_conc==`os_req) ? i_reqSect0_abs : state_os_sect0_abs;
assign next_state_os_sect1_abs = (controllable_tag_conc==`os_req) ? i_reqSect1_abs : state_os_sect1_abs;
assign next_state_os_buf_abs = (controllable_tag_conc==`os_req) ? i_reqBuf_abs : state_os_buf_abs;

assign next_state_osState_conc = (state_osState_conc==`os_init && controllable_tag_conc==`reset) ? `os_reset :
      ((state_osState_conc==`os_reset && nwc && controllable_tag_conc==`class_event) ? `os_write_cache :
      ((state_osState_conc==`os_write_cache && transferMode3 && controllable_tag_conc==`class_event) ? `os_idle :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`read) ? `os_read_pending :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`write) ? `os_write_pending :
      ((state_osState_conc==`os_read_pending && bm_event && !transferCorrect_0 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_read_ack_succ :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_read_ack_fail :
      ((state_osState_conc==`os_write_pending && bm_event && !transferCorrect_1 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_write_ack_succ :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_write_ack_fail :
      ((state_osState_conc==`os_read_ack_succ && controllable_tag_conc==`ack_read_succ) ? `os_idle :
      ((state_osState_conc==`os_read_ack_fail && controllable_tag_conc==`ack_read_fail) ? `os_idle :
      ((state_osState_conc==`os_write_ack_succ && controllable_tag_conc==`ack_write_succ) ? `os_idle :
      ((state_osState_conc==`os_write_ack_fail && controllable_tag_conc==`ack_write_fail) ? `os_idle : state_osState_conc))))))))))))));


// buechi-to-safety construction:                            
assign buechi_satisfied = (state_osState_conc == `os_idle);                          
                            
assign o_err = (fair_cnt >= 10) || controllable_tag_conc >= 10;

initial
 begin
  state_stDMACmd_conc = `wait_bm_ready;
  state_setFeatState_conc = `setFeatIdle;
  state_regFeature0_abs = 0;
  state_regSectors0_abs = 0;
  state_regSectors1_abs = 0;
  state_regLBALow0_abs = 0;
  state_regLBALow1_abs = 0;
  state_regLBAMid0_abs = 0;
  state_regLBAMid1_abs = 0;
  state_regLBAHigh0_abs = 0;
  state_regLBAHigh1_abs = 0;
  state_regDev_LBA_abs = 0;
  state_regCommand_abs = 0;
  state_regBMCommand_Start_abs = 0;
  state_regBMCommand_RW_abs = 0;
  state_bufAddr_abs = 0;
  state_bufSectors_abs = 0;
  state_osState_conc = `os_init;
  state_os_lba0_abs = 0;
  state_os_lba1_abs = 0;
  state_os_lba2_abs = 0;
  state_os_lba3_abs = 0;
  state_os_lba4_abs = 0;
  state_os_lba5_abs = 0;
  state_os_sect0_abs = 0;
  state_os_sect1_abs = 0;
  state_os_buf_abs = 0;
  fair_cnt = 0;
 end

always @(posedge i_clk)
 begin

  if(buechi_satisfied)
   begin
    fair_cnt = 0;
   end
  else
   begin
    fair_cnt = fair_cnt + 1;
   end
 
  //Device state updates:
  state_regFeature0_abs          = next_state_regFeature0_abs ;
  state_regSectors0_abs          = next_state_regSectors0_abs ;
  state_regSectors1_abs          = next_state_regSectors1_abs ;
  state_regLBALow0_abs           = next_state_regLBALow0_abs ;
  state_regLBALow1_abs           = next_state_regLBALow1_abs ;
  state_regLBAMid0_abs           = next_state_regLBAMid0_abs ;
  state_regLBAMid1_abs           = next_state_regLBAMid1_abs ;
  state_regLBAHigh0_abs          = next_state_regLBAHigh0_abs ;
  state_regLBAHigh1_abs          = next_state_regLBAHigh1_abs ;
  state_regDev_LBA_abs           = next_state_regDev_LBA_abs ;
  state_regCommand_abs           = next_state_regCommand_abs ;
  state_regBMCommand_Start_abs   = next_state_regBMCommand_Start_abs ;
  state_regBMCommand_RW_abs      = next_state_regBMCommand_RW_abs ;
  state_bufAddr_abs              = next_state_bufAddr_abs ;
  state_bufSectors_abs           = next_state_bufSectors_abs ;
  state_setFeatState_conc        = next_state_setFeatState_conc ;
  state_stDMACmd_conc            = next_state_stDMACmd_conc ;
  state_os_lba0_abs              = next_state_os_lba0_abs ;
  state_os_lba1_abs              = next_state_os_lba1_abs ;
  state_os_lba2_abs              = next_state_os_lba2_abs ;
  state_os_lba3_abs              = next_state_os_lba3_abs ;
  state_os_lba4_abs              = next_state_os_lba4_abs ;
  state_os_lba5_abs              = next_state_os_lba5_abs ;
  state_os_sect0_abs             = next_state_os_sect0_abs ;
  state_os_sect1_abs             = next_state_os_sect1_abs ;
  state_os_buf_abs               = next_state_os_buf_abs ;
  state_osState_conc             = next_state_osState_conc ;
 end
 
 
endmodule
-------------------------------
#!SYNTCOMP
SOLVED_BY : 2/3 [2015-pre-classification], 6/11 [SYNTCOMP2016-RealSeq], 3/6 [SYNTCOMP2016-RealPar]
SOLVED_IN : 1549.38 [2015-pre-classification], 0.076 [SYNTCOMP2016-RealSeq], 0.245091 [SYNTCOMP2016-RealPar]
REF_SIZE : 0
STATUS : realizable
#.

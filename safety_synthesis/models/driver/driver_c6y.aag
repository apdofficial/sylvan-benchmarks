aag 715 52 79 1 584
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106 1
108 297
110 305
112 313
114 325
116 333
118 341
120 349
122 357
124 371
126 379
128 387
130 395
132 403
134 411
136 419
138 427
140 497
142 509
144 516
146 531
148 539
150 547
152 555
154 563
156 571
158 579
160 587
162 595
164 611
166 621
168 631
170 12
172 8
174 647
176 657
178 667
180 781
182 793
184 799
186 805
188 811
190 819
192 827
194 835
196 1209
198 1229
200 1239
202 1247
204 1253
206 1259
208 1265
210 1271
212 1277
214 1283
216 1289
218 1295
220 10
222 1298
224 1306
226 1314
228 1325
230 1331
232 1337
234 1343
236 1349
238 1355
240 1365
242 1371
244 1377
246 1383
248 1389
250 1395
252 1401
254 1407
256 1413
258 1419
260 1425
262 1431
275
264 226 106
266 224 106
268 266 264
270 95 93
272 271 96
274 273 269
276 93 91
278 276 95
280 278 97
282 280 54
284 4 3
286 284 7
288 286 282
290 288 8
292 108 106
294 292 289
296 295 291
298 288 10
300 110 106
302 300 289
304 303 299
306 288 12
308 112 106
310 308 289
312 311 307
314 276 94
316 314 97
318 316 28
320 114 106
322 320 317
324 323 319
326 316 30
328 116 106
330 328 317
332 331 327
334 316 32
336 118 106
338 336 317
340 339 335
342 316 14
344 120 106
346 344 317
348 347 343
350 316 16
352 122 106
354 352 317
356 355 351
358 5 2
360 358 7
362 360 282
364 362 8
366 124 106
368 366 363
370 369 365
372 362 10
374 126 106
376 374 363
378 377 373
380 316 68
382 128 106
384 382 317
386 385 381
388 316 70
390 130 106
392 390 317
394 393 389
396 316 72
398 132 106
400 398 317
402 401 397
404 316 34
406 134 106
408 406 317
410 409 405
412 316 36
414 136 106
416 414 317
418 417 413
420 316 38
422 138 106
424 422 317
426 425 421
428 93 90
430 428 95
432 430 96
434 144 106
436 140 106
438 142 106
440 439 437
442 440 435
444 442 432
446 375 366
448 446 444
450 374 366
452 450 444
454 300 292
456 454 308
458 456 452
460 438 436
462 460 435
464 432 56
466 464 462
468 467 436
470 440 434
472 470 56
474 438 437
476 474 435
478 476 98
480 439 436
482 480 435
484 482 88
486 485 479
488 486 473
490 489 432
492 491 468
494 493 459
496 494 449
498 491 438
500 498 467
502 374 367
504 502 444
506 505 459
508 506 501
510 464 440
512 511 434
514 513 453
516 515 506
518 92 91
520 518 95
522 520 97
524 522 74
526 146 106
528 526 523
530 529 525
532 522 76
534 148 106
536 534 523
538 537 533
540 522 78
542 150 106
544 542 523
546 545 541
548 522 80
550 152 106
552 550 523
554 553 549
556 522 82
558 154 106
560 558 523
562 561 557
564 522 84
566 156 106
568 566 523
570 569 565
572 316 48
574 158 106
576 574 317
578 577 573
580 316 50
582 160 106
584 582 317
586 585 581
588 316 52
590 162 106
592 590 317
594 593 589
596 4 2
598 596 7
600 598 282
602 252 106
604 602 600
606 164 106
608 606 601
610 609 605
612 254 106
614 612 600
616 166 106
618 616 601
620 619 615
622 256 106
624 622 600
626 168 106
628 626 601
630 629 625
632 5 3
634 632 6
636 634 282
638 258 106
640 638 636
642 174 106
644 642 637
646 645 641
648 260 106
650 648 636
652 176 106
654 652 637
656 655 651
658 262 106
660 658 636
662 178 106
664 662 637
666 665 661
668 280 55
670 632 7
672 670 668
674 172 106
676 675 8
678 180 106
680 678 677
682 680 672
684 182 106
686 684 678
688 686 86
690 689 678
692 684 679
694 542 309
696 543 308
698 697 695
700 526 293
702 527 292
704 703 701
706 534 301
708 535 300
710 709 707
712 710 704
714 712 698
716 232 106
718 230 106
720 228 106
722 720 719
724 220 106
726 724 722
728 721 718
730 728 725
732 731 727
734 733 717
736 734 714
738 188 106
740 739 566
742 738 567
744 743 741
746 184 106
748 747 550
750 746 551
752 751 749
754 186 106
756 755 558
758 754 559
760 759 757
762 760 752
764 762 744
766 764 736
768 170 106
770 768 766
772 770 46
774 772 692
776 775 691
778 777 673
780 779 683
782 685 677
784 783 672
786 689 686
788 787 693
790 789 673
792 791 785
794 292 288
796 746 289
798 797 795
800 300 288
802 754 289
804 803 801
806 308 288
808 738 289
810 809 807
812 316 100
814 190 106
816 814 317
818 817 813
820 316 102
822 192 106
824 822 317
826 825 821
828 316 104
830 194 106
832 830 317
834 833 829
836 202 106
838 200 106
840 196 106
842 198 106
844 843 841
846 844 839
848 846 837
850 92 90
852 850 95
854 852 97
856 854 848
858 843 840
860 858 839
862 860 837
864 862 478
866 864 432
868 842 841
870 868 839
872 870 837
874 872 472
876 874 432
878 842 840
880 878 839
882 880 837
884 882 316
886 884 67
888 844 838
890 888 837
892 890 688
894 622 423
896 623 422
898 897 895
900 602 407
902 603 406
904 903 901
906 612 415
908 613 414
910 909 907
912 910 904
914 912 898
916 238 106
918 917 626
920 916 627
922 921 919
924 234 106
926 925 606
928 924 607
930 929 927
932 236 106
934 933 616
936 932 617
938 937 935
940 938 930
942 940 922
944 942 914
946 831 658
948 830 659
950 949 947
952 815 638
954 814 639
956 955 953
958 823 648
960 822 649
962 961 959
964 962 956
966 964 950
968 966 944
970 662 337
972 663 336
974 973 971
976 642 321
978 643 320
980 979 977
982 652 329
984 653 328
986 985 983
988 986 980
990 988 974
992 990 968
994 244 106
996 218 106
998 997 994
1000 996 995
1002 1001 999
1004 240 106
1006 214 106
1008 1007 1004
1010 1006 1005
1012 1011 1009
1014 242 106
1016 216 106
1018 1017 1014
1020 1016 1015
1022 1021 1019
1024 1022 1012
1026 1024 1002
1028 1026 992
1030 250 106
1032 1030 591
1034 1031 590
1036 1035 1033
1038 246 106
1040 1038 575
1042 1039 574
1044 1043 1041
1046 248 106
1048 1046 583
1050 1047 582
1052 1051 1049
1054 1052 1044
1056 1054 1036
1058 1056 1028
1060 399 308
1062 398 309
1064 1063 1061
1066 383 292
1068 382 293
1070 1069 1067
1072 391 300
1074 390 301
1076 1075 1073
1078 1076 1070
1080 1078 1064
1082 1080 1058
1084 212 106
1086 1085 738
1088 1084 739
1090 1089 1087
1092 208 106
1094 1093 746
1096 1092 747
1098 1097 1095
1100 210 106
1102 1101 754
1104 1100 755
1106 1105 1103
1108 1106 1098
1110 1108 1090
1112 1110 1082
1114 204 106
1116 1114 345
1118 1115 344
1120 1119 1117
1122 206 106
1124 1122 353
1126 1123 352
1128 1127 1125
1130 1128 1120
1132 1130 1112
1134 1132 725
1136 1135 892
1138 1136 432
1140 892 59
1142 1140 432
1144 858 838
1146 1144 837
1148 1146 688
1150 1132 724
1152 1151 1148
1154 1152 432
1156 1148 58
1158 1156 432
1160 868 838
1162 1160 837
1164 428 94
1166 1164 97
1168 1166 1162
1170 878 838
1172 1170 837
1174 518 94
1176 1174 97
1178 1176 1172
1180 846 836
1182 850 94
1184 1182 97
1186 1184 1180
1188 1187 1179
1190 1188 1169
1192 1190 841
1194 1193 1159
1196 1194 1155
1198 1197 1143
1200 1199 1139
1202 1200 887
1204 1203 877
1206 1205 867
1208 1207 857
1210 860 836
1212 278 96
1214 1212 1210
1216 1215 843
1218 1216 1190
1220 1218 1155
1222 892 432
1224 1223 1220
1226 1225 885
1228 1227 867
1230 1190 838
1232 1148 432
1234 1233 1230
1236 1234 1139
1238 1237 885
1240 1215 836
1242 1240 1190
1244 1243 1233
1246 1244 1139
1248 522 24
1250 1114 523
1252 1251 1249
1254 522 26
1256 1122 523
1258 1257 1255
1260 316 60
1262 1092 317
1264 1263 1261
1266 316 62
1268 1100 317
1270 1269 1267
1272 316 64
1274 1084 317
1276 1275 1273
1278 316 40
1280 1006 317
1282 1281 1279
1284 316 42
1286 1016 317
1288 1287 1285
1290 316 44
1292 996 317
1294 1293 1291
1296 222 106
1298 1297 883
1300 1296 266
1302 1297 267
1304 1303 1301
1306 1304 883
1308 1300 265
1310 1301 264
1312 1311 1309
1314 1313 883
1316 596 6
1318 1316 282
1320 1318 8
1322 1319 720
1324 1323 1321
1326 1318 10
1328 1319 718
1330 1329 1327
1332 1318 12
1334 1319 716
1336 1335 1333
1338 316 18
1340 924 317
1342 1341 1339
1344 316 20
1346 932 317
1348 1347 1345
1350 316 22
1352 916 317
1354 1353 1351
1356 358 6
1358 1356 282
1360 1358 8
1362 1359 1004
1364 1363 1361
1366 1358 10
1368 1359 1014
1370 1369 1367
1372 1358 12
1374 1359 994
1376 1375 1373
1378 1358 1004
1380 1359 1038
1382 1381 1379
1384 1358 1014
1386 1359 1046
1388 1387 1385
1390 1358 994
1392 1359 1030
1394 1393 1391
1396 600 8
1398 602 601
1400 1399 1397
1402 600 10
1404 612 601
1406 1405 1403
1408 600 12
1410 622 601
1412 1411 1409
1414 636 8
1416 638 637
1418 1417 1415
1420 636 10
1422 648 637
1424 1423 1421
1426 636 12
1428 658 637
1430 1429 1427
i0 controllable_addr_abs<0>
i1 controllable_addr_abs<1>
i2 controllable_addr_abs<2>
i3 controllable_write8_val_abs<0>
i4 controllable_write8_val_abs<1>
i5 controllable_write8_val_abs<2>
i6 i_reqBuf_abs<0>
i7 i_reqBuf_abs<1>
i8 i_reqLBA1_abs<0>
i9 i_reqLBA1_abs<1>
i10 i_reqLBA1_abs<2>
i11 controllable_fillPrdAddr_abs<0>
i12 controllable_fillPrdAddr_abs<1>
i13 i_reqLBA3_abs<0>
i14 i_reqLBA3_abs<1>
i15 i_reqLBA3_abs<2>
i16 i_reqLBA0_abs<0>
i17 i_reqLBA0_abs<1>
i18 i_reqLBA0_abs<2>
i19 i_reqLBA4_abs<0>
i20 i_reqLBA4_abs<1>
i21 i_reqLBA4_abs<2>
i22 controllable_dmaStartClass_conc
i23 i_reqLBA5_abs<0>
i24 i_reqLBA5_abs<1>
i25 i_reqLBA5_abs<2>
i26 controllable_bank_abs
i27 controllable_featXFRClass_conc
i28 i_transSuccess_conc
i29 i_reqSect1_abs<0>
i30 i_reqSect1_abs<1>
i31 i_reqSect1_abs<2>
i32 i_osReqType_conc
i33 i_reqSect0_abs<0>
i34 i_reqSect0_abs<1>
i35 i_reqSect0_abs<2>
i36 controllable_fillPrdNSect_abs<0>
i37 controllable_fillPrdNSect_abs<1>
i38 controllable_fillPrdNSect_abs<2>
i39 controllable_fillPrdNSect_abs<3>
i40 controllable_fillPrdNSect_abs<4>
i41 controllable_fillPrdNSect_abs<5>
i42 controllable_busMasterClass_conc
i43 controllable_featWCClass_conc
i44 controllable_tag_conc<0>
i45 controllable_tag_conc<1>
i46 controllable_tag_conc<2>
i47 controllable_tag_conc<3>
i48 controllable_featNWCClass_conc
i49 i_reqLBA2_abs<0>
i50 i_reqLBA2_abs<1>
i51 i_reqLBA2_abs<2>
l0 n107
l1 state_regSectors0_abs<0>_out
l2 state_regSectors0_abs<1>_out
l3 state_regSectors0_abs<2>_out
l4 state_os_lba3_abs<0>_out
l5 state_os_lba3_abs<1>_out
l6 state_os_lba3_abs<2>_out
l7 state_os_buf_abs<0>_out
l8 state_os_buf_abs<1>_out
l9 state_regFeature0_abs<0>_out
l10 state_regFeature0_abs<1>_out
l11 state_os_sect0_abs<0>_out
l12 state_os_sect0_abs<1>_out
l13 state_os_sect0_abs<2>_out
l14 state_os_lba0_abs<0>_out
l15 state_os_lba0_abs<1>_out
l16 state_os_lba0_abs<2>_out
l17 state_setFeatState_conc<0>_out
l18 state_setFeatState_conc<1>_out
l19 state_setFeatState_conc<2>_out
l20 state_bufSectors_abs<0>_out
l21 state_bufSectors_abs<1>_out
l22 state_bufSectors_abs<2>_out
l23 state_bufSectors_abs<3>_out
l24 state_bufSectors_abs<4>_out
l25 state_bufSectors_abs<5>_out
l26 state_os_lba5_abs<0>_out
l27 state_os_lba5_abs<1>_out
l28 state_os_lba5_abs<2>_out
l29 state_regLBALow1_abs<0>_out
l30 state_regLBALow1_abs<1>_out
l31 state_regLBALow1_abs<2>_out
l32 state_regDev_LBA_abs_out
l33 state_regBMCommand_Start_abs_out
l34 state_regLBAMid1_abs<0>_out
l35 state_regLBAMid1_abs<1>_out
l36 state_regLBAMid1_abs<2>_out
l37 state_stDMACmd_conc<0>_out
l38 state_stDMACmd_conc<1>_out
l39 state_regSectors1_abs<0>_out
l40 state_regSectors1_abs<1>_out
l41 state_regSectors1_abs<2>_out
l42 state_os_lba2_abs<0>_out
l43 state_os_lba2_abs<1>_out
l44 state_os_lba2_abs<2>_out
l45 state_osState_conc<0>_out
l46 state_osState_conc<1>_out
l47 state_osState_conc<2>_out
l48 state_osState_conc<3>_out
l49 state_bufAddr_abs<0>_out
l50 state_bufAddr_abs<1>_out
l51 state_os_sect1_abs<0>_out
l52 state_os_sect1_abs<1>_out
l53 state_os_sect1_abs<2>_out
l54 state_os_lba4_abs<0>_out
l55 state_os_lba4_abs<1>_out
l56 state_os_lba4_abs<2>_out
l57 state_regBMCommand_RW_abs_out
l58 fair_cnt<0>_out
l59 fair_cnt<1>_out
l60 fair_cnt<2>_out
l61 state_regCommand_abs<0>_out
l62 state_regCommand_abs<1>_out
l63 state_regCommand_abs<2>_out
l64 state_os_lba1_abs<0>_out
l65 state_os_lba1_abs<1>_out
l66 state_os_lba1_abs<2>_out
l67 state_regLBAHigh0_abs<0>_out
l68 state_regLBAHigh0_abs<1>_out
l69 state_regLBAHigh0_abs<2>_out
l70 state_regLBAHigh1_abs<0>_out
l71 state_regLBAHigh1_abs<1>_out
l72 state_regLBAHigh1_abs<2>_out
l73 state_regLBALow0_abs<0>_out
l74 state_regLBALow0_abs<1>_out
l75 state_regLBALow0_abs<2>_out
l76 state_regLBAMid0_abs<0>_out
l77 state_regLBAMid0_abs<1>_out
l78 state_regLBAMid0_abs<2>_out
o0 o_err
c
ide_hard_drive_controller_2
This file was written by ABC on Tue Mar 11 20:24:17 2014
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv driver_c6.v   ---gives--> driver_c6.mv
> abc -c "read_blif_mv driver_c6.mv; strash; refactor; rewrite; dfraig; rewrite; dfraig; write_aiger -s driver_c6y.aig"   ---gives--> driver_c6y.aig
> aigtoaig driver_c6y.aig driver_c6y.aag   ---gives--> driver_c6y.aag (this file)
Content of driver_c6.v:
// IDE hard drive controller specification and operating system interface
// specification for device driver synthesis.
// This file describes a GR(1) game played by a device driver for an IDE hard
// disk against its environment consisting of the hard disk and operating
// system.

`define WIDTH1 2
`define WIDTH2 1

`define CMD_READ_DMA_EXT  1
`define CMD_WRITE_DMA_EXT 2
`define FEAT_WC           1
`define FEAT_NWC          2
`define FEAT_XFR_MODE     3
`define XM_ULTRA_DMA      7

`define RCMD              1
`define REG_FEATURE0      1
`define REG_SECTORS       2
`define REG_LBA_LOW       3
`define REG_LBA_MID       4
`define REG_LBA_HIGH      5
`define REG_DEV           6
`define REG_ERRCMD        7

`define RDMA              0
`define REG_BM_COMMAND    0

//typedef enum {read=0, write=1} i_osReqType_enum;
`define read              0
`define write             1

//typedef enum {write8, write32, fillPrd, reset, os_req, ack_read_succ, ack_read_fail, ack_write_succ, ack_write_fail, class_event} controllable_tag_enum;
`define write8            0
`define write32           1
`define fillPrd           2
`define reset             3
`define os_req            4
`define ack_read_succ     5
`define ack_read_fail     6
`define ack_write_succ    7
`define ack_write_fail    8
`define class_event       9

//typedef enum {wait_bm_ready=0, dma_read=1, bm_read_prd=2, bm_ready=3} state_stDMACmd_enum;
`define wait_bm_ready     0
`define dma_read          1
`define bm_read_prd       2
`define bm_ready          3


//typedef enum {setFeatIdle=0, setFeatWC=1, setFeatNWC=2, setFeatXFR0=3, setFeatXFR1=4} state_setFeatState_enum;
`define setFeatIdle       0
`define setFeatWC         1
`define setFeatNWC        2
`define setFeatXFR0       3
`define setFeatXFR1       4

//typedef enum {os_init=0, os_reset=1, os_write_cache=2, os_idle=3, os_read_pending=4, os_write_pending=5, os_read_ack_succ=6, os_read_ack_fail=7, os_write_ack_succ=8, os_write_ack_fail=9, os_error=10} state_osState_enum;
`define os_init           0
`define os_reset          1
`define os_write_cache    2
`define os_idle           3
`define os_read_pending   4
`define os_write_pending  5
`define os_read_ack_succ  6
`define os_read_ack_fail  7
`define os_write_ack_succ 8
`define os_write_ack_fail 9
`define os_error          10

module ide_hard_drive_controller_2(
        o_err,
        i_clk,
        i_osReqType_conc,
        i_reqLBA0_abs,
        i_reqLBA1_abs,
        i_reqLBA2_abs,
        i_reqLBA3_abs,
        i_reqLBA4_abs,
        i_reqLBA5_abs,
        i_reqSect0_abs,
        i_reqSect1_abs,
        i_reqBuf_abs,
        i_transSuccess_conc,
        controllable_tag_conc,
        controllable_bank_abs,
        controllable_addr_abs,
        controllable_write8_val_abs,
        controllable_fillPrdAddr_abs,
        controllable_fillPrdNSect_abs,
        controllable_featWCClass_conc,
        controllable_featNWCClass_conc,
        controllable_featXFRClass_conc,
        controllable_busMasterClass_conc,
        controllable_dmaStartClass_conc );

input i_clk;
input i_osReqType_conc ;
input [`WIDTH1:0] i_reqLBA0_abs ;
input [`WIDTH1:0] i_reqLBA1_abs ;
input [`WIDTH1:0] i_reqLBA2_abs ;
input [`WIDTH1:0] i_reqLBA3_abs ;
input [`WIDTH1:0] i_reqLBA4_abs ;
input [`WIDTH1:0] i_reqLBA5_abs ;
input [`WIDTH1:0] i_reqSect0_abs ;
input [`WIDTH1:0] i_reqSect1_abs ;
input [`WIDTH2:0] i_reqBuf_abs ;
input i_transSuccess_conc ;
input [3:0] controllable_tag_conc ;
input controllable_bank_abs ;
input [2:0] controllable_addr_abs ;
input [`WIDTH1:0] controllable_write8_val_abs ;
input [`WIDTH2:0] controllable_fillPrdAddr_abs ;
input [5:0] controllable_fillPrdNSect_abs ;
input controllable_featWCClass_conc ;
input controllable_featNWCClass_conc ;
input controllable_featXFRClass_conc ;
input controllable_busMasterClass_conc ;
input controllable_dmaStartClass_conc ;
output o_err;

reg [1:0] state_stDMACmd_conc ;
reg [2:0] state_setFeatState_conc ;
reg [1:0] state_regFeature0_abs ;
reg [`WIDTH1:0] state_regSectors0_abs ;
reg [`WIDTH1:0] state_regSectors1_abs ;
reg [`WIDTH1:0] state_regLBALow0_abs ;
reg [`WIDTH1:0] state_regLBALow1_abs ;
reg [`WIDTH1:0] state_regLBAMid0_abs ;
reg [`WIDTH1:0] state_regLBAMid1_abs ;
reg [`WIDTH1:0] state_regLBAHigh0_abs ;
reg [`WIDTH1:0] state_regLBAHigh1_abs ;
reg state_regDev_LBA_abs ;
reg [`WIDTH1:0] state_regCommand_abs ;
reg state_regBMCommand_Start_abs ;
reg state_regBMCommand_RW_abs ;
reg [`WIDTH2:0] state_bufAddr_abs ;
reg [5:0] state_bufSectors_abs ;

reg [3:0] state_osState_conc ;
reg [`WIDTH1:0] state_os_lba0_abs ;
reg [`WIDTH1:0] state_os_lba1_abs ;
reg [`WIDTH1:0] state_os_lba2_abs ;
reg [`WIDTH1:0] state_os_lba3_abs ;
reg [`WIDTH1:0] state_os_lba4_abs ;
reg [`WIDTH1:0] state_os_lba5_abs ;
reg [`WIDTH1:0] state_os_sect0_abs ;
reg [`WIDTH1:0] state_os_sect1_abs ;
reg [`WIDTH2:0] state_os_buf_abs ;

reg [2:0] fair_cnt;

wire transferMode3;
wire nwc;
wire bm_event;
wire transferCorrect;
wire transferCorrect_0;
wire transferCorrect_1;
wire buechi_satisfied;
wire [1:0] next_state_stDMACmd_conc ;
wire [2:0] next_state_setFeatState_conc ;
wire [1:0] next_state_regFeature0_abs ;
wire [`WIDTH1:0] next_state_regSectors0_abs ;
wire [`WIDTH1:0] next_state_regSectors1_abs ;
wire [`WIDTH1:0] next_state_regLBALow0_abs ;
wire [`WIDTH1:0] next_state_regLBALow1_abs ;
wire [`WIDTH1:0] next_state_regLBAMid0_abs ;
wire [`WIDTH1:0] next_state_regLBAMid1_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh0_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh1_abs ;
wire next_state_regDev_LBA_abs ;
wire [`WIDTH1:0] next_state_regCommand_abs ;
wire next_state_regBMCommand_Start_abs ;
wire next_state_regBMCommand_RW_abs ;
wire [`WIDTH2:0] next_state_bufAddr_abs ;
wire [5:0] next_state_bufSectors_abs ;

wire [3:0] next_state_osState_conc ;
wire [`WIDTH1:0] next_state_os_lba0_abs ;
wire [`WIDTH1:0] next_state_os_lba1_abs ;
wire [`WIDTH1:0] next_state_os_lba2_abs ;
wire [`WIDTH1:0] next_state_os_lba3_abs ;
wire [`WIDTH1:0] next_state_os_lba4_abs ;
wire [`WIDTH1:0] next_state_os_lba5_abs ;
wire [`WIDTH1:0] next_state_os_sect0_abs ;
wire [`WIDTH1:0] next_state_os_sect1_abs ;
wire [`WIDTH2:0] next_state_os_buf_abs ;

// some abbreviations:
assign transferMode3 = (state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1);
assign nwc =           (state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1);
assign bm_event = (state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1);
assign transferCorrect = (state_os_lba0_abs==state_regLBALow0_abs    &&
                          state_os_lba1_abs==state_regLBALow1_abs    &&
                          state_os_lba2_abs==state_regLBAMid0_abs    &&
                          state_os_lba3_abs==state_regLBAMid1_abs    &&
                          state_os_lba4_abs==state_regLBAHigh0_abs   &&
                          state_os_lba5_abs==state_regLBAHigh1_abs   &&
                          state_os_sect0_abs==state_regSectors0_abs  &&
                          state_os_sect1_abs==state_regSectors1_abs  &&
                          state_os_buf_abs==state_bufAddr_abs);
assign transferCorrect_0 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==0);
assign transferCorrect_1 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==1);


// state updates:
  //Device state updates:
assign next_state_regFeature0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_FEATURE0) ? controllable_write8_val_abs  : state_regFeature0_abs;
assign next_state_regSectors0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? controllable_write8_val_abs  : state_regSectors0_abs;
assign next_state_regSectors1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? state_regSectors0_abs : state_regSectors1_abs;
assign next_state_regLBALow0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? controllable_write8_val_abs  : state_regLBALow0_abs;
assign next_state_regLBALow1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? state_regLBALow0_abs  : state_regLBALow1_abs;
assign next_state_regLBAMid0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? controllable_write8_val_abs  : state_regLBAMid0_abs;
assign next_state_regLBAMid1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? state_regLBAMid0_abs  : state_regLBAMid1_abs;
assign next_state_regLBAHigh0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? controllable_write8_val_abs  : state_regLBAHigh0_abs;
assign next_state_regLBAHigh1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? state_regLBAHigh0_abs : state_regLBAHigh1_abs;
assign next_state_regDev_LBA_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_DEV)      ? controllable_write8_val_abs[2:2] : state_regDev_LBA_abs;
assign next_state_regCommand_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_ERRCMD)   ? controllable_write8_val_abs  : state_regCommand_abs;
assign next_state_regBMCommand_Start_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[0:0] : state_regBMCommand_Start_abs;
assign next_state_regBMCommand_RW_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[1:1] : state_regBMCommand_RW_abs;
assign next_state_bufAddr_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdAddr_abs : state_bufAddr_abs;
assign next_state_bufSectors_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdNSect_abs : state_bufSectors_abs;

assign next_state_setFeatState_conc = (controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_WC) ? `setFeatWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_NWC) ? `setFeatNWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE && state_regSectors0_abs==`XM_ULTRA_DMA) ? `setFeatXFR0 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE) ? `setFeatXFR1 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatWC   && controllable_featWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR0 && controllable_featXFRClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1) ? `setFeatIdle : state_setFeatState_conc)))))));

assign next_state_stDMACmd_conc = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ?
               (
                 (state_regBMCommand_Start_abs==0 && controllable_write8_val_abs[0:0]==1) ? `bm_read_prd : state_stDMACmd_conc
               ) :
               (
                 (state_stDMACmd_conc==`bm_read_prd) ?
                 (((state_regBMCommand_RW_abs == 1 && state_regCommand_abs != `CMD_READ_DMA_EXT) || (state_regBMCommand_RW_abs == 0 && state_regCommand_abs != `CMD_WRITE_DMA_EXT) || (state_regSectors0_abs != state_bufSectors_abs[`WIDTH1:0]) || (state_regSectors1_abs != state_bufSectors_abs[5:3]) || state_regDev_LBA_abs != 1) ? state_stDMACmd_conc : ((controllable_dmaStartClass_conc==1) ? `bm_ready : state_stDMACmd_conc)) :
                 ((state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1) ? `wait_bm_ready : state_stDMACmd_conc)
               );

//OS state updates
assign next_state_os_lba0_abs = (controllable_tag_conc==`os_req) ? i_reqLBA0_abs : state_os_lba0_abs;
assign next_state_os_lba1_abs = (controllable_tag_conc==`os_req) ? i_reqLBA1_abs : state_os_lba1_abs;
assign next_state_os_lba2_abs = (controllable_tag_conc==`os_req) ? i_reqLBA2_abs : state_os_lba2_abs;
assign next_state_os_lba3_abs = (controllable_tag_conc==`os_req) ? i_reqLBA3_abs : state_os_lba3_abs;
assign next_state_os_lba4_abs = (controllable_tag_conc==`os_req) ? i_reqLBA4_abs : state_os_lba4_abs;
assign next_state_os_lba5_abs = (controllable_tag_conc==`os_req) ? i_reqLBA5_abs : state_os_lba5_abs;
assign next_state_os_sect0_abs = (controllable_tag_conc==`os_req) ? i_reqSect0_abs : state_os_sect0_abs;
assign next_state_os_sect1_abs = (controllable_tag_conc==`os_req) ? i_reqSect1_abs : state_os_sect1_abs;
assign next_state_os_buf_abs = (controllable_tag_conc==`os_req) ? i_reqBuf_abs : state_os_buf_abs;

assign next_state_osState_conc = (state_osState_conc==`os_init && controllable_tag_conc==`reset) ? `os_reset :
      ((state_osState_conc==`os_reset && nwc && controllable_tag_conc==`class_event) ? `os_write_cache :
      ((state_osState_conc==`os_write_cache && transferMode3 && controllable_tag_conc==`class_event) ? `os_idle :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`read) ? `os_read_pending :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`write) ? `os_write_pending :
      ((state_osState_conc==`os_read_pending && bm_event && !transferCorrect_0 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_read_ack_succ :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_read_ack_fail :
      ((state_osState_conc==`os_write_pending && bm_event && !transferCorrect_1 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_write_ack_succ :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_write_ack_fail :
      ((state_osState_conc==`os_read_ack_succ && controllable_tag_conc==`ack_read_succ) ? `os_idle :
      ((state_osState_conc==`os_read_ack_fail && controllable_tag_conc==`ack_read_fail) ? `os_idle :
      ((state_osState_conc==`os_write_ack_succ && controllable_tag_conc==`ack_write_succ) ? `os_idle :
      ((state_osState_conc==`os_write_ack_fail && controllable_tag_conc==`ack_write_fail) ? `os_idle : state_osState_conc))))))))))))));


// buechi-to-safety construction:                            
assign buechi_satisfied = (state_osState_conc == `os_idle);                          
                            
assign o_err = (fair_cnt >= 6) || controllable_tag_conc >= 10;

initial
 begin
  state_stDMACmd_conc = `wait_bm_ready;
  state_setFeatState_conc = `setFeatIdle;
  state_regFeature0_abs = 0;
  state_regSectors0_abs = 0;
  state_regSectors1_abs = 0;
  state_regLBALow0_abs = 0;
  state_regLBALow1_abs = 0;
  state_regLBAMid0_abs = 0;
  state_regLBAMid1_abs = 0;
  state_regLBAHigh0_abs = 0;
  state_regLBAHigh1_abs = 0;
  state_regDev_LBA_abs = 0;
  state_regCommand_abs = 0;
  state_regBMCommand_Start_abs = 0;
  state_regBMCommand_RW_abs = 0;
  state_bufAddr_abs = 0;
  state_bufSectors_abs = 0;
  state_osState_conc = `os_init;
  state_os_lba0_abs = 0;
  state_os_lba1_abs = 0;
  state_os_lba2_abs = 0;
  state_os_lba3_abs = 0;
  state_os_lba4_abs = 0;
  state_os_lba5_abs = 0;
  state_os_sect0_abs = 0;
  state_os_sect1_abs = 0;
  state_os_buf_abs = 0;
  fair_cnt = 0;
 end

always @(posedge i_clk)
 begin

  if(buechi_satisfied)
   begin
    fair_cnt = 0;
   end
  else
   begin
    fair_cnt = fair_cnt + 1;
   end
 
  //Device state updates:
  state_regFeature0_abs          = next_state_regFeature0_abs ;
  state_regSectors0_abs          = next_state_regSectors0_abs ;
  state_regSectors1_abs          = next_state_regSectors1_abs ;
  state_regLBALow0_abs           = next_state_regLBALow0_abs ;
  state_regLBALow1_abs           = next_state_regLBALow1_abs ;
  state_regLBAMid0_abs           = next_state_regLBAMid0_abs ;
  state_regLBAMid1_abs           = next_state_regLBAMid1_abs ;
  state_regLBAHigh0_abs          = next_state_regLBAHigh0_abs ;
  state_regLBAHigh1_abs          = next_state_regLBAHigh1_abs ;
  state_regDev_LBA_abs           = next_state_regDev_LBA_abs ;
  state_regCommand_abs           = next_state_regCommand_abs ;
  state_regBMCommand_Start_abs   = next_state_regBMCommand_Start_abs ;
  state_regBMCommand_RW_abs      = next_state_regBMCommand_RW_abs ;
  state_bufAddr_abs              = next_state_bufAddr_abs ;
  state_bufSectors_abs           = next_state_bufSectors_abs ;
  state_setFeatState_conc        = next_state_setFeatState_conc ;
  state_stDMACmd_conc            = next_state_stDMACmd_conc ;
  state_os_lba0_abs              = next_state_os_lba0_abs ;
  state_os_lba1_abs              = next_state_os_lba1_abs ;
  state_os_lba2_abs              = next_state_os_lba2_abs ;
  state_os_lba3_abs              = next_state_os_lba3_abs ;
  state_os_lba4_abs              = next_state_os_lba4_abs ;
  state_os_lba5_abs              = next_state_os_lba5_abs ;
  state_os_sect0_abs             = next_state_os_sect0_abs ;
  state_os_sect1_abs             = next_state_os_sect1_abs ;
  state_os_buf_abs               = next_state_os_buf_abs ;
  state_osState_conc             = next_state_osState_conc ;
 end
 
 
endmodule
-------------------------------
#!SYNTCOMP
STATUS : unrealizable
SOLVED_BY : 3/3 [2015-pre-classification]
SOLVED_IN : 11.2255 [2015-pre-classification]
#.

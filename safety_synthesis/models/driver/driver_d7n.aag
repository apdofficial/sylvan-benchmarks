aag 768 40 55 1 673
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82 1
84 293
86 305
88 317
90 333
92 345
94 363
96 375
98 387
100 399
102 411
104 423
106 435
108 447
110 545
112 564
114 582
116 599
118 611
120 623
122 635
124 647
126 659
128 683
130 701
132 719
134 729
136 743
138 897
140 925
142 931
144 937
146 943
148 1297
150 1346
152 1384
154 1422
156 1429
158 1435
160 1441
162 1447
164 1453
166 1459
168 1460
170 1468
172 1478
174 1489
176 1495
178 1501
180 1507
182 1513
184 1519
186 1525
188 1531
190 1537
267
192 173 82
194 172 82
196 193 82
198 171 82
200 170 82
202 199 82
204 169 82
206 168 82
208 205 82
210 209 203
212 211 202
214 212 208
216 215 197
218 217 196
220 218 214
222 208 203
224 209 200
226 225 223
228 214 197
230 215 194
232 231 229
234 226 208
236 234 232
238 237 221
240 77 75
242 240 79
244 243 78
246 244 241
248 76 74
250 249 241
252 241 79
254 240 78
256 255 253
258 74 73
260 258 250
262 260 256
264 263 247
266 264 238
268 75 73
270 268 77
272 270 79
274 272 36
276 4 3
278 276 7
280 278 274
282 85 82
284 84 82
286 283 82
288 280 8
290 284 281
292 291 289
294 87 82
296 86 82
298 295 82
300 280 10
302 296 281
304 303 301
306 89 82
308 88 82
310 307 82
312 280 12
314 308 281
316 315 313
318 268 76
320 318 79
322 91 82
324 90 82
326 323 82
328 320 14
330 324 321
332 331 329
334 93 82
336 92 82
338 335 82
340 320 16
342 336 321
344 343 341
346 5 2
348 346 7
350 348 274
352 95 82
354 94 82
356 353 82
358 350 8
360 354 351
362 361 359
364 97 82
366 96 82
368 365 82
370 350 10
372 366 351
374 373 371
376 99 82
378 98 82
380 377 82
382 320 50
384 378 321
386 385 383
388 101 82
390 100 82
392 389 82
394 320 52
396 390 321
398 397 395
400 103 82
402 102 82
404 401 82
406 320 54
408 402 321
410 409 407
412 105 82
414 104 82
416 413 82
418 320 28
420 414 321
422 421 419
424 107 82
426 106 82
428 425 82
430 320 30
432 426 321
434 433 431
436 109 82
438 108 82
440 437 82
442 320 32
444 438 321
446 445 443
448 75 72
450 448 77
452 450 78
454 111 82
456 110 82
458 455 82
460 113 82
462 112 82
464 461 82
466 115 82
468 114 82
470 467 82
472 463 457
474 472 469
476 474 452
478 367 356
480 478 476
482 368 355
484 482 476
486 368 356
488 486 476
490 298 286
492 490 310
494 492 488
496 463 458
498 496 469
500 498 452
502 500 70
504 464 457
506 504 469
508 506 452
510 508 80
512 464 458
514 512 469
516 514 452
518 516 38
520 472 470
522 520 452
524 522 38
526 525 456
528 526 519
530 528 511
532 530 503
534 532 489
536 534 495
538 537 495
540 539 485
542 540 481
544 543 481
546 525 462
548 546 519
550 548 511
552 550 503
554 552 489
556 554 495
558 557 495
560 559 485
562 561 485
564 563 481
566 525 468
568 566 519
570 568 511
572 570 503
574 572 489
576 575 489
578 577 495
580 578 485
582 580 481
584 258 77
586 584 79
588 117 82
590 116 82
592 589 82
594 586 56
596 590 587
598 597 595
600 119 82
602 118 82
604 601 82
606 586 58
608 602 587
610 609 607
612 121 82
614 120 82
616 613 82
618 586 60
620 614 587
622 621 619
624 123 82
626 122 82
628 625 82
630 586 62
632 626 587
634 633 631
636 125 82
638 124 82
640 637 82
642 586 64
644 638 587
646 645 643
648 127 82
650 126 82
652 649 82
654 586 66
656 650 587
658 657 655
660 4 2
662 660 7
664 662 274
666 187 82
668 186 82
670 667 82
672 129 82
674 128 82
676 673 82
678 668 664
680 674 665
682 681 679
684 189 82
686 188 82
688 685 82
690 131 82
692 130 82
694 691 82
696 686 664
698 692 665
700 699 697
702 191 82
704 190 82
706 703 82
708 133 82
710 132 82
712 709 82
714 704 664
716 710 665
718 717 715
720 276 6
722 720 274
724 722 12
726 723 12
728 727 725
730 272 37
732 5 3
734 732 7
736 734 730
738 736 8
740 737 8
742 741 739
744 136 82
746 745 8
748 139 82
750 138 82
752 749 82
754 750 747
756 141 82
758 140 82
760 757 82
762 760 751
764 167 82
766 166 82
768 765 82
770 175 82
772 174 82
774 771 82
776 177 82
778 176 82
780 777 82
782 178 82
784 779 774
786 784 783
788 787 768
790 780 773
792 790 783
794 793 767
796 795 789
798 590 287
800 593 284
802 801 799
804 602 299
806 605 296
808 807 805
810 614 311
812 617 308
814 813 811
816 808 802
818 816 814
820 818 796
822 143 82
824 142 82
826 823 82
828 827 626
830 824 629
832 831 829
834 145 82
836 144 82
838 835 82
840 839 638
842 836 641
844 843 841
846 147 82
848 146 82
850 847 82
852 851 650
854 848 653
856 855 853
858 844 832
860 858 856
862 860 820
864 135 82
866 865 82
868 866 862
870 750 35
872 871 35
874 869 750
876 873 868
878 877 875
880 760 752
882 880 68
884 883 750
886 879 762
888 884 763
890 889 887
892 754 736
894 891 737
896 895 893
898 758 747
900 899 747
902 758 35
904 903 35
906 869 758
908 905 868
910 909 907
912 883 758
914 911 762
916 912 763
918 917 915
920 901 736
922 919 737
924 923 921
926 284 280
928 824 281
930 929 927
932 296 280
934 836 281
936 935 933
938 308 280
940 848 281
942 941 939
944 149 82
946 148 82
948 945 82
950 151 82
952 150 82
954 951 82
956 153 82
958 152 82
960 957 82
962 155 82
964 154 82
966 963 82
968 953 947
970 968 959
972 970 965
974 74 72
976 974 77
978 976 79
980 978 972
982 953 948
984 982 959
986 984 965
988 506 80
990 988 986
992 990 452
994 954 947
996 994 959
998 996 965
1000 520 38
1002 1000 998
1004 1002 452
1006 954 948
1008 1006 959
1010 1008 965
1012 1010 320
1014 1012 49
1016 1012 48
1018 968 960
1020 1018 965
1022 1020 882
1024 668 417
1026 671 414
1028 1027 1025
1030 686 429
1032 689 426
1034 1033 1031
1036 704 441
1038 707 438
1040 1039 1037
1042 1034 1028
1044 1042 1040
1046 181 82
1048 180 82
1050 1047 82
1052 1051 674
1054 1048 677
1056 1055 1053
1058 183 82
1060 182 82
1062 1059 82
1064 1063 692
1066 1060 695
1068 1067 1065
1070 185 82
1072 184 82
1074 1071 82
1076 1075 710
1078 1072 713
1080 1079 1077
1082 1068 1056
1084 1082 1080
1086 1084 1044
1088 381 284
1090 378 287
1092 1091 1089
1094 393 296
1096 390 299
1098 1097 1095
1100 405 308
1102 402 311
1104 1103 1101
1106 1098 1092
1108 1106 1104
1110 1108 1086
1112 161 82
1114 160 82
1116 1113 82
1118 1117 824
1120 1114 827
1122 1121 1119
1124 163 82
1126 162 82
1128 1125 82
1130 1129 836
1132 1126 839
1134 1133 1131
1136 165 82
1138 164 82
1140 1137 82
1142 1141 848
1144 1138 851
1146 1145 1143
1148 1134 1122
1150 1148 1146
1152 1150 1110
1154 157 82
1156 156 82
1158 1155 82
1160 1156 327
1162 1159 324
1164 1163 1161
1166 159 82
1168 158 82
1170 1167 82
1172 1168 339
1174 1171 336
1176 1175 1173
1178 1176 1164
1180 1178 1152
1182 1180 767
1184 1183 1022
1186 1184 452
1188 1022 40
1190 1188 452
1192 1022 41
1194 1192 452
1196 982 960
1198 1196 965
1200 1198 882
1202 1180 768
1204 1203 1200
1206 1204 452
1208 1200 40
1210 1208 452
1212 1200 41
1214 1212 452
1216 994 960
1218 1216 965
1220 448 76
1222 1220 79
1224 1222 1218
1226 1006 960
1228 1226 965
1230 258 76
1232 1230 79
1234 1232 1228
1236 970 966
1238 974 76
1240 1238 79
1242 1240 1236
1244 984 966
1246 270 78
1248 1246 1244
1250 1249 946
1252 1251 1249
1254 1253 1243
1256 1255 1243
1258 1257 1235
1260 1259 1235
1262 1261 1225
1264 1263 1225
1266 1265 1215
1268 1267 1215
1270 1269 1211
1272 1270 1207
1274 1272 1195
1276 1275 1195
1278 1277 1191
1280 1278 1187
1282 1280 1017
1284 1283 1017
1286 1285 1015
1288 1286 1005
1290 1289 1005
1292 1291 993
1294 1292 981
1296 1295 981
1298 1249 952
1300 1299 1249
1302 1301 1243
1304 1303 1243
1306 1305 1235
1308 1307 1235
1310 1309 1225
1312 1311 1225
1314 1313 1215
1316 1314 1211
1318 1316 1207
1320 1319 1207
1322 1321 1195
1324 1323 1195
1326 1325 1191
1328 1327 1191
1330 1329 1187
1332 1331 1187
1334 1333 1017
1336 1334 1015
1338 1336 1005
1340 1339 1005
1342 1341 993
1344 1343 993
1346 1345 981
1348 1249 958
1350 1348 1243
1352 1350 1235
1354 1352 1225
1356 1354 1215
1358 1356 1211
1360 1358 1207
1362 1360 1195
1364 1363 1195
1366 1365 1191
1368 1367 1191
1370 1369 1187
1372 1370 1017
1374 1373 1017
1376 1375 1015
1378 1377 1015
1380 1379 1005
1382 1380 993
1384 1382 981
1386 1249 964
1388 1386 1243
1390 1388 1235
1392 1390 1225
1394 1392 1215
1396 1395 1215
1398 1397 1211
1400 1399 1211
1402 1401 1207
1404 1403 1207
1406 1405 1195
1408 1406 1191
1410 1408 1187
1412 1411 1187
1414 1413 1017
1416 1414 1015
1418 1416 1005
1420 1418 993
1422 1420 981
1424 586 24
1426 1156 587
1428 1427 1425
1430 586 26
1432 1168 587
1434 1433 1431
1436 320 42
1438 1114 321
1440 1439 1437
1442 320 44
1444 1126 321
1446 1445 1443
1448 320 46
1450 1138 321
1452 1451 1449
1454 736 10
1456 737 10
1458 1457 1455
1460 1011 209
1462 206 203
1464 207 200
1466 1465 1463
1468 1467 1011
1470 206 200
1472 1470 197
1474 1471 194
1476 1475 1473
1478 1477 1011
1480 660 6
1482 1480 274
1484 1482 8
1486 1483 772
1488 1487 1485
1490 1482 10
1492 1483 778
1494 1493 1491
1496 1482 12
1498 1483 782
1500 1499 1497
1502 320 18
1504 1048 321
1506 1505 1503
1508 320 20
1510 1060 321
1512 1511 1509
1514 320 22
1516 1072 321
1518 1517 1515
1520 664 8
1522 668 665
1524 1523 1521
1526 664 10
1528 686 665
1530 1529 1527
1532 664 12
1534 704 665
1536 1535 1533
i0 controllable_addr_abs<0>
i1 controllable_addr_abs<1>
i2 controllable_addr_abs<2>
i3 controllable_write8_val_abs<0>
i4 controllable_write8_val_abs<1>
i5 controllable_write8_val_abs<2>
i6 i_reqBuf_abs<0>
i7 i_reqBuf_abs<1>
i8 i_reqLBA1_abs<0>
i9 i_reqLBA1_abs<1>
i10 i_reqLBA1_abs<2>
i11 controllable_fillPrdAddr_abs<0>
i12 controllable_fillPrdAddr_abs<1>
i13 i_reqLBA0_abs<0>
i14 i_reqLBA0_abs<1>
i15 i_reqLBA0_abs<2>
i16 controllable_dmaStartClass_conc
i17 controllable_bank_abs
i18 controllable_featXFRClass_conc
i19 i_transSuccess_conc
i20 i_reqSect1_abs<0>
i21 i_reqSect1_abs<1>
i22 i_reqSect1_abs<2>
i23 i_osReqType_conc
i24 i_reqSect0_abs<0>
i25 i_reqSect0_abs<1>
i26 i_reqSect0_abs<2>
i27 controllable_fillPrdNSect_abs<0>
i28 controllable_fillPrdNSect_abs<1>
i29 controllable_fillPrdNSect_abs<2>
i30 controllable_fillPrdNSect_abs<3>
i31 controllable_fillPrdNSect_abs<4>
i32 controllable_fillPrdNSect_abs<5>
i33 controllable_busMasterClass_conc
i34 controllable_featWCClass_conc
i35 controllable_tag_conc<0>
i36 controllable_tag_conc<1>
i37 controllable_tag_conc<2>
i38 controllable_tag_conc<3>
i39 controllable_featNWCClass_conc
l0 n83
l1 state_regSectors0_abs<0>_out
l2 state_regSectors0_abs<1>_out
l3 state_regSectors0_abs<2>_out
l4 state_os_buf_abs<0>_out
l5 state_os_buf_abs<1>_out
l6 state_regFeature0_abs<0>_out
l7 state_regFeature0_abs<1>_out
l8 state_os_sect0_abs<0>_out
l9 state_os_sect0_abs<1>_out
l10 state_os_sect0_abs<2>_out
l11 state_os_lba0_abs<0>_out
l12 state_os_lba0_abs<1>_out
l13 state_os_lba0_abs<2>_out
l14 state_setFeatState_conc<0>_out
l15 state_setFeatState_conc<1>_out
l16 state_setFeatState_conc<2>_out
l17 state_bufSectors_abs<0>_out
l18 state_bufSectors_abs<1>_out
l19 state_bufSectors_abs<2>_out
l20 state_bufSectors_abs<3>_out
l21 state_bufSectors_abs<4>_out
l22 state_bufSectors_abs<5>_out
l23 state_regLBALow1_abs<0>_out
l24 state_regLBALow1_abs<1>_out
l25 state_regLBALow1_abs<2>_out
l26 state_regDev_LBA_abs_out
l27 state_regBMCommand_Start_abs_out
l28 state_stDMACmd_conc<0>_out
l29 state_stDMACmd_conc<1>_out
l30 state_regSectors1_abs<0>_out
l31 state_regSectors1_abs<1>_out
l32 state_regSectors1_abs<2>_out
l33 state_osState_conc<0>_out
l34 state_osState_conc<1>_out
l35 state_osState_conc<2>_out
l36 state_osState_conc<3>_out
l37 state_bufAddr_abs<0>_out
l38 state_bufAddr_abs<1>_out
l39 state_os_sect1_abs<0>_out
l40 state_os_sect1_abs<1>_out
l41 state_os_sect1_abs<2>_out
l42 state_regBMCommand_RW_abs_out
l43 fair_cnt<0>_out
l44 fair_cnt<1>_out
l45 fair_cnt<2>_out
l46 state_regCommand_abs<0>_out
l47 state_regCommand_abs<1>_out
l48 state_regCommand_abs<2>_out
l49 state_os_lba1_abs<0>_out
l50 state_os_lba1_abs<1>_out
l51 state_os_lba1_abs<2>_out
l52 state_regLBALow0_abs<0>_out
l53 state_regLBALow0_abs<1>_out
l54 state_regLBALow0_abs<2>_out
o0 o_err
c
ide_hard_drive_controller_2
This file was written by ABC on Tue Mar 11 20:24:23 2014
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv driver_d7.v   ---gives--> driver_d7.mv
> abc -c "read_blif_mv driver_d7.mv; write_aiger -s driver_d7n.aig"   ---gives--> driver_d7n.aig
> aigtoaig driver_d7n.aig driver_d7n.aag   ---gives--> driver_d7n.aag (this file)
Content of driver_d7.v:
// IDE hard drive controller specification and operating system interface
// specification for device driver synthesis.
// This file describes a GR(1) game played by a device driver for an IDE hard
// disk against its environment consisting of the hard disk and operating
// system.

`define WIDTH1 2
`define WIDTH2 1

`define CMD_READ_DMA_EXT  1
`define CMD_WRITE_DMA_EXT 2
`define FEAT_WC           1
`define FEAT_NWC          2
`define FEAT_XFR_MODE     3
`define XM_ULTRA_DMA      7

`define RCMD              1
`define REG_FEATURE0      1
`define REG_SECTORS       2
`define REG_LBA_LOW       3
`define REG_LBA_MID       4
`define REG_LBA_HIGH      5
`define REG_DEV           6
`define REG_ERRCMD        7

`define RDMA              0
`define REG_BM_COMMAND    0

//typedef enum {read=0, write=1} i_osReqType_enum;
`define read              0
`define write             1

//typedef enum {write8, write32, fillPrd, reset, os_req, ack_read_succ, ack_read_fail, ack_write_succ, ack_write_fail, class_event} controllable_tag_enum;
`define write8            0
`define write32           1
`define fillPrd           2
`define reset             3
`define os_req            4
`define ack_read_succ     5
`define ack_read_fail     6
`define ack_write_succ    7
`define ack_write_fail    8
`define class_event       9

//typedef enum {wait_bm_ready=0, dma_read=1, bm_read_prd=2, bm_ready=3} state_stDMACmd_enum;
`define wait_bm_ready     0
`define dma_read          1
`define bm_read_prd       2
`define bm_ready          3


//typedef enum {setFeatIdle=0, setFeatWC=1, setFeatNWC=2, setFeatXFR0=3, setFeatXFR1=4} state_setFeatState_enum;
`define setFeatIdle       0
`define setFeatWC         1
`define setFeatNWC        2
`define setFeatXFR0       3
`define setFeatXFR1       4

//typedef enum {os_init=0, os_reset=1, os_write_cache=2, os_idle=3, os_read_pending=4, os_write_pending=5, os_read_ack_succ=6, os_read_ack_fail=7, os_write_ack_succ=8, os_write_ack_fail=9, os_error=10} state_osState_enum;
`define os_init           0
`define os_reset          1
`define os_write_cache    2
`define os_idle           3
`define os_read_pending   4
`define os_write_pending  5
`define os_read_ack_succ  6
`define os_read_ack_fail  7
`define os_write_ack_succ 8
`define os_write_ack_fail 9
`define os_error          10

module ide_hard_drive_controller_2(
        o_err,
        i_clk,
        i_osReqType_conc,
        i_reqLBA0_abs,
        i_reqLBA1_abs,
        i_reqSect0_abs,
        i_reqSect1_abs,
        i_reqBuf_abs,
        i_transSuccess_conc,
        controllable_tag_conc,
        controllable_bank_abs,
        controllable_addr_abs,
        controllable_write8_val_abs,
        controllable_fillPrdAddr_abs,
        controllable_fillPrdNSect_abs,
        controllable_featWCClass_conc,
        controllable_featNWCClass_conc,
        controllable_featXFRClass_conc,
        controllable_busMasterClass_conc,
        controllable_dmaStartClass_conc );

input i_clk;
input i_osReqType_conc ;
input [`WIDTH1:0] i_reqLBA0_abs ;
input [`WIDTH1:0] i_reqLBA1_abs ;
input [`WIDTH1:0] i_reqSect0_abs ;
input [`WIDTH1:0] i_reqSect1_abs ;
input [`WIDTH2:0] i_reqBuf_abs ;
input i_transSuccess_conc ;
input [3:0] controllable_tag_conc ;
input controllable_bank_abs ;
input [2:0] controllable_addr_abs ;
input [`WIDTH1:0] controllable_write8_val_abs ;
input [`WIDTH2:0] controllable_fillPrdAddr_abs ;
input [5:0] controllable_fillPrdNSect_abs ;
input controllable_featWCClass_conc ;
input controllable_featNWCClass_conc ;
input controllable_featXFRClass_conc ;
input controllable_busMasterClass_conc ;
input controllable_dmaStartClass_conc ;
output o_err;

reg [1:0] state_stDMACmd_conc ;
reg [2:0] state_setFeatState_conc ;
reg [1:0] state_regFeature0_abs ;
reg [`WIDTH1:0] state_regSectors0_abs ;
reg [`WIDTH1:0] state_regSectors1_abs ;
reg [`WIDTH1:0] state_regLBALow0_abs ;
reg [`WIDTH1:0] state_regLBALow1_abs ;
reg state_regDev_LBA_abs ;
reg [`WIDTH1:0] state_regCommand_abs ;
reg state_regBMCommand_Start_abs ;
reg state_regBMCommand_RW_abs ;
reg [`WIDTH2:0] state_bufAddr_abs ;
reg [5:0] state_bufSectors_abs ;

reg [3:0] state_osState_conc ;
reg [`WIDTH1:0] state_os_lba0_abs ;
reg [`WIDTH1:0] state_os_lba1_abs ;
reg [`WIDTH1:0] state_os_sect0_abs ;
reg [`WIDTH1:0] state_os_sect1_abs ;
reg [`WIDTH2:0] state_os_buf_abs ;

reg [2:0] fair_cnt;

wire transferMode3;
wire nwc;
wire bm_event;
wire transferCorrect;
wire transferCorrect_0;
wire transferCorrect_1;
wire buechi_satisfied;
wire [1:0] next_state_stDMACmd_conc ;
wire [2:0] next_state_setFeatState_conc ;
wire [1:0] next_state_regFeature0_abs ;
wire [`WIDTH1:0] next_state_regSectors0_abs ;
wire [`WIDTH1:0] next_state_regSectors1_abs ;
wire [`WIDTH1:0] next_state_regLBALow0_abs ;
wire [`WIDTH1:0] next_state_regLBALow1_abs ;
wire next_state_regDev_LBA_abs ;
wire [`WIDTH1:0] next_state_regCommand_abs ;
wire next_state_regBMCommand_Start_abs ;
wire next_state_regBMCommand_RW_abs ;
wire [`WIDTH2:0] next_state_bufAddr_abs ;
wire [5:0] next_state_bufSectors_abs ;

wire [3:0] next_state_osState_conc ;
wire [`WIDTH1:0] next_state_os_lba0_abs ;
wire [`WIDTH1:0] next_state_os_lba1_abs ;
wire [`WIDTH1:0] next_state_os_sect0_abs ;
wire [`WIDTH1:0] next_state_os_sect1_abs ;
wire [`WIDTH2:0] next_state_os_buf_abs ;

// some abbreviations:
assign transferMode3 = (state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1);
assign nwc =           (state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1);
assign bm_event = (state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1);
assign transferCorrect = (state_os_lba0_abs==state_regLBALow0_abs    &&
                          state_os_lba1_abs==state_regLBALow1_abs    &&
                          state_os_sect0_abs==state_regSectors0_abs  &&
                          state_os_sect1_abs==state_regSectors1_abs  &&
                          state_os_buf_abs==state_bufAddr_abs);
assign transferCorrect_0 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==0);
assign transferCorrect_1 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==1);


// state updates:
  //Device state updates:
assign next_state_regFeature0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_FEATURE0) ? controllable_write8_val_abs  : state_regFeature0_abs;
assign next_state_regSectors0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? controllable_write8_val_abs  : state_regSectors0_abs;
assign next_state_regSectors1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? state_regSectors0_abs : state_regSectors1_abs;
assign next_state_regLBALow0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? controllable_write8_val_abs  : state_regLBALow0_abs;
assign next_state_regLBALow1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? state_regLBALow0_abs  : state_regLBALow1_abs;
assign next_state_regDev_LBA_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_DEV)      ? controllable_write8_val_abs[2:2] : state_regDev_LBA_abs;
assign next_state_regCommand_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_ERRCMD)   ? controllable_write8_val_abs  : state_regCommand_abs;
assign next_state_regBMCommand_Start_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[0:0] : state_regBMCommand_Start_abs;
assign next_state_regBMCommand_RW_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[1:1] : state_regBMCommand_RW_abs;
assign next_state_bufAddr_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdAddr_abs : state_bufAddr_abs;
assign next_state_bufSectors_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdNSect_abs : state_bufSectors_abs;

assign next_state_setFeatState_conc = (controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_WC) ? `setFeatWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_NWC) ? `setFeatNWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE && state_regSectors0_abs==`XM_ULTRA_DMA) ? `setFeatXFR0 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE) ? `setFeatXFR1 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatWC   && controllable_featWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR0 && controllable_featXFRClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1) ? `setFeatIdle : state_setFeatState_conc)))))));

assign next_state_stDMACmd_conc = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ?
               (
                 (state_regBMCommand_Start_abs==0 && controllable_write8_val_abs[0:0]==1) ? `bm_read_prd : state_stDMACmd_conc
               ) :
               (
                 (state_stDMACmd_conc==`bm_read_prd) ?
                 (((state_regBMCommand_RW_abs == 1 && state_regCommand_abs != `CMD_READ_DMA_EXT) || (state_regBMCommand_RW_abs == 0 && state_regCommand_abs != `CMD_WRITE_DMA_EXT) || (state_regSectors0_abs != state_bufSectors_abs[`WIDTH1:0]) || (state_regSectors1_abs != state_bufSectors_abs[5:3]) || state_regDev_LBA_abs != 1) ? state_stDMACmd_conc : ((controllable_dmaStartClass_conc==1) ? `bm_ready : state_stDMACmd_conc)) :
                 ((state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1) ? `wait_bm_ready : state_stDMACmd_conc)
               );

//OS state updates
assign next_state_os_lba0_abs = (controllable_tag_conc==`os_req) ? i_reqLBA0_abs : state_os_lba0_abs;
assign next_state_os_lba1_abs = (controllable_tag_conc==`os_req) ? i_reqLBA1_abs : state_os_lba1_abs;
assign next_state_os_sect0_abs = (controllable_tag_conc==`os_req) ? i_reqSect0_abs : state_os_sect0_abs;
assign next_state_os_sect1_abs = (controllable_tag_conc==`os_req) ? i_reqSect1_abs : state_os_sect1_abs;
assign next_state_os_buf_abs = (controllable_tag_conc==`os_req) ? i_reqBuf_abs : state_os_buf_abs;

assign next_state_osState_conc = (state_osState_conc==`os_init && controllable_tag_conc==`reset) ? `os_reset :
      ((state_osState_conc==`os_reset && nwc && controllable_tag_conc==`class_event) ? `os_write_cache :
      ((state_osState_conc==`os_write_cache && transferMode3 && controllable_tag_conc==`class_event) ? `os_idle :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`read) ? `os_read_pending :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`write) ? `os_write_pending :
      ((state_osState_conc==`os_read_pending && bm_event && !transferCorrect_0 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_read_ack_succ :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_read_ack_fail :
      ((state_osState_conc==`os_write_pending && bm_event && !transferCorrect_1 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_write_ack_succ :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_write_ack_fail :
      ((state_osState_conc==`os_read_ack_succ && controllable_tag_conc==`ack_read_succ) ? `os_idle :
      ((state_osState_conc==`os_read_ack_fail && controllable_tag_conc==`ack_read_fail) ? `os_idle :
      ((state_osState_conc==`os_write_ack_succ && controllable_tag_conc==`ack_write_succ) ? `os_idle :
      ((state_osState_conc==`os_write_ack_fail && controllable_tag_conc==`ack_write_fail) ? `os_idle : state_osState_conc))))))))))))));


// buechi-to-safety construction:                            
assign buechi_satisfied = (state_osState_conc == `os_idle);                          
                            
assign o_err = (fair_cnt >= 7) || controllable_tag_conc >= 10;

initial
 begin
  state_stDMACmd_conc = `wait_bm_ready;
  state_setFeatState_conc = `setFeatIdle;
  state_regFeature0_abs = 0;
  state_regSectors0_abs = 0;
  state_regSectors1_abs = 0;
  state_regLBALow0_abs = 0;
  state_regLBALow1_abs = 0;
  state_regDev_LBA_abs = 0;
  state_regCommand_abs = 0;
  state_regBMCommand_Start_abs = 0;
  state_regBMCommand_RW_abs = 0;
  state_bufAddr_abs = 0;
  state_bufSectors_abs = 0;
  state_osState_conc = `os_init;
  state_os_lba0_abs = 0;
  state_os_lba1_abs = 0;
  state_os_sect0_abs = 0;
  state_os_sect1_abs = 0;
  state_os_buf_abs = 0;
  fair_cnt = 0;
 end

always @(posedge i_clk)
 begin

  if(buechi_satisfied)
   begin
    fair_cnt = 0;
   end
  else
   begin
    fair_cnt = fair_cnt + 1;
   end
 
  //Device state updates:
  state_regFeature0_abs          = next_state_regFeature0_abs ;
  state_regSectors0_abs          = next_state_regSectors0_abs ;
  state_regSectors1_abs          = next_state_regSectors1_abs ;
  state_regLBALow0_abs           = next_state_regLBALow0_abs ;
  state_regLBALow1_abs           = next_state_regLBALow1_abs ;
  state_regDev_LBA_abs           = next_state_regDev_LBA_abs ;
  state_regCommand_abs           = next_state_regCommand_abs ;
  state_regBMCommand_Start_abs   = next_state_regBMCommand_Start_abs ;
  state_regBMCommand_RW_abs      = next_state_regBMCommand_RW_abs ;
  state_bufAddr_abs              = next_state_bufAddr_abs ;
  state_bufSectors_abs           = next_state_bufSectors_abs ;
  state_setFeatState_conc        = next_state_setFeatState_conc ;
  state_stDMACmd_conc            = next_state_stDMACmd_conc ;
  state_os_lba0_abs              = next_state_os_lba0_abs ;
  state_os_lba1_abs              = next_state_os_lba1_abs ;
  state_os_sect0_abs             = next_state_os_sect0_abs ;
  state_os_sect1_abs             = next_state_os_sect1_abs ;
  state_os_buf_abs               = next_state_os_buf_abs ;
  state_osState_conc             = next_state_osState_conc ;
 end
 
 
endmodule
-------------------------------
#!SYNTCOMP
STATUS : unrealizable
SOLVED_BY : 3/3 [2015-pre-classification]
SOLVED_IN : 6.33429 [2015-pre-classification]
#.

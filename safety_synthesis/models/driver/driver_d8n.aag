aag 766 40 56 1 670
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82 1
84 279
86 291
88 303
90 319
92 331
94 349
96 361
98 373
100 385
102 397
104 409
106 421
108 433
110 531
112 550
114 568
116 585
118 597
120 609
122 621
124 633
126 645
128 669
130 687
132 705
134 715
136 729
138 883
140 911
142 917
144 923
146 929
148 1283
150 1332
152 1370
154 1408
156 1415
158 1421
160 1427
162 1433
164 1439
166 1445
168 1446
170 1454
172 1464
174 1474
176 1485
178 1491
180 1497
182 1503
184 1509
186 1515
188 1521
190 1527
192 1533
253
194 175 82
196 174 82
198 195 82
200 173 82
202 172 82
204 201 82
206 171 82
208 170 82
210 207 82
212 169 82
214 168 82
216 213 82
218 215 209
220 218 203
222 220 198
224 223 199
226 77 75
228 226 79
230 229 78
232 230 227
234 76 74
236 235 227
238 227 79
240 226 78
242 241 239
244 74 73
246 244 236
248 246 242
250 249 233
252 250 224
254 75 73
256 254 77
258 256 79
260 258 36
262 4 3
264 262 7
266 264 260
268 85 82
270 84 82
272 269 82
274 266 8
276 270 267
278 277 275
280 87 82
282 86 82
284 281 82
286 266 10
288 282 267
290 289 287
292 89 82
294 88 82
296 293 82
298 266 12
300 294 267
302 301 299
304 254 76
306 304 79
308 91 82
310 90 82
312 309 82
314 306 14
316 310 307
318 317 315
320 93 82
322 92 82
324 321 82
326 306 16
328 322 307
330 329 327
332 5 2
334 332 7
336 334 260
338 95 82
340 94 82
342 339 82
344 336 8
346 340 337
348 347 345
350 97 82
352 96 82
354 351 82
356 336 10
358 352 337
360 359 357
362 99 82
364 98 82
366 363 82
368 306 50
370 364 307
372 371 369
374 101 82
376 100 82
378 375 82
380 306 52
382 376 307
384 383 381
386 103 82
388 102 82
390 387 82
392 306 54
394 388 307
396 395 393
398 105 82
400 104 82
402 399 82
404 306 28
406 400 307
408 407 405
410 107 82
412 106 82
414 411 82
416 306 30
418 412 307
420 419 417
422 109 82
424 108 82
426 423 82
428 306 32
430 424 307
432 431 429
434 75 72
436 434 77
438 436 78
440 111 82
442 110 82
444 441 82
446 113 82
448 112 82
450 447 82
452 115 82
454 114 82
456 453 82
458 449 443
460 458 455
462 460 438
464 353 342
466 464 462
468 354 341
470 468 462
472 354 342
474 472 462
476 284 272
478 476 296
480 478 474
482 449 444
484 482 455
486 484 438
488 486 70
490 450 443
492 490 455
494 492 438
496 494 80
498 450 444
500 498 455
502 500 438
504 502 38
506 458 456
508 506 438
510 508 38
512 511 442
514 512 505
516 514 497
518 516 489
520 518 475
522 520 481
524 523 481
526 525 471
528 526 467
530 529 467
532 511 448
534 532 505
536 534 497
538 536 489
540 538 475
542 540 481
544 543 481
546 545 471
548 547 471
550 549 467
552 511 454
554 552 505
556 554 497
558 556 489
560 558 475
562 561 475
564 563 481
566 564 471
568 566 467
570 244 77
572 570 79
574 117 82
576 116 82
578 575 82
580 572 56
582 576 573
584 583 581
586 119 82
588 118 82
590 587 82
592 572 58
594 588 573
596 595 593
598 121 82
600 120 82
602 599 82
604 572 60
606 600 573
608 607 605
610 123 82
612 122 82
614 611 82
616 572 62
618 612 573
620 619 617
622 125 82
624 124 82
626 623 82
628 572 64
630 624 573
632 631 629
634 127 82
636 126 82
638 635 82
640 572 66
642 636 573
644 643 641
646 4 2
648 646 7
650 648 260
652 189 82
654 188 82
656 653 82
658 129 82
660 128 82
662 659 82
664 654 650
666 660 651
668 667 665
670 191 82
672 190 82
674 671 82
676 131 82
678 130 82
680 677 82
682 672 650
684 678 651
686 685 683
688 193 82
690 192 82
692 689 82
694 133 82
696 132 82
698 695 82
700 690 650
702 696 651
704 703 701
706 262 6
708 706 260
710 708 12
712 709 12
714 713 711
716 258 37
718 5 3
720 718 7
722 720 716
724 722 8
726 723 8
728 727 725
730 136 82
732 731 8
734 139 82
736 138 82
738 735 82
740 736 733
742 141 82
744 140 82
746 743 82
748 746 737
750 167 82
752 166 82
754 751 82
756 177 82
758 176 82
760 757 82
762 179 82
764 178 82
766 763 82
768 180 82
770 765 760
772 770 769
774 773 754
776 766 759
778 776 769
780 779 753
782 781 775
784 576 273
786 579 270
788 787 785
790 588 285
792 591 282
794 793 791
796 600 297
798 603 294
800 799 797
802 794 788
804 802 800
806 804 782
808 143 82
810 142 82
812 809 82
814 813 612
816 810 615
818 817 815
820 145 82
822 144 82
824 821 82
826 825 624
828 822 627
830 829 827
832 147 82
834 146 82
836 833 82
838 837 636
840 834 639
842 841 839
844 830 818
846 844 842
848 846 806
850 135 82
852 851 82
854 852 848
856 736 35
858 857 35
860 855 736
862 859 854
864 863 861
866 746 738
868 866 68
870 869 736
872 865 748
874 870 749
876 875 873
878 740 722
880 877 723
882 881 879
884 744 733
886 885 733
888 744 35
890 889 35
892 855 744
894 891 854
896 895 893
898 869 744
900 897 748
902 898 749
904 903 901
906 887 722
908 905 723
910 909 907
912 270 266
914 810 267
916 915 913
918 282 266
920 822 267
922 921 919
924 294 266
926 834 267
928 927 925
930 149 82
932 148 82
934 931 82
936 151 82
938 150 82
940 937 82
942 153 82
944 152 82
946 943 82
948 155 82
950 154 82
952 949 82
954 939 933
956 954 945
958 956 951
960 74 72
962 960 77
964 962 79
966 964 958
968 939 934
970 968 945
972 970 951
974 492 80
976 974 972
978 976 438
980 940 933
982 980 945
984 982 951
986 506 38
988 986 984
990 988 438
992 940 934
994 992 945
996 994 951
998 996 306
1000 998 49
1002 998 48
1004 954 946
1006 1004 951
1008 1006 868
1010 654 403
1012 657 400
1014 1013 1011
1016 672 415
1018 675 412
1020 1019 1017
1022 690 427
1024 693 424
1026 1025 1023
1028 1020 1014
1030 1028 1026
1032 183 82
1034 182 82
1036 1033 82
1038 1037 660
1040 1034 663
1042 1041 1039
1044 185 82
1046 184 82
1048 1045 82
1050 1049 678
1052 1046 681
1054 1053 1051
1056 187 82
1058 186 82
1060 1057 82
1062 1061 696
1064 1058 699
1066 1065 1063
1068 1054 1042
1070 1068 1066
1072 1070 1030
1074 367 270
1076 364 273
1078 1077 1075
1080 379 282
1082 376 285
1084 1083 1081
1086 391 294
1088 388 297
1090 1089 1087
1092 1084 1078
1094 1092 1090
1096 1094 1072
1098 161 82
1100 160 82
1102 1099 82
1104 1103 810
1106 1100 813
1108 1107 1105
1110 163 82
1112 162 82
1114 1111 82
1116 1115 822
1118 1112 825
1120 1119 1117
1122 165 82
1124 164 82
1126 1123 82
1128 1127 834
1130 1124 837
1132 1131 1129
1134 1120 1108
1136 1134 1132
1138 1136 1096
1140 157 82
1142 156 82
1144 1141 82
1146 1142 313
1148 1145 310
1150 1149 1147
1152 159 82
1154 158 82
1156 1153 82
1158 1154 325
1160 1157 322
1162 1161 1159
1164 1162 1150
1166 1164 1138
1168 1166 753
1170 1169 1008
1172 1170 438
1174 1008 40
1176 1174 438
1178 1008 41
1180 1178 438
1182 968 946
1184 1182 951
1186 1184 868
1188 1166 754
1190 1189 1186
1192 1190 438
1194 1186 40
1196 1194 438
1198 1186 41
1200 1198 438
1202 980 946
1204 1202 951
1206 434 76
1208 1206 79
1210 1208 1204
1212 992 946
1214 1212 951
1216 244 76
1218 1216 79
1220 1218 1214
1222 956 952
1224 960 76
1226 1224 79
1228 1226 1222
1230 970 952
1232 256 78
1234 1232 1230
1236 1235 932
1238 1237 1235
1240 1239 1229
1242 1241 1229
1244 1243 1221
1246 1245 1221
1248 1247 1211
1250 1249 1211
1252 1251 1201
1254 1253 1201
1256 1255 1197
1258 1256 1193
1260 1258 1181
1262 1261 1181
1264 1263 1177
1266 1264 1173
1268 1266 1003
1270 1269 1003
1272 1271 1001
1274 1272 991
1276 1275 991
1278 1277 979
1280 1278 967
1282 1281 967
1284 1235 938
1286 1285 1235
1288 1287 1229
1290 1289 1229
1292 1291 1221
1294 1293 1221
1296 1295 1211
1298 1297 1211
1300 1299 1201
1302 1300 1197
1304 1302 1193
1306 1305 1193
1308 1307 1181
1310 1309 1181
1312 1311 1177
1314 1313 1177
1316 1315 1173
1318 1317 1173
1320 1319 1003
1322 1320 1001
1324 1322 991
1326 1325 991
1328 1327 979
1330 1329 979
1332 1331 967
1334 1235 944
1336 1334 1229
1338 1336 1221
1340 1338 1211
1342 1340 1201
1344 1342 1197
1346 1344 1193
1348 1346 1181
1350 1349 1181
1352 1351 1177
1354 1353 1177
1356 1355 1173
1358 1356 1003
1360 1359 1003
1362 1361 1001
1364 1363 1001
1366 1365 991
1368 1366 979
1370 1368 967
1372 1235 950
1374 1372 1229
1376 1374 1221
1378 1376 1211
1380 1378 1201
1382 1381 1201
1384 1383 1197
1386 1385 1197
1388 1387 1193
1390 1389 1193
1392 1391 1181
1394 1392 1177
1396 1394 1173
1398 1397 1173
1400 1399 1003
1402 1400 1001
1404 1402 991
1406 1404 979
1408 1406 967
1410 572 24
1412 1142 573
1414 1413 1411
1416 572 26
1418 1154 573
1420 1419 1417
1422 306 42
1424 1100 307
1426 1425 1423
1428 306 44
1430 1112 307
1432 1431 1429
1434 306 46
1436 1124 307
1438 1437 1435
1440 722 10
1442 723 10
1444 1443 1441
1446 997 217
1448 214 211
1450 215 208
1452 1451 1449
1454 1453 997
1456 214 208
1458 1456 205
1460 1457 202
1462 1461 1459
1464 1463 997
1466 1456 202
1468 1466 199
1470 1467 196
1472 1471 1469
1474 1473 997
1476 646 6
1478 1476 260
1480 1478 8
1482 1479 758
1484 1483 1481
1486 1478 10
1488 1479 764
1490 1489 1487
1492 1478 12
1494 1479 768
1496 1495 1493
1498 306 18
1500 1034 307
1502 1501 1499
1504 306 20
1506 1046 307
1508 1507 1505
1510 306 22
1512 1058 307
1514 1513 1511
1516 650 8
1518 654 651
1520 1519 1517
1522 650 10
1524 672 651
1526 1525 1523
1528 650 12
1530 690 651
1532 1531 1529
i0 controllable_addr_abs<0>
i1 controllable_addr_abs<1>
i2 controllable_addr_abs<2>
i3 controllable_write8_val_abs<0>
i4 controllable_write8_val_abs<1>
i5 controllable_write8_val_abs<2>
i6 i_reqBuf_abs<0>
i7 i_reqBuf_abs<1>
i8 i_reqLBA1_abs<0>
i9 i_reqLBA1_abs<1>
i10 i_reqLBA1_abs<2>
i11 controllable_fillPrdAddr_abs<0>
i12 controllable_fillPrdAddr_abs<1>
i13 i_reqLBA0_abs<0>
i14 i_reqLBA0_abs<1>
i15 i_reqLBA0_abs<2>
i16 controllable_dmaStartClass_conc
i17 controllable_bank_abs
i18 controllable_featXFRClass_conc
i19 i_transSuccess_conc
i20 i_reqSect1_abs<0>
i21 i_reqSect1_abs<1>
i22 i_reqSect1_abs<2>
i23 i_osReqType_conc
i24 i_reqSect0_abs<0>
i25 i_reqSect0_abs<1>
i26 i_reqSect0_abs<2>
i27 controllable_fillPrdNSect_abs<0>
i28 controllable_fillPrdNSect_abs<1>
i29 controllable_fillPrdNSect_abs<2>
i30 controllable_fillPrdNSect_abs<3>
i31 controllable_fillPrdNSect_abs<4>
i32 controllable_fillPrdNSect_abs<5>
i33 controllable_busMasterClass_conc
i34 controllable_featWCClass_conc
i35 controllable_tag_conc<0>
i36 controllable_tag_conc<1>
i37 controllable_tag_conc<2>
i38 controllable_tag_conc<3>
i39 controllable_featNWCClass_conc
l0 n83
l1 state_regSectors0_abs<0>_out
l2 state_regSectors0_abs<1>_out
l3 state_regSectors0_abs<2>_out
l4 state_os_buf_abs<0>_out
l5 state_os_buf_abs<1>_out
l6 state_regFeature0_abs<0>_out
l7 state_regFeature0_abs<1>_out
l8 state_os_sect0_abs<0>_out
l9 state_os_sect0_abs<1>_out
l10 state_os_sect0_abs<2>_out
l11 state_os_lba0_abs<0>_out
l12 state_os_lba0_abs<1>_out
l13 state_os_lba0_abs<2>_out
l14 state_setFeatState_conc<0>_out
l15 state_setFeatState_conc<1>_out
l16 state_setFeatState_conc<2>_out
l17 state_bufSectors_abs<0>_out
l18 state_bufSectors_abs<1>_out
l19 state_bufSectors_abs<2>_out
l20 state_bufSectors_abs<3>_out
l21 state_bufSectors_abs<4>_out
l22 state_bufSectors_abs<5>_out
l23 state_regLBALow1_abs<0>_out
l24 state_regLBALow1_abs<1>_out
l25 state_regLBALow1_abs<2>_out
l26 state_regDev_LBA_abs_out
l27 state_regBMCommand_Start_abs_out
l28 state_stDMACmd_conc<0>_out
l29 state_stDMACmd_conc<1>_out
l30 state_regSectors1_abs<0>_out
l31 state_regSectors1_abs<1>_out
l32 state_regSectors1_abs<2>_out
l33 state_osState_conc<0>_out
l34 state_osState_conc<1>_out
l35 state_osState_conc<2>_out
l36 state_osState_conc<3>_out
l37 state_bufAddr_abs<0>_out
l38 state_bufAddr_abs<1>_out
l39 state_os_sect1_abs<0>_out
l40 state_os_sect1_abs<1>_out
l41 state_os_sect1_abs<2>_out
l42 state_regBMCommand_RW_abs_out
l43 fair_cnt<0>_out
l44 fair_cnt<1>_out
l45 fair_cnt<2>_out
l46 fair_cnt<3>_out
l47 state_regCommand_abs<0>_out
l48 state_regCommand_abs<1>_out
l49 state_regCommand_abs<2>_out
l50 state_os_lba1_abs<0>_out
l51 state_os_lba1_abs<1>_out
l52 state_os_lba1_abs<2>_out
l53 state_regLBALow0_abs<0>_out
l54 state_regLBALow0_abs<1>_out
l55 state_regLBALow0_abs<2>_out
o0 o_err
c
ide_hard_drive_controller_2
This file was written by ABC on Tue Mar 11 20:24:22 2014
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv driver_d8.v   ---gives--> driver_d8.mv
> abc -c "read_blif_mv driver_d8.mv; write_aiger -s driver_d8n.aig"   ---gives--> driver_d8n.aig
> aigtoaig driver_d8n.aig driver_d8n.aag   ---gives--> driver_d8n.aag (this file)
Content of driver_d8.v:
// IDE hard drive controller specification and operating system interface
// specification for device driver synthesis.
// This file describes a GR(1) game played by a device driver for an IDE hard
// disk against its environment consisting of the hard disk and operating
// system.

`define WIDTH1 2
`define WIDTH2 1

`define CMD_READ_DMA_EXT  1
`define CMD_WRITE_DMA_EXT 2
`define FEAT_WC           1
`define FEAT_NWC          2
`define FEAT_XFR_MODE     3
`define XM_ULTRA_DMA      7

`define RCMD              1
`define REG_FEATURE0      1
`define REG_SECTORS       2
`define REG_LBA_LOW       3
`define REG_LBA_MID       4
`define REG_LBA_HIGH      5
`define REG_DEV           6
`define REG_ERRCMD        7

`define RDMA              0
`define REG_BM_COMMAND    0

//typedef enum {read=0, write=1} i_osReqType_enum;
`define read              0
`define write             1

//typedef enum {write8, write32, fillPrd, reset, os_req, ack_read_succ, ack_read_fail, ack_write_succ, ack_write_fail, class_event} controllable_tag_enum;
`define write8            0
`define write32           1
`define fillPrd           2
`define reset             3
`define os_req            4
`define ack_read_succ     5
`define ack_read_fail     6
`define ack_write_succ    7
`define ack_write_fail    8
`define class_event       9

//typedef enum {wait_bm_ready=0, dma_read=1, bm_read_prd=2, bm_ready=3} state_stDMACmd_enum;
`define wait_bm_ready     0
`define dma_read          1
`define bm_read_prd       2
`define bm_ready          3


//typedef enum {setFeatIdle=0, setFeatWC=1, setFeatNWC=2, setFeatXFR0=3, setFeatXFR1=4} state_setFeatState_enum;
`define setFeatIdle       0
`define setFeatWC         1
`define setFeatNWC        2
`define setFeatXFR0       3
`define setFeatXFR1       4

//typedef enum {os_init=0, os_reset=1, os_write_cache=2, os_idle=3, os_read_pending=4, os_write_pending=5, os_read_ack_succ=6, os_read_ack_fail=7, os_write_ack_succ=8, os_write_ack_fail=9, os_error=10} state_osState_enum;
`define os_init           0
`define os_reset          1
`define os_write_cache    2
`define os_idle           3
`define os_read_pending   4
`define os_write_pending  5
`define os_read_ack_succ  6
`define os_read_ack_fail  7
`define os_write_ack_succ 8
`define os_write_ack_fail 9
`define os_error          10

module ide_hard_drive_controller_2(
        o_err,
        i_clk,
        i_osReqType_conc,
        i_reqLBA0_abs,
        i_reqLBA1_abs,
        i_reqSect0_abs,
        i_reqSect1_abs,
        i_reqBuf_abs,
        i_transSuccess_conc,
        controllable_tag_conc,
        controllable_bank_abs,
        controllable_addr_abs,
        controllable_write8_val_abs,
        controllable_fillPrdAddr_abs,
        controllable_fillPrdNSect_abs,
        controllable_featWCClass_conc,
        controllable_featNWCClass_conc,
        controllable_featXFRClass_conc,
        controllable_busMasterClass_conc,
        controllable_dmaStartClass_conc );

input i_clk;
input i_osReqType_conc ;
input [`WIDTH1:0] i_reqLBA0_abs ;
input [`WIDTH1:0] i_reqLBA1_abs ;
input [`WIDTH1:0] i_reqSect0_abs ;
input [`WIDTH1:0] i_reqSect1_abs ;
input [`WIDTH2:0] i_reqBuf_abs ;
input i_transSuccess_conc ;
input [3:0] controllable_tag_conc ;
input controllable_bank_abs ;
input [2:0] controllable_addr_abs ;
input [`WIDTH1:0] controllable_write8_val_abs ;
input [`WIDTH2:0] controllable_fillPrdAddr_abs ;
input [5:0] controllable_fillPrdNSect_abs ;
input controllable_featWCClass_conc ;
input controllable_featNWCClass_conc ;
input controllable_featXFRClass_conc ;
input controllable_busMasterClass_conc ;
input controllable_dmaStartClass_conc ;
output o_err;

reg [1:0] state_stDMACmd_conc ;
reg [2:0] state_setFeatState_conc ;
reg [1:0] state_regFeature0_abs ;
reg [`WIDTH1:0] state_regSectors0_abs ;
reg [`WIDTH1:0] state_regSectors1_abs ;
reg [`WIDTH1:0] state_regLBALow0_abs ;
reg [`WIDTH1:0] state_regLBALow1_abs ;
reg state_regDev_LBA_abs ;
reg [`WIDTH1:0] state_regCommand_abs ;
reg state_regBMCommand_Start_abs ;
reg state_regBMCommand_RW_abs ;
reg [`WIDTH2:0] state_bufAddr_abs ;
reg [5:0] state_bufSectors_abs ;

reg [3:0] state_osState_conc ;
reg [`WIDTH1:0] state_os_lba0_abs ;
reg [`WIDTH1:0] state_os_lba1_abs ;
reg [`WIDTH1:0] state_os_sect0_abs ;
reg [`WIDTH1:0] state_os_sect1_abs ;
reg [`WIDTH2:0] state_os_buf_abs ;

reg [3:0] fair_cnt;

wire transferMode3;
wire nwc;
wire bm_event;
wire transferCorrect;
wire transferCorrect_0;
wire transferCorrect_1;
wire buechi_satisfied;
wire [1:0] next_state_stDMACmd_conc ;
wire [2:0] next_state_setFeatState_conc ;
wire [1:0] next_state_regFeature0_abs ;
wire [`WIDTH1:0] next_state_regSectors0_abs ;
wire [`WIDTH1:0] next_state_regSectors1_abs ;
wire [`WIDTH1:0] next_state_regLBALow0_abs ;
wire [`WIDTH1:0] next_state_regLBALow1_abs ;
wire next_state_regDev_LBA_abs ;
wire [`WIDTH1:0] next_state_regCommand_abs ;
wire next_state_regBMCommand_Start_abs ;
wire next_state_regBMCommand_RW_abs ;
wire [`WIDTH2:0] next_state_bufAddr_abs ;
wire [5:0] next_state_bufSectors_abs ;

wire [3:0] next_state_osState_conc ;
wire [`WIDTH1:0] next_state_os_lba0_abs ;
wire [`WIDTH1:0] next_state_os_lba1_abs ;
wire [`WIDTH1:0] next_state_os_sect0_abs ;
wire [`WIDTH1:0] next_state_os_sect1_abs ;
wire [`WIDTH2:0] next_state_os_buf_abs ;

// some abbreviations:
assign transferMode3 = (state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1);
assign nwc =           (state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1);
assign bm_event = (state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1);
assign transferCorrect = (state_os_lba0_abs==state_regLBALow0_abs    &&
                          state_os_lba1_abs==state_regLBALow1_abs    &&
                          state_os_sect0_abs==state_regSectors0_abs  &&
                          state_os_sect1_abs==state_regSectors1_abs  &&
                          state_os_buf_abs==state_bufAddr_abs);
assign transferCorrect_0 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==0);
assign transferCorrect_1 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==1);


// state updates:
  //Device state updates:
assign next_state_regFeature0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_FEATURE0) ? controllable_write8_val_abs  : state_regFeature0_abs;
assign next_state_regSectors0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? controllable_write8_val_abs  : state_regSectors0_abs;
assign next_state_regSectors1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? state_regSectors0_abs : state_regSectors1_abs;
assign next_state_regLBALow0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? controllable_write8_val_abs  : state_regLBALow0_abs;
assign next_state_regLBALow1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? state_regLBALow0_abs  : state_regLBALow1_abs;
assign next_state_regDev_LBA_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_DEV)      ? controllable_write8_val_abs[2:2] : state_regDev_LBA_abs;
assign next_state_regCommand_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_ERRCMD)   ? controllable_write8_val_abs  : state_regCommand_abs;
assign next_state_regBMCommand_Start_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[0:0] : state_regBMCommand_Start_abs;
assign next_state_regBMCommand_RW_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[1:1] : state_regBMCommand_RW_abs;
assign next_state_bufAddr_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdAddr_abs : state_bufAddr_abs;
assign next_state_bufSectors_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdNSect_abs : state_bufSectors_abs;

assign next_state_setFeatState_conc = (controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_WC) ? `setFeatWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_NWC) ? `setFeatNWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE && state_regSectors0_abs==`XM_ULTRA_DMA) ? `setFeatXFR0 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE) ? `setFeatXFR1 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatWC   && controllable_featWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR0 && controllable_featXFRClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1) ? `setFeatIdle : state_setFeatState_conc)))))));

assign next_state_stDMACmd_conc = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ?
               (
                 (state_regBMCommand_Start_abs==0 && controllable_write8_val_abs[0:0]==1) ? `bm_read_prd : state_stDMACmd_conc
               ) :
               (
                 (state_stDMACmd_conc==`bm_read_prd) ?
                 (((state_regBMCommand_RW_abs == 1 && state_regCommand_abs != `CMD_READ_DMA_EXT) || (state_regBMCommand_RW_abs == 0 && state_regCommand_abs != `CMD_WRITE_DMA_EXT) || (state_regSectors0_abs != state_bufSectors_abs[`WIDTH1:0]) || (state_regSectors1_abs != state_bufSectors_abs[5:3]) || state_regDev_LBA_abs != 1) ? state_stDMACmd_conc : ((controllable_dmaStartClass_conc==1) ? `bm_ready : state_stDMACmd_conc)) :
                 ((state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1) ? `wait_bm_ready : state_stDMACmd_conc)
               );

//OS state updates
assign next_state_os_lba0_abs = (controllable_tag_conc==`os_req) ? i_reqLBA0_abs : state_os_lba0_abs;
assign next_state_os_lba1_abs = (controllable_tag_conc==`os_req) ? i_reqLBA1_abs : state_os_lba1_abs;
assign next_state_os_sect0_abs = (controllable_tag_conc==`os_req) ? i_reqSect0_abs : state_os_sect0_abs;
assign next_state_os_sect1_abs = (controllable_tag_conc==`os_req) ? i_reqSect1_abs : state_os_sect1_abs;
assign next_state_os_buf_abs = (controllable_tag_conc==`os_req) ? i_reqBuf_abs : state_os_buf_abs;

assign next_state_osState_conc = (state_osState_conc==`os_init && controllable_tag_conc==`reset) ? `os_reset :
      ((state_osState_conc==`os_reset && nwc && controllable_tag_conc==`class_event) ? `os_write_cache :
      ((state_osState_conc==`os_write_cache && transferMode3 && controllable_tag_conc==`class_event) ? `os_idle :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`read) ? `os_read_pending :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`write) ? `os_write_pending :
      ((state_osState_conc==`os_read_pending && bm_event && !transferCorrect_0 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_read_ack_succ :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_read_ack_fail :
      ((state_osState_conc==`os_write_pending && bm_event && !transferCorrect_1 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_write_ack_succ :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_write_ack_fail :
      ((state_osState_conc==`os_read_ack_succ && controllable_tag_conc==`ack_read_succ) ? `os_idle :
      ((state_osState_conc==`os_read_ack_fail && controllable_tag_conc==`ack_read_fail) ? `os_idle :
      ((state_osState_conc==`os_write_ack_succ && controllable_tag_conc==`ack_write_succ) ? `os_idle :
      ((state_osState_conc==`os_write_ack_fail && controllable_tag_conc==`ack_write_fail) ? `os_idle : state_osState_conc))))))))))))));


// buechi-to-safety construction:                            
assign buechi_satisfied = (state_osState_conc == `os_idle);                          
                            
assign o_err = (fair_cnt >= 8) || controllable_tag_conc >= 10;

initial
 begin
  state_stDMACmd_conc = `wait_bm_ready;
  state_setFeatState_conc = `setFeatIdle;
  state_regFeature0_abs = 0;
  state_regSectors0_abs = 0;
  state_regSectors1_abs = 0;
  state_regLBALow0_abs = 0;
  state_regLBALow1_abs = 0;
  state_regDev_LBA_abs = 0;
  state_regCommand_abs = 0;
  state_regBMCommand_Start_abs = 0;
  state_regBMCommand_RW_abs = 0;
  state_bufAddr_abs = 0;
  state_bufSectors_abs = 0;
  state_osState_conc = `os_init;
  state_os_lba0_abs = 0;
  state_os_lba1_abs = 0;
  state_os_sect0_abs = 0;
  state_os_sect1_abs = 0;
  state_os_buf_abs = 0;
  fair_cnt = 0;
 end

always @(posedge i_clk)
 begin

  if(buechi_satisfied)
   begin
    fair_cnt = 0;
   end
  else
   begin
    fair_cnt = fair_cnt + 1;
   end
 
  //Device state updates:
  state_regFeature0_abs          = next_state_regFeature0_abs ;
  state_regSectors0_abs          = next_state_regSectors0_abs ;
  state_regSectors1_abs          = next_state_regSectors1_abs ;
  state_regLBALow0_abs           = next_state_regLBALow0_abs ;
  state_regLBALow1_abs           = next_state_regLBALow1_abs ;
  state_regDev_LBA_abs           = next_state_regDev_LBA_abs ;
  state_regCommand_abs           = next_state_regCommand_abs ;
  state_regBMCommand_Start_abs   = next_state_regBMCommand_Start_abs ;
  state_regBMCommand_RW_abs      = next_state_regBMCommand_RW_abs ;
  state_bufAddr_abs              = next_state_bufAddr_abs ;
  state_bufSectors_abs           = next_state_bufSectors_abs ;
  state_setFeatState_conc        = next_state_setFeatState_conc ;
  state_stDMACmd_conc            = next_state_stDMACmd_conc ;
  state_os_lba0_abs              = next_state_os_lba0_abs ;
  state_os_lba1_abs              = next_state_os_lba1_abs ;
  state_os_sect0_abs             = next_state_os_sect0_abs ;
  state_os_sect1_abs             = next_state_os_sect1_abs ;
  state_os_buf_abs               = next_state_os_buf_abs ;
  state_osState_conc             = next_state_osState_conc ;
 end
 
 
endmodule
-------------------------------
#!SYNTCOMP
SOLVED_BY : 3/3 [2015-pre-classification], 1/4 [2017-pre-classification], 9/10 [SYNTCOMP2017-RealSeq], 6/6 [SYNTCOMP2017-RealPar], 3/6 [SYNTCOMP2017-SyntSeq], 4/4 [SYNTCOMP2017-SyntPar]
SOLVED_IN : 12.0287 [2015-pre-classification], 0.104 [SYNTCOMP2017-RealSeq], 0.165385 [SYNTCOMP2017-RealPar]
STATUS : realizable
REF_SIZE : 710
#.

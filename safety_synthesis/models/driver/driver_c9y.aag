aag 722 52 80 1 590
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106 1
108 307
110 315
112 323
114 335
116 343
118 351
120 359
122 367
124 381
126 389
128 397
130 405
132 413
134 421
136 429
138 437
140 507
142 519
144 526
146 541
148 549
150 557
152 565
154 573
156 581
158 589
160 597
162 605
164 621
166 631
168 641
170 12
172 8
174 657
176 667
178 677
180 791
182 803
184 809
186 815
188 821
190 829
192 837
194 845
196 1219
198 1239
200 1249
202 1257
204 1263
206 1269
208 1275
210 1281
212 1287
214 1293
216 1299
218 1305
220 10
222 1306
224 1312
226 1320
228 1328
230 1339
232 1345
234 1351
236 1357
238 1363
240 1369
242 1379
244 1385
246 1391
248 1397
250 1403
252 1409
254 1415
256 1421
258 1427
260 1433
262 1439
264 1445
285
266 224 106
268 222 106
270 269 267
272 226 106
274 273 270
276 228 106
278 276 275
280 95 93
282 281 96
284 283 279
286 93 91
288 286 95
290 288 97
292 290 54
294 4 3
296 294 7
298 296 292
300 298 8
302 108 106
304 302 299
306 305 301
308 298 10
310 110 106
312 310 299
314 313 309
316 298 12
318 112 106
320 318 299
322 321 317
324 286 94
326 324 97
328 326 28
330 114 106
332 330 327
334 333 329
336 326 30
338 116 106
340 338 327
342 341 337
344 326 32
346 118 106
348 346 327
350 349 345
352 326 14
354 120 106
356 354 327
358 357 353
360 326 16
362 122 106
364 362 327
366 365 361
368 5 2
370 368 7
372 370 292
374 372 8
376 124 106
378 376 373
380 379 375
382 372 10
384 126 106
386 384 373
388 387 383
390 326 68
392 128 106
394 392 327
396 395 391
398 326 70
400 130 106
402 400 327
404 403 399
406 326 72
408 132 106
410 408 327
412 411 407
414 326 34
416 134 106
418 416 327
420 419 415
422 326 36
424 136 106
426 424 327
428 427 423
430 326 38
432 138 106
434 432 327
436 435 431
438 93 90
440 438 95
442 440 96
444 144 106
446 140 106
448 142 106
450 449 447
452 450 445
454 452 442
456 385 376
458 456 454
460 384 376
462 460 454
464 310 302
466 464 318
468 466 462
470 448 446
472 470 445
474 442 56
476 474 472
478 477 446
480 450 444
482 480 56
484 448 447
486 484 445
488 486 98
490 449 446
492 490 445
494 492 88
496 495 489
498 496 483
500 499 442
502 501 478
504 503 469
506 504 459
508 501 448
510 508 477
512 384 377
514 512 454
516 515 469
518 516 511
520 474 450
522 521 444
524 523 463
526 525 516
528 92 91
530 528 95
532 530 97
534 532 74
536 146 106
538 536 533
540 539 535
542 532 76
544 148 106
546 544 533
548 547 543
550 532 78
552 150 106
554 552 533
556 555 551
558 532 80
560 152 106
562 560 533
564 563 559
566 532 82
568 154 106
570 568 533
572 571 567
574 532 84
576 156 106
578 576 533
580 579 575
582 326 48
584 158 106
586 584 327
588 587 583
590 326 50
592 160 106
594 592 327
596 595 591
598 326 52
600 162 106
602 600 327
604 603 599
606 4 2
608 606 7
610 608 292
612 254 106
614 612 610
616 164 106
618 616 611
620 619 615
622 256 106
624 622 610
626 166 106
628 626 611
630 629 625
632 258 106
634 632 610
636 168 106
638 636 611
640 639 635
642 5 3
644 642 6
646 644 292
648 260 106
650 648 646
652 174 106
654 652 647
656 655 651
658 262 106
660 658 646
662 176 106
664 662 647
666 665 661
668 264 106
670 668 646
672 178 106
674 672 647
676 675 671
678 290 55
680 642 7
682 680 678
684 172 106
686 685 8
688 180 106
690 688 687
692 690 682
694 182 106
696 694 688
698 696 86
700 699 688
702 694 689
704 552 319
706 553 318
708 707 705
710 536 303
712 537 302
714 713 711
716 544 311
718 545 310
720 719 717
722 720 714
724 722 708
726 234 106
728 232 106
730 230 106
732 730 729
734 220 106
736 734 732
738 731 728
740 738 735
742 741 737
744 743 727
746 744 724
748 188 106
750 749 576
752 748 577
754 753 751
756 184 106
758 757 560
760 756 561
762 761 759
764 186 106
766 765 568
768 764 569
770 769 767
772 770 762
774 772 754
776 774 746
778 170 106
780 778 776
782 780 46
784 782 702
786 785 701
788 787 683
790 789 693
792 695 687
794 793 682
796 699 696
798 797 703
800 799 683
802 801 795
804 302 298
806 756 299
808 807 805
810 310 298
812 764 299
814 813 811
816 318 298
818 748 299
820 819 817
822 326 100
824 190 106
826 824 327
828 827 823
830 326 102
832 192 106
834 832 327
836 835 831
838 326 104
840 194 106
842 840 327
844 843 839
846 202 106
848 200 106
850 196 106
852 198 106
854 853 851
856 854 849
858 856 847
860 92 90
862 860 95
864 862 97
866 864 858
868 853 850
870 868 849
872 870 847
874 872 488
876 874 442
878 852 851
880 878 849
882 880 847
884 882 482
886 884 442
888 852 850
890 888 849
892 890 847
894 892 326
896 894 67
898 854 848
900 898 847
902 900 698
904 632 433
906 633 432
908 907 905
910 612 417
912 613 416
914 913 911
916 622 425
918 623 424
920 919 917
922 920 914
924 922 908
926 240 106
928 927 636
930 926 637
932 931 929
934 236 106
936 935 616
938 934 617
940 939 937
942 238 106
944 943 626
946 942 627
948 947 945
950 948 940
952 950 932
954 952 924
956 841 668
958 840 669
960 959 957
962 825 648
964 824 649
966 965 963
968 833 658
970 832 659
972 971 969
974 972 966
976 974 960
978 976 954
980 672 347
982 673 346
984 983 981
986 652 331
988 653 330
990 989 987
992 662 339
994 663 338
996 995 993
998 996 990
1000 998 984
1002 1000 978
1004 246 106
1006 218 106
1008 1007 1004
1010 1006 1005
1012 1011 1009
1014 242 106
1016 214 106
1018 1017 1014
1020 1016 1015
1022 1021 1019
1024 244 106
1026 216 106
1028 1027 1024
1030 1026 1025
1032 1031 1029
1034 1032 1022
1036 1034 1012
1038 1036 1002
1040 252 106
1042 1040 601
1044 1041 600
1046 1045 1043
1048 248 106
1050 1048 585
1052 1049 584
1054 1053 1051
1056 250 106
1058 1056 593
1060 1057 592
1062 1061 1059
1064 1062 1054
1066 1064 1046
1068 1066 1038
1070 409 318
1072 408 319
1074 1073 1071
1076 393 302
1078 392 303
1080 1079 1077
1082 401 310
1084 400 311
1086 1085 1083
1088 1086 1080
1090 1088 1074
1092 1090 1068
1094 212 106
1096 1095 748
1098 1094 749
1100 1099 1097
1102 208 106
1104 1103 756
1106 1102 757
1108 1107 1105
1110 210 106
1112 1111 764
1114 1110 765
1116 1115 1113
1118 1116 1108
1120 1118 1100
1122 1120 1092
1124 204 106
1126 1124 355
1128 1125 354
1130 1129 1127
1132 206 106
1134 1132 363
1136 1133 362
1138 1137 1135
1140 1138 1130
1142 1140 1122
1144 1142 735
1146 1145 902
1148 1146 442
1150 902 59
1152 1150 442
1154 868 848
1156 1154 847
1158 1156 698
1160 1142 734
1162 1161 1158
1164 1162 442
1166 1158 58
1168 1166 442
1170 878 848
1172 1170 847
1174 438 94
1176 1174 97
1178 1176 1172
1180 888 848
1182 1180 847
1184 528 94
1186 1184 97
1188 1186 1182
1190 856 846
1192 860 94
1194 1192 97
1196 1194 1190
1198 1197 1189
1200 1198 1179
1202 1200 851
1204 1203 1169
1206 1204 1165
1208 1207 1153
1210 1209 1149
1212 1210 897
1214 1213 887
1216 1215 877
1218 1217 867
1220 870 846
1222 288 96
1224 1222 1220
1226 1225 853
1228 1226 1200
1230 1228 1165
1232 902 442
1234 1233 1230
1236 1235 895
1238 1237 877
1240 1200 848
1242 1158 442
1244 1243 1240
1246 1244 1149
1248 1247 895
1250 1225 846
1252 1250 1200
1254 1253 1243
1256 1254 1149
1258 532 24
1260 1124 533
1262 1261 1259
1264 532 26
1266 1132 533
1268 1267 1265
1270 326 60
1272 1102 327
1274 1273 1271
1276 326 62
1278 1110 327
1280 1279 1277
1282 326 64
1284 1094 327
1286 1285 1283
1288 326 40
1290 1016 327
1292 1291 1289
1294 326 42
1296 1026 327
1298 1297 1295
1300 326 44
1302 1006 327
1304 1303 1301
1306 893 269
1308 268 266
1310 1309 271
1312 1310 893
1314 1308 272
1316 1309 273
1318 1317 1315
1320 1318 893
1322 1314 277
1324 1315 276
1326 1325 1323
1328 1327 893
1330 606 6
1332 1330 292
1334 1332 8
1336 1333 730
1338 1337 1335
1340 1332 10
1342 1333 728
1344 1343 1341
1346 1332 12
1348 1333 726
1350 1349 1347
1352 326 18
1354 934 327
1356 1355 1353
1358 326 20
1360 942 327
1362 1361 1359
1364 326 22
1366 926 327
1368 1367 1365
1370 368 6
1372 1370 292
1374 1372 8
1376 1373 1014
1378 1377 1375
1380 1372 10
1382 1373 1024
1384 1383 1381
1386 1372 12
1388 1373 1004
1390 1389 1387
1392 1372 1014
1394 1373 1048
1396 1395 1393
1398 1372 1024
1400 1373 1056
1402 1401 1399
1404 1372 1004
1406 1373 1040
1408 1407 1405
1410 610 8
1412 612 611
1414 1413 1411
1416 610 10
1418 622 611
1420 1419 1417
1422 610 12
1424 632 611
1426 1425 1423
1428 646 8
1430 648 647
1432 1431 1429
1434 646 10
1436 658 647
1438 1437 1435
1440 646 12
1442 668 647
1444 1443 1441
i0 controllable_addr_abs<0>
i1 controllable_addr_abs<1>
i2 controllable_addr_abs<2>
i3 controllable_write8_val_abs<0>
i4 controllable_write8_val_abs<1>
i5 controllable_write8_val_abs<2>
i6 i_reqBuf_abs<0>
i7 i_reqBuf_abs<1>
i8 i_reqLBA1_abs<0>
i9 i_reqLBA1_abs<1>
i10 i_reqLBA1_abs<2>
i11 controllable_fillPrdAddr_abs<0>
i12 controllable_fillPrdAddr_abs<1>
i13 i_reqLBA3_abs<0>
i14 i_reqLBA3_abs<1>
i15 i_reqLBA3_abs<2>
i16 i_reqLBA0_abs<0>
i17 i_reqLBA0_abs<1>
i18 i_reqLBA0_abs<2>
i19 i_reqLBA4_abs<0>
i20 i_reqLBA4_abs<1>
i21 i_reqLBA4_abs<2>
i22 controllable_dmaStartClass_conc
i23 i_reqLBA5_abs<0>
i24 i_reqLBA5_abs<1>
i25 i_reqLBA5_abs<2>
i26 controllable_bank_abs
i27 controllable_featXFRClass_conc
i28 i_transSuccess_conc
i29 i_reqSect1_abs<0>
i30 i_reqSect1_abs<1>
i31 i_reqSect1_abs<2>
i32 i_osReqType_conc
i33 i_reqSect0_abs<0>
i34 i_reqSect0_abs<1>
i35 i_reqSect0_abs<2>
i36 controllable_fillPrdNSect_abs<0>
i37 controllable_fillPrdNSect_abs<1>
i38 controllable_fillPrdNSect_abs<2>
i39 controllable_fillPrdNSect_abs<3>
i40 controllable_fillPrdNSect_abs<4>
i41 controllable_fillPrdNSect_abs<5>
i42 controllable_busMasterClass_conc
i43 controllable_featWCClass_conc
i44 controllable_tag_conc<0>
i45 controllable_tag_conc<1>
i46 controllable_tag_conc<2>
i47 controllable_tag_conc<3>
i48 controllable_featNWCClass_conc
i49 i_reqLBA2_abs<0>
i50 i_reqLBA2_abs<1>
i51 i_reqLBA2_abs<2>
l0 n107
l1 state_regSectors0_abs<0>_out
l2 state_regSectors0_abs<1>_out
l3 state_regSectors0_abs<2>_out
l4 state_os_lba3_abs<0>_out
l5 state_os_lba3_abs<1>_out
l6 state_os_lba3_abs<2>_out
l7 state_os_buf_abs<0>_out
l8 state_os_buf_abs<1>_out
l9 state_regFeature0_abs<0>_out
l10 state_regFeature0_abs<1>_out
l11 state_os_sect0_abs<0>_out
l12 state_os_sect0_abs<1>_out
l13 state_os_sect0_abs<2>_out
l14 state_os_lba0_abs<0>_out
l15 state_os_lba0_abs<1>_out
l16 state_os_lba0_abs<2>_out
l17 state_setFeatState_conc<0>_out
l18 state_setFeatState_conc<1>_out
l19 state_setFeatState_conc<2>_out
l20 state_bufSectors_abs<0>_out
l21 state_bufSectors_abs<1>_out
l22 state_bufSectors_abs<2>_out
l23 state_bufSectors_abs<3>_out
l24 state_bufSectors_abs<4>_out
l25 state_bufSectors_abs<5>_out
l26 state_os_lba5_abs<0>_out
l27 state_os_lba5_abs<1>_out
l28 state_os_lba5_abs<2>_out
l29 state_regLBALow1_abs<0>_out
l30 state_regLBALow1_abs<1>_out
l31 state_regLBALow1_abs<2>_out
l32 state_regDev_LBA_abs_out
l33 state_regBMCommand_Start_abs_out
l34 state_regLBAMid1_abs<0>_out
l35 state_regLBAMid1_abs<1>_out
l36 state_regLBAMid1_abs<2>_out
l37 state_stDMACmd_conc<0>_out
l38 state_stDMACmd_conc<1>_out
l39 state_regSectors1_abs<0>_out
l40 state_regSectors1_abs<1>_out
l41 state_regSectors1_abs<2>_out
l42 state_os_lba2_abs<0>_out
l43 state_os_lba2_abs<1>_out
l44 state_os_lba2_abs<2>_out
l45 state_osState_conc<0>_out
l46 state_osState_conc<1>_out
l47 state_osState_conc<2>_out
l48 state_osState_conc<3>_out
l49 state_bufAddr_abs<0>_out
l50 state_bufAddr_abs<1>_out
l51 state_os_sect1_abs<0>_out
l52 state_os_sect1_abs<1>_out
l53 state_os_sect1_abs<2>_out
l54 state_os_lba4_abs<0>_out
l55 state_os_lba4_abs<1>_out
l56 state_os_lba4_abs<2>_out
l57 state_regBMCommand_RW_abs_out
l58 fair_cnt<0>_out
l59 fair_cnt<1>_out
l60 fair_cnt<2>_out
l61 fair_cnt<3>_out
l62 state_regCommand_abs<0>_out
l63 state_regCommand_abs<1>_out
l64 state_regCommand_abs<2>_out
l65 state_os_lba1_abs<0>_out
l66 state_os_lba1_abs<1>_out
l67 state_os_lba1_abs<2>_out
l68 state_regLBAHigh0_abs<0>_out
l69 state_regLBAHigh0_abs<1>_out
l70 state_regLBAHigh0_abs<2>_out
l71 state_regLBAHigh1_abs<0>_out
l72 state_regLBAHigh1_abs<1>_out
l73 state_regLBAHigh1_abs<2>_out
l74 state_regLBALow0_abs<0>_out
l75 state_regLBALow0_abs<1>_out
l76 state_regLBALow0_abs<2>_out
l77 state_regLBAMid0_abs<0>_out
l78 state_regLBAMid0_abs<1>_out
l79 state_regLBAMid0_abs<2>_out
o0 o_err
c
ide_hard_drive_controller_2
This file was written by ABC on Tue Mar 11 20:24:21 2014
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv driver_c9.v   ---gives--> driver_c9.mv
> abc -c "read_blif_mv driver_c9.mv; strash; refactor; rewrite; dfraig; rewrite; dfraig; write_aiger -s driver_c9y.aig"   ---gives--> driver_c9y.aig
> aigtoaig driver_c9y.aig driver_c9y.aag   ---gives--> driver_c9y.aag (this file)
Content of driver_c9.v:
// IDE hard drive controller specification and operating system interface
// specification for device driver synthesis.
// This file describes a GR(1) game played by a device driver for an IDE hard
// disk against its environment consisting of the hard disk and operating
// system.

`define WIDTH1 2
`define WIDTH2 1

`define CMD_READ_DMA_EXT  1
`define CMD_WRITE_DMA_EXT 2
`define FEAT_WC           1
`define FEAT_NWC          2
`define FEAT_XFR_MODE     3
`define XM_ULTRA_DMA      7

`define RCMD              1
`define REG_FEATURE0      1
`define REG_SECTORS       2
`define REG_LBA_LOW       3
`define REG_LBA_MID       4
`define REG_LBA_HIGH      5
`define REG_DEV           6
`define REG_ERRCMD        7

`define RDMA              0
`define REG_BM_COMMAND    0

//typedef enum {read=0, write=1} i_osReqType_enum;
`define read              0
`define write             1

//typedef enum {write8, write32, fillPrd, reset, os_req, ack_read_succ, ack_read_fail, ack_write_succ, ack_write_fail, class_event} controllable_tag_enum;
`define write8            0
`define write32           1
`define fillPrd           2
`define reset             3
`define os_req            4
`define ack_read_succ     5
`define ack_read_fail     6
`define ack_write_succ    7
`define ack_write_fail    8
`define class_event       9

//typedef enum {wait_bm_ready=0, dma_read=1, bm_read_prd=2, bm_ready=3} state_stDMACmd_enum;
`define wait_bm_ready     0
`define dma_read          1
`define bm_read_prd       2
`define bm_ready          3


//typedef enum {setFeatIdle=0, setFeatWC=1, setFeatNWC=2, setFeatXFR0=3, setFeatXFR1=4} state_setFeatState_enum;
`define setFeatIdle       0
`define setFeatWC         1
`define setFeatNWC        2
`define setFeatXFR0       3
`define setFeatXFR1       4

//typedef enum {os_init=0, os_reset=1, os_write_cache=2, os_idle=3, os_read_pending=4, os_write_pending=5, os_read_ack_succ=6, os_read_ack_fail=7, os_write_ack_succ=8, os_write_ack_fail=9, os_error=10} state_osState_enum;
`define os_init           0
`define os_reset          1
`define os_write_cache    2
`define os_idle           3
`define os_read_pending   4
`define os_write_pending  5
`define os_read_ack_succ  6
`define os_read_ack_fail  7
`define os_write_ack_succ 8
`define os_write_ack_fail 9
`define os_error          10

module ide_hard_drive_controller_2(
        o_err,
        i_clk,
        i_osReqType_conc,
        i_reqLBA0_abs,
        i_reqLBA1_abs,
        i_reqLBA2_abs,
        i_reqLBA3_abs,
        i_reqLBA4_abs,
        i_reqLBA5_abs,
        i_reqSect0_abs,
        i_reqSect1_abs,
        i_reqBuf_abs,
        i_transSuccess_conc,
        controllable_tag_conc,
        controllable_bank_abs,
        controllable_addr_abs,
        controllable_write8_val_abs,
        controllable_fillPrdAddr_abs,
        controllable_fillPrdNSect_abs,
        controllable_featWCClass_conc,
        controllable_featNWCClass_conc,
        controllable_featXFRClass_conc,
        controllable_busMasterClass_conc,
        controllable_dmaStartClass_conc );

input i_clk;
input i_osReqType_conc ;
input [`WIDTH1:0] i_reqLBA0_abs ;
input [`WIDTH1:0] i_reqLBA1_abs ;
input [`WIDTH1:0] i_reqLBA2_abs ;
input [`WIDTH1:0] i_reqLBA3_abs ;
input [`WIDTH1:0] i_reqLBA4_abs ;
input [`WIDTH1:0] i_reqLBA5_abs ;
input [`WIDTH1:0] i_reqSect0_abs ;
input [`WIDTH1:0] i_reqSect1_abs ;
input [`WIDTH2:0] i_reqBuf_abs ;
input i_transSuccess_conc ;
input [3:0] controllable_tag_conc ;
input controllable_bank_abs ;
input [2:0] controllable_addr_abs ;
input [`WIDTH1:0] controllable_write8_val_abs ;
input [`WIDTH2:0] controllable_fillPrdAddr_abs ;
input [5:0] controllable_fillPrdNSect_abs ;
input controllable_featWCClass_conc ;
input controllable_featNWCClass_conc ;
input controllable_featXFRClass_conc ;
input controllable_busMasterClass_conc ;
input controllable_dmaStartClass_conc ;
output o_err;

reg [1:0] state_stDMACmd_conc ;
reg [2:0] state_setFeatState_conc ;
reg [1:0] state_regFeature0_abs ;
reg [`WIDTH1:0] state_regSectors0_abs ;
reg [`WIDTH1:0] state_regSectors1_abs ;
reg [`WIDTH1:0] state_regLBALow0_abs ;
reg [`WIDTH1:0] state_regLBALow1_abs ;
reg [`WIDTH1:0] state_regLBAMid0_abs ;
reg [`WIDTH1:0] state_regLBAMid1_abs ;
reg [`WIDTH1:0] state_regLBAHigh0_abs ;
reg [`WIDTH1:0] state_regLBAHigh1_abs ;
reg state_regDev_LBA_abs ;
reg [`WIDTH1:0] state_regCommand_abs ;
reg state_regBMCommand_Start_abs ;
reg state_regBMCommand_RW_abs ;
reg [`WIDTH2:0] state_bufAddr_abs ;
reg [5:0] state_bufSectors_abs ;

reg [3:0] state_osState_conc ;
reg [`WIDTH1:0] state_os_lba0_abs ;
reg [`WIDTH1:0] state_os_lba1_abs ;
reg [`WIDTH1:0] state_os_lba2_abs ;
reg [`WIDTH1:0] state_os_lba3_abs ;
reg [`WIDTH1:0] state_os_lba4_abs ;
reg [`WIDTH1:0] state_os_lba5_abs ;
reg [`WIDTH1:0] state_os_sect0_abs ;
reg [`WIDTH1:0] state_os_sect1_abs ;
reg [`WIDTH2:0] state_os_buf_abs ;

reg [3:0] fair_cnt;

wire transferMode3;
wire nwc;
wire bm_event;
wire transferCorrect;
wire transferCorrect_0;
wire transferCorrect_1;
wire buechi_satisfied;
wire [1:0] next_state_stDMACmd_conc ;
wire [2:0] next_state_setFeatState_conc ;
wire [1:0] next_state_regFeature0_abs ;
wire [`WIDTH1:0] next_state_regSectors0_abs ;
wire [`WIDTH1:0] next_state_regSectors1_abs ;
wire [`WIDTH1:0] next_state_regLBALow0_abs ;
wire [`WIDTH1:0] next_state_regLBALow1_abs ;
wire [`WIDTH1:0] next_state_regLBAMid0_abs ;
wire [`WIDTH1:0] next_state_regLBAMid1_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh0_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh1_abs ;
wire next_state_regDev_LBA_abs ;
wire [`WIDTH1:0] next_state_regCommand_abs ;
wire next_state_regBMCommand_Start_abs ;
wire next_state_regBMCommand_RW_abs ;
wire [`WIDTH2:0] next_state_bufAddr_abs ;
wire [5:0] next_state_bufSectors_abs ;

wire [3:0] next_state_osState_conc ;
wire [`WIDTH1:0] next_state_os_lba0_abs ;
wire [`WIDTH1:0] next_state_os_lba1_abs ;
wire [`WIDTH1:0] next_state_os_lba2_abs ;
wire [`WIDTH1:0] next_state_os_lba3_abs ;
wire [`WIDTH1:0] next_state_os_lba4_abs ;
wire [`WIDTH1:0] next_state_os_lba5_abs ;
wire [`WIDTH1:0] next_state_os_sect0_abs ;
wire [`WIDTH1:0] next_state_os_sect1_abs ;
wire [`WIDTH2:0] next_state_os_buf_abs ;

// some abbreviations:
assign transferMode3 = (state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1);
assign nwc =           (state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1);
assign bm_event = (state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1);
assign transferCorrect = (state_os_lba0_abs==state_regLBALow0_abs    &&
                          state_os_lba1_abs==state_regLBALow1_abs    &&
                          state_os_lba2_abs==state_regLBAMid0_abs    &&
                          state_os_lba3_abs==state_regLBAMid1_abs    &&
                          state_os_lba4_abs==state_regLBAHigh0_abs   &&
                          state_os_lba5_abs==state_regLBAHigh1_abs   &&
                          state_os_sect0_abs==state_regSectors0_abs  &&
                          state_os_sect1_abs==state_regSectors1_abs  &&
                          state_os_buf_abs==state_bufAddr_abs);
assign transferCorrect_0 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==0);
assign transferCorrect_1 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==1);


// state updates:
  //Device state updates:
assign next_state_regFeature0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_FEATURE0) ? controllable_write8_val_abs  : state_regFeature0_abs;
assign next_state_regSectors0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? controllable_write8_val_abs  : state_regSectors0_abs;
assign next_state_regSectors1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? state_regSectors0_abs : state_regSectors1_abs;
assign next_state_regLBALow0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? controllable_write8_val_abs  : state_regLBALow0_abs;
assign next_state_regLBALow1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? state_regLBALow0_abs  : state_regLBALow1_abs;
assign next_state_regLBAMid0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? controllable_write8_val_abs  : state_regLBAMid0_abs;
assign next_state_regLBAMid1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? state_regLBAMid0_abs  : state_regLBAMid1_abs;
assign next_state_regLBAHigh0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? controllable_write8_val_abs  : state_regLBAHigh0_abs;
assign next_state_regLBAHigh1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? state_regLBAHigh0_abs : state_regLBAHigh1_abs;
assign next_state_regDev_LBA_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_DEV)      ? controllable_write8_val_abs[2:2] : state_regDev_LBA_abs;
assign next_state_regCommand_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_ERRCMD)   ? controllable_write8_val_abs  : state_regCommand_abs;
assign next_state_regBMCommand_Start_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[0:0] : state_regBMCommand_Start_abs;
assign next_state_regBMCommand_RW_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[1:1] : state_regBMCommand_RW_abs;
assign next_state_bufAddr_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdAddr_abs : state_bufAddr_abs;
assign next_state_bufSectors_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdNSect_abs : state_bufSectors_abs;

assign next_state_setFeatState_conc = (controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_WC) ? `setFeatWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_NWC) ? `setFeatNWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE && state_regSectors0_abs==`XM_ULTRA_DMA) ? `setFeatXFR0 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE) ? `setFeatXFR1 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatWC   && controllable_featWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR0 && controllable_featXFRClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1) ? `setFeatIdle : state_setFeatState_conc)))))));

assign next_state_stDMACmd_conc = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ?
               (
                 (state_regBMCommand_Start_abs==0 && controllable_write8_val_abs[0:0]==1) ? `bm_read_prd : state_stDMACmd_conc
               ) :
               (
                 (state_stDMACmd_conc==`bm_read_prd) ?
                 (((state_regBMCommand_RW_abs == 1 && state_regCommand_abs != `CMD_READ_DMA_EXT) || (state_regBMCommand_RW_abs == 0 && state_regCommand_abs != `CMD_WRITE_DMA_EXT) || (state_regSectors0_abs != state_bufSectors_abs[`WIDTH1:0]) || (state_regSectors1_abs != state_bufSectors_abs[5:3]) || state_regDev_LBA_abs != 1) ? state_stDMACmd_conc : ((controllable_dmaStartClass_conc==1) ? `bm_ready : state_stDMACmd_conc)) :
                 ((state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1) ? `wait_bm_ready : state_stDMACmd_conc)
               );

//OS state updates
assign next_state_os_lba0_abs = (controllable_tag_conc==`os_req) ? i_reqLBA0_abs : state_os_lba0_abs;
assign next_state_os_lba1_abs = (controllable_tag_conc==`os_req) ? i_reqLBA1_abs : state_os_lba1_abs;
assign next_state_os_lba2_abs = (controllable_tag_conc==`os_req) ? i_reqLBA2_abs : state_os_lba2_abs;
assign next_state_os_lba3_abs = (controllable_tag_conc==`os_req) ? i_reqLBA3_abs : state_os_lba3_abs;
assign next_state_os_lba4_abs = (controllable_tag_conc==`os_req) ? i_reqLBA4_abs : state_os_lba4_abs;
assign next_state_os_lba5_abs = (controllable_tag_conc==`os_req) ? i_reqLBA5_abs : state_os_lba5_abs;
assign next_state_os_sect0_abs = (controllable_tag_conc==`os_req) ? i_reqSect0_abs : state_os_sect0_abs;
assign next_state_os_sect1_abs = (controllable_tag_conc==`os_req) ? i_reqSect1_abs : state_os_sect1_abs;
assign next_state_os_buf_abs = (controllable_tag_conc==`os_req) ? i_reqBuf_abs : state_os_buf_abs;

assign next_state_osState_conc = (state_osState_conc==`os_init && controllable_tag_conc==`reset) ? `os_reset :
      ((state_osState_conc==`os_reset && nwc && controllable_tag_conc==`class_event) ? `os_write_cache :
      ((state_osState_conc==`os_write_cache && transferMode3 && controllable_tag_conc==`class_event) ? `os_idle :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`read) ? `os_read_pending :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`write) ? `os_write_pending :
      ((state_osState_conc==`os_read_pending && bm_event && !transferCorrect_0 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_read_ack_succ :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_read_ack_fail :
      ((state_osState_conc==`os_write_pending && bm_event && !transferCorrect_1 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_write_ack_succ :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_write_ack_fail :
      ((state_osState_conc==`os_read_ack_succ && controllable_tag_conc==`ack_read_succ) ? `os_idle :
      ((state_osState_conc==`os_read_ack_fail && controllable_tag_conc==`ack_read_fail) ? `os_idle :
      ((state_osState_conc==`os_write_ack_succ && controllable_tag_conc==`ack_write_succ) ? `os_idle :
      ((state_osState_conc==`os_write_ack_fail && controllable_tag_conc==`ack_write_fail) ? `os_idle : state_osState_conc))))))))))))));


// buechi-to-safety construction:                            
assign buechi_satisfied = (state_osState_conc == `os_idle);                          
                            
assign o_err = (fair_cnt >= 9) || controllable_tag_conc >= 10;

initial
 begin
  state_stDMACmd_conc = `wait_bm_ready;
  state_setFeatState_conc = `setFeatIdle;
  state_regFeature0_abs = 0;
  state_regSectors0_abs = 0;
  state_regSectors1_abs = 0;
  state_regLBALow0_abs = 0;
  state_regLBALow1_abs = 0;
  state_regLBAMid0_abs = 0;
  state_regLBAMid1_abs = 0;
  state_regLBAHigh0_abs = 0;
  state_regLBAHigh1_abs = 0;
  state_regDev_LBA_abs = 0;
  state_regCommand_abs = 0;
  state_regBMCommand_Start_abs = 0;
  state_regBMCommand_RW_abs = 0;
  state_bufAddr_abs = 0;
  state_bufSectors_abs = 0;
  state_osState_conc = `os_init;
  state_os_lba0_abs = 0;
  state_os_lba1_abs = 0;
  state_os_lba2_abs = 0;
  state_os_lba3_abs = 0;
  state_os_lba4_abs = 0;
  state_os_lba5_abs = 0;
  state_os_sect0_abs = 0;
  state_os_sect1_abs = 0;
  state_os_buf_abs = 0;
  fair_cnt = 0;
 end

always @(posedge i_clk)
 begin

  if(buechi_satisfied)
   begin
    fair_cnt = 0;
   end
  else
   begin
    fair_cnt = fair_cnt + 1;
   end
 
  //Device state updates:
  state_regFeature0_abs          = next_state_regFeature0_abs ;
  state_regSectors0_abs          = next_state_regSectors0_abs ;
  state_regSectors1_abs          = next_state_regSectors1_abs ;
  state_regLBALow0_abs           = next_state_regLBALow0_abs ;
  state_regLBALow1_abs           = next_state_regLBALow1_abs ;
  state_regLBAMid0_abs           = next_state_regLBAMid0_abs ;
  state_regLBAMid1_abs           = next_state_regLBAMid1_abs ;
  state_regLBAHigh0_abs          = next_state_regLBAHigh0_abs ;
  state_regLBAHigh1_abs          = next_state_regLBAHigh1_abs ;
  state_regDev_LBA_abs           = next_state_regDev_LBA_abs ;
  state_regCommand_abs           = next_state_regCommand_abs ;
  state_regBMCommand_Start_abs   = next_state_regBMCommand_Start_abs ;
  state_regBMCommand_RW_abs      = next_state_regBMCommand_RW_abs ;
  state_bufAddr_abs              = next_state_bufAddr_abs ;
  state_bufSectors_abs           = next_state_bufSectors_abs ;
  state_setFeatState_conc        = next_state_setFeatState_conc ;
  state_stDMACmd_conc            = next_state_stDMACmd_conc ;
  state_os_lba0_abs              = next_state_os_lba0_abs ;
  state_os_lba1_abs              = next_state_os_lba1_abs ;
  state_os_lba2_abs              = next_state_os_lba2_abs ;
  state_os_lba3_abs              = next_state_os_lba3_abs ;
  state_os_lba4_abs              = next_state_os_lba4_abs ;
  state_os_lba5_abs              = next_state_os_lba5_abs ;
  state_os_sect0_abs             = next_state_os_sect0_abs ;
  state_os_sect1_abs             = next_state_os_sect1_abs ;
  state_os_buf_abs               = next_state_os_buf_abs ;
  state_osState_conc             = next_state_osState_conc ;
 end
 
 
endmodule
-------------------------------
#!SYNTCOMP
SOLVED_BY : 3/3 [2015-pre-classification], 0/4 [2017-pre-classification], 6/10 [SYNTCOMP2017-RealSeq], 3/6 [SYNTCOMP2017-RealPar], 0/6 [SYNTCOMP2017-SyntSeq], 1/4 [SYNTCOMP2017-SyntPar]
SOLVED_IN : 259.653 [2015-pre-classification], 0.08 [SYNTCOMP2017-RealSeq], 0.190633 [SYNTCOMP2017-RealPar]
STATUS : realizable
REF_SIZE : 627
#.

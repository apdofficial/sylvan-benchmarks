aag 756 40 55 1 661
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82 1
84 269
86 281
88 293
90 309
92 321
94 339
96 351
98 363
100 375
102 387
104 399
106 411
108 423
110 521
112 540
114 558
116 575
118 587
120 599
122 611
124 623
126 635
128 659
130 677
132 695
134 705
136 719
138 873
140 901
142 907
144 913
146 919
148 1273
150 1322
152 1360
154 1398
156 1405
158 1411
160 1417
162 1423
164 1429
166 1435
168 1436
170 1444
172 1454
174 1465
176 1471
178 1477
180 1483
182 1489
184 1495
186 1501
188 1507
190 1513
243
192 173 82
194 172 82
196 193 82
198 171 82
200 170 82
202 199 82
204 169 82
206 168 82
208 205 82
210 207 201
212 210 196
214 213 197
216 77 75
218 216 79
220 219 78
222 220 217
224 76 74
226 225 217
228 217 79
230 216 78
232 231 229
234 74 73
236 234 226
238 236 232
240 239 223
242 240 214
244 75 73
246 244 77
248 246 79
250 248 36
252 4 3
254 252 7
256 254 250
258 85 82
260 84 82
262 259 82
264 256 8
266 260 257
268 267 265
270 87 82
272 86 82
274 271 82
276 256 10
278 272 257
280 279 277
282 89 82
284 88 82
286 283 82
288 256 12
290 284 257
292 291 289
294 244 76
296 294 79
298 91 82
300 90 82
302 299 82
304 296 14
306 300 297
308 307 305
310 93 82
312 92 82
314 311 82
316 296 16
318 312 297
320 319 317
322 5 2
324 322 7
326 324 250
328 95 82
330 94 82
332 329 82
334 326 8
336 330 327
338 337 335
340 97 82
342 96 82
344 341 82
346 326 10
348 342 327
350 349 347
352 99 82
354 98 82
356 353 82
358 296 50
360 354 297
362 361 359
364 101 82
366 100 82
368 365 82
370 296 52
372 366 297
374 373 371
376 103 82
378 102 82
380 377 82
382 296 54
384 378 297
386 385 383
388 105 82
390 104 82
392 389 82
394 296 28
396 390 297
398 397 395
400 107 82
402 106 82
404 401 82
406 296 30
408 402 297
410 409 407
412 109 82
414 108 82
416 413 82
418 296 32
420 414 297
422 421 419
424 75 72
426 424 77
428 426 78
430 111 82
432 110 82
434 431 82
436 113 82
438 112 82
440 437 82
442 115 82
444 114 82
446 443 82
448 439 433
450 448 445
452 450 428
454 343 332
456 454 452
458 344 331
460 458 452
462 344 332
464 462 452
466 274 262
468 466 286
470 468 464
472 439 434
474 472 445
476 474 428
478 476 70
480 440 433
482 480 445
484 482 428
486 484 80
488 440 434
490 488 445
492 490 428
494 492 38
496 448 446
498 496 428
500 498 38
502 501 432
504 502 495
506 504 487
508 506 479
510 508 465
512 510 471
514 513 471
516 515 461
518 516 457
520 519 457
522 501 438
524 522 495
526 524 487
528 526 479
530 528 465
532 530 471
534 533 471
536 535 461
538 537 461
540 539 457
542 501 444
544 542 495
546 544 487
548 546 479
550 548 465
552 551 465
554 553 471
556 554 461
558 556 457
560 234 77
562 560 79
564 117 82
566 116 82
568 565 82
570 562 56
572 566 563
574 573 571
576 119 82
578 118 82
580 577 82
582 562 58
584 578 563
586 585 583
588 121 82
590 120 82
592 589 82
594 562 60
596 590 563
598 597 595
600 123 82
602 122 82
604 601 82
606 562 62
608 602 563
610 609 607
612 125 82
614 124 82
616 613 82
618 562 64
620 614 563
622 621 619
624 127 82
626 126 82
628 625 82
630 562 66
632 626 563
634 633 631
636 4 2
638 636 7
640 638 250
642 187 82
644 186 82
646 643 82
648 129 82
650 128 82
652 649 82
654 644 640
656 650 641
658 657 655
660 189 82
662 188 82
664 661 82
666 131 82
668 130 82
670 667 82
672 662 640
674 668 641
676 675 673
678 191 82
680 190 82
682 679 82
684 133 82
686 132 82
688 685 82
690 680 640
692 686 641
694 693 691
696 252 6
698 696 250
700 698 12
702 699 12
704 703 701
706 248 37
708 5 3
710 708 7
712 710 706
714 712 8
716 713 8
718 717 715
720 136 82
722 721 8
724 139 82
726 138 82
728 725 82
730 726 723
732 141 82
734 140 82
736 733 82
738 736 727
740 167 82
742 166 82
744 741 82
746 175 82
748 174 82
750 747 82
752 177 82
754 176 82
756 753 82
758 178 82
760 755 750
762 760 759
764 763 744
766 756 749
768 766 759
770 769 743
772 771 765
774 566 263
776 569 260
778 777 775
780 578 275
782 581 272
784 783 781
786 590 287
788 593 284
790 789 787
792 784 778
794 792 790
796 794 772
798 143 82
800 142 82
802 799 82
804 803 602
806 800 605
808 807 805
810 145 82
812 144 82
814 811 82
816 815 614
818 812 617
820 819 817
822 147 82
824 146 82
826 823 82
828 827 626
830 824 629
832 831 829
834 820 808
836 834 832
838 836 796
840 135 82
842 841 82
844 842 838
846 726 35
848 847 35
850 845 726
852 849 844
854 853 851
856 736 728
858 856 68
860 859 726
862 855 738
864 860 739
866 865 863
868 730 712
870 867 713
872 871 869
874 734 723
876 875 723
878 734 35
880 879 35
882 845 734
884 881 844
886 885 883
888 859 734
890 887 738
892 888 739
894 893 891
896 877 712
898 895 713
900 899 897
902 260 256
904 800 257
906 905 903
908 272 256
910 812 257
912 911 909
914 284 256
916 824 257
918 917 915
920 149 82
922 148 82
924 921 82
926 151 82
928 150 82
930 927 82
932 153 82
934 152 82
936 933 82
938 155 82
940 154 82
942 939 82
944 929 923
946 944 935
948 946 941
950 74 72
952 950 77
954 952 79
956 954 948
958 929 924
960 958 935
962 960 941
964 482 80
966 964 962
968 966 428
970 930 923
972 970 935
974 972 941
976 496 38
978 976 974
980 978 428
982 930 924
984 982 935
986 984 941
988 986 296
990 988 49
992 988 48
994 944 936
996 994 941
998 996 858
1000 644 393
1002 647 390
1004 1003 1001
1006 662 405
1008 665 402
1010 1009 1007
1012 680 417
1014 683 414
1016 1015 1013
1018 1010 1004
1020 1018 1016
1022 181 82
1024 180 82
1026 1023 82
1028 1027 650
1030 1024 653
1032 1031 1029
1034 183 82
1036 182 82
1038 1035 82
1040 1039 668
1042 1036 671
1044 1043 1041
1046 185 82
1048 184 82
1050 1047 82
1052 1051 686
1054 1048 689
1056 1055 1053
1058 1044 1032
1060 1058 1056
1062 1060 1020
1064 357 260
1066 354 263
1068 1067 1065
1070 369 272
1072 366 275
1074 1073 1071
1076 381 284
1078 378 287
1080 1079 1077
1082 1074 1068
1084 1082 1080
1086 1084 1062
1088 161 82
1090 160 82
1092 1089 82
1094 1093 800
1096 1090 803
1098 1097 1095
1100 163 82
1102 162 82
1104 1101 82
1106 1105 812
1108 1102 815
1110 1109 1107
1112 165 82
1114 164 82
1116 1113 82
1118 1117 824
1120 1114 827
1122 1121 1119
1124 1110 1098
1126 1124 1122
1128 1126 1086
1130 157 82
1132 156 82
1134 1131 82
1136 1132 303
1138 1135 300
1140 1139 1137
1142 159 82
1144 158 82
1146 1143 82
1148 1144 315
1150 1147 312
1152 1151 1149
1154 1152 1140
1156 1154 1128
1158 1156 743
1160 1159 998
1162 1160 428
1164 998 40
1166 1164 428
1168 998 41
1170 1168 428
1172 958 936
1174 1172 941
1176 1174 858
1178 1156 744
1180 1179 1176
1182 1180 428
1184 1176 40
1186 1184 428
1188 1176 41
1190 1188 428
1192 970 936
1194 1192 941
1196 424 76
1198 1196 79
1200 1198 1194
1202 982 936
1204 1202 941
1206 234 76
1208 1206 79
1210 1208 1204
1212 946 942
1214 950 76
1216 1214 79
1218 1216 1212
1220 960 942
1222 246 78
1224 1222 1220
1226 1225 922
1228 1227 1225
1230 1229 1219
1232 1231 1219
1234 1233 1211
1236 1235 1211
1238 1237 1201
1240 1239 1201
1242 1241 1191
1244 1243 1191
1246 1245 1187
1248 1246 1183
1250 1248 1171
1252 1251 1171
1254 1253 1167
1256 1254 1163
1258 1256 993
1260 1259 993
1262 1261 991
1264 1262 981
1266 1265 981
1268 1267 969
1270 1268 957
1272 1271 957
1274 1225 928
1276 1275 1225
1278 1277 1219
1280 1279 1219
1282 1281 1211
1284 1283 1211
1286 1285 1201
1288 1287 1201
1290 1289 1191
1292 1290 1187
1294 1292 1183
1296 1295 1183
1298 1297 1171
1300 1299 1171
1302 1301 1167
1304 1303 1167
1306 1305 1163
1308 1307 1163
1310 1309 993
1312 1310 991
1314 1312 981
1316 1315 981
1318 1317 969
1320 1319 969
1322 1321 957
1324 1225 934
1326 1324 1219
1328 1326 1211
1330 1328 1201
1332 1330 1191
1334 1332 1187
1336 1334 1183
1338 1336 1171
1340 1339 1171
1342 1341 1167
1344 1343 1167
1346 1345 1163
1348 1346 993
1350 1349 993
1352 1351 991
1354 1353 991
1356 1355 981
1358 1356 969
1360 1358 957
1362 1225 940
1364 1362 1219
1366 1364 1211
1368 1366 1201
1370 1368 1191
1372 1371 1191
1374 1373 1187
1376 1375 1187
1378 1377 1183
1380 1379 1183
1382 1381 1171
1384 1382 1167
1386 1384 1163
1388 1387 1163
1390 1389 993
1392 1390 991
1394 1392 981
1396 1394 969
1398 1396 957
1400 562 24
1402 1132 563
1404 1403 1401
1406 562 26
1408 1144 563
1410 1409 1407
1412 296 42
1414 1090 297
1416 1415 1413
1418 296 44
1420 1102 297
1422 1421 1419
1424 296 46
1426 1114 297
1428 1427 1425
1430 712 10
1432 713 10
1434 1433 1431
1436 987 209
1438 206 203
1440 207 200
1442 1441 1439
1444 1443 987
1446 206 200
1448 1446 197
1450 1447 194
1452 1451 1449
1454 1453 987
1456 636 6
1458 1456 250
1460 1458 8
1462 1459 748
1464 1463 1461
1466 1458 10
1468 1459 754
1470 1469 1467
1472 1458 12
1474 1459 758
1476 1475 1473
1478 296 18
1480 1024 297
1482 1481 1479
1484 296 20
1486 1036 297
1488 1487 1485
1490 296 22
1492 1048 297
1494 1493 1491
1496 640 8
1498 644 641
1500 1499 1497
1502 640 10
1504 662 641
1506 1505 1503
1508 640 12
1510 680 641
1512 1511 1509
i0 controllable_addr_abs<0>
i1 controllable_addr_abs<1>
i2 controllable_addr_abs<2>
i3 controllable_write8_val_abs<0>
i4 controllable_write8_val_abs<1>
i5 controllable_write8_val_abs<2>
i6 i_reqBuf_abs<0>
i7 i_reqBuf_abs<1>
i8 i_reqLBA1_abs<0>
i9 i_reqLBA1_abs<1>
i10 i_reqLBA1_abs<2>
i11 controllable_fillPrdAddr_abs<0>
i12 controllable_fillPrdAddr_abs<1>
i13 i_reqLBA0_abs<0>
i14 i_reqLBA0_abs<1>
i15 i_reqLBA0_abs<2>
i16 controllable_dmaStartClass_conc
i17 controllable_bank_abs
i18 controllable_featXFRClass_conc
i19 i_transSuccess_conc
i20 i_reqSect1_abs<0>
i21 i_reqSect1_abs<1>
i22 i_reqSect1_abs<2>
i23 i_osReqType_conc
i24 i_reqSect0_abs<0>
i25 i_reqSect0_abs<1>
i26 i_reqSect0_abs<2>
i27 controllable_fillPrdNSect_abs<0>
i28 controllable_fillPrdNSect_abs<1>
i29 controllable_fillPrdNSect_abs<2>
i30 controllable_fillPrdNSect_abs<3>
i31 controllable_fillPrdNSect_abs<4>
i32 controllable_fillPrdNSect_abs<5>
i33 controllable_busMasterClass_conc
i34 controllable_featWCClass_conc
i35 controllable_tag_conc<0>
i36 controllable_tag_conc<1>
i37 controllable_tag_conc<2>
i38 controllable_tag_conc<3>
i39 controllable_featNWCClass_conc
l0 n83
l1 state_regSectors0_abs<0>_out
l2 state_regSectors0_abs<1>_out
l3 state_regSectors0_abs<2>_out
l4 state_os_buf_abs<0>_out
l5 state_os_buf_abs<1>_out
l6 state_regFeature0_abs<0>_out
l7 state_regFeature0_abs<1>_out
l8 state_os_sect0_abs<0>_out
l9 state_os_sect0_abs<1>_out
l10 state_os_sect0_abs<2>_out
l11 state_os_lba0_abs<0>_out
l12 state_os_lba0_abs<1>_out
l13 state_os_lba0_abs<2>_out
l14 state_setFeatState_conc<0>_out
l15 state_setFeatState_conc<1>_out
l16 state_setFeatState_conc<2>_out
l17 state_bufSectors_abs<0>_out
l18 state_bufSectors_abs<1>_out
l19 state_bufSectors_abs<2>_out
l20 state_bufSectors_abs<3>_out
l21 state_bufSectors_abs<4>_out
l22 state_bufSectors_abs<5>_out
l23 state_regLBALow1_abs<0>_out
l24 state_regLBALow1_abs<1>_out
l25 state_regLBALow1_abs<2>_out
l26 state_regDev_LBA_abs_out
l27 state_regBMCommand_Start_abs_out
l28 state_stDMACmd_conc<0>_out
l29 state_stDMACmd_conc<1>_out
l30 state_regSectors1_abs<0>_out
l31 state_regSectors1_abs<1>_out
l32 state_regSectors1_abs<2>_out
l33 state_osState_conc<0>_out
l34 state_osState_conc<1>_out
l35 state_osState_conc<2>_out
l36 state_osState_conc<3>_out
l37 state_bufAddr_abs<0>_out
l38 state_bufAddr_abs<1>_out
l39 state_os_sect1_abs<0>_out
l40 state_os_sect1_abs<1>_out
l41 state_os_sect1_abs<2>_out
l42 state_regBMCommand_RW_abs_out
l43 fair_cnt<0>_out
l44 fair_cnt<1>_out
l45 fair_cnt<2>_out
l46 state_regCommand_abs<0>_out
l47 state_regCommand_abs<1>_out
l48 state_regCommand_abs<2>_out
l49 state_os_lba1_abs<0>_out
l50 state_os_lba1_abs<1>_out
l51 state_os_lba1_abs<2>_out
l52 state_regLBALow0_abs<0>_out
l53 state_regLBALow0_abs<1>_out
l54 state_regLBALow0_abs<2>_out
o0 o_err
c
ide_hard_drive_controller_2
This file was written by ABC on Tue Mar 11 20:24:24 2014
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv driver_d4.v   ---gives--> driver_d4.mv
> abc -c "read_blif_mv driver_d4.mv; write_aiger -s driver_d4n.aig"   ---gives--> driver_d4n.aig
> aigtoaig driver_d4n.aig driver_d4n.aag   ---gives--> driver_d4n.aag (this file)
Content of driver_d4.v:
// IDE hard drive controller specification and operating system interface
// specification for device driver synthesis.
// This file describes a GR(1) game played by a device driver for an IDE hard
// disk against its environment consisting of the hard disk and operating
// system.

`define WIDTH1 2
`define WIDTH2 1

`define CMD_READ_DMA_EXT  1
`define CMD_WRITE_DMA_EXT 2
`define FEAT_WC           1
`define FEAT_NWC          2
`define FEAT_XFR_MODE     3
`define XM_ULTRA_DMA      7

`define RCMD              1
`define REG_FEATURE0      1
`define REG_SECTORS       2
`define REG_LBA_LOW       3
`define REG_LBA_MID       4
`define REG_LBA_HIGH      5
`define REG_DEV           6
`define REG_ERRCMD        7

`define RDMA              0
`define REG_BM_COMMAND    0

//typedef enum {read=0, write=1} i_osReqType_enum;
`define read              0
`define write             1

//typedef enum {write8, write32, fillPrd, reset, os_req, ack_read_succ, ack_read_fail, ack_write_succ, ack_write_fail, class_event} controllable_tag_enum;
`define write8            0
`define write32           1
`define fillPrd           2
`define reset             3
`define os_req            4
`define ack_read_succ     5
`define ack_read_fail     6
`define ack_write_succ    7
`define ack_write_fail    8
`define class_event       9

//typedef enum {wait_bm_ready=0, dma_read=1, bm_read_prd=2, bm_ready=3} state_stDMACmd_enum;
`define wait_bm_ready     0
`define dma_read          1
`define bm_read_prd       2
`define bm_ready          3


//typedef enum {setFeatIdle=0, setFeatWC=1, setFeatNWC=2, setFeatXFR0=3, setFeatXFR1=4} state_setFeatState_enum;
`define setFeatIdle       0
`define setFeatWC         1
`define setFeatNWC        2
`define setFeatXFR0       3
`define setFeatXFR1       4

//typedef enum {os_init=0, os_reset=1, os_write_cache=2, os_idle=3, os_read_pending=4, os_write_pending=5, os_read_ack_succ=6, os_read_ack_fail=7, os_write_ack_succ=8, os_write_ack_fail=9, os_error=10} state_osState_enum;
`define os_init           0
`define os_reset          1
`define os_write_cache    2
`define os_idle           3
`define os_read_pending   4
`define os_write_pending  5
`define os_read_ack_succ  6
`define os_read_ack_fail  7
`define os_write_ack_succ 8
`define os_write_ack_fail 9
`define os_error          10

module ide_hard_drive_controller_2(
        o_err,
        i_clk,
        i_osReqType_conc,
        i_reqLBA0_abs,
        i_reqLBA1_abs,
        i_reqSect0_abs,
        i_reqSect1_abs,
        i_reqBuf_abs,
        i_transSuccess_conc,
        controllable_tag_conc,
        controllable_bank_abs,
        controllable_addr_abs,
        controllable_write8_val_abs,
        controllable_fillPrdAddr_abs,
        controllable_fillPrdNSect_abs,
        controllable_featWCClass_conc,
        controllable_featNWCClass_conc,
        controllable_featXFRClass_conc,
        controllable_busMasterClass_conc,
        controllable_dmaStartClass_conc );

input i_clk;
input i_osReqType_conc ;
input [`WIDTH1:0] i_reqLBA0_abs ;
input [`WIDTH1:0] i_reqLBA1_abs ;
input [`WIDTH1:0] i_reqSect0_abs ;
input [`WIDTH1:0] i_reqSect1_abs ;
input [`WIDTH2:0] i_reqBuf_abs ;
input i_transSuccess_conc ;
input [3:0] controllable_tag_conc ;
input controllable_bank_abs ;
input [2:0] controllable_addr_abs ;
input [`WIDTH1:0] controllable_write8_val_abs ;
input [`WIDTH2:0] controllable_fillPrdAddr_abs ;
input [5:0] controllable_fillPrdNSect_abs ;
input controllable_featWCClass_conc ;
input controllable_featNWCClass_conc ;
input controllable_featXFRClass_conc ;
input controllable_busMasterClass_conc ;
input controllable_dmaStartClass_conc ;
output o_err;

reg [1:0] state_stDMACmd_conc ;
reg [2:0] state_setFeatState_conc ;
reg [1:0] state_regFeature0_abs ;
reg [`WIDTH1:0] state_regSectors0_abs ;
reg [`WIDTH1:0] state_regSectors1_abs ;
reg [`WIDTH1:0] state_regLBALow0_abs ;
reg [`WIDTH1:0] state_regLBALow1_abs ;
reg state_regDev_LBA_abs ;
reg [`WIDTH1:0] state_regCommand_abs ;
reg state_regBMCommand_Start_abs ;
reg state_regBMCommand_RW_abs ;
reg [`WIDTH2:0] state_bufAddr_abs ;
reg [5:0] state_bufSectors_abs ;

reg [3:0] state_osState_conc ;
reg [`WIDTH1:0] state_os_lba0_abs ;
reg [`WIDTH1:0] state_os_lba1_abs ;
reg [`WIDTH1:0] state_os_sect0_abs ;
reg [`WIDTH1:0] state_os_sect1_abs ;
reg [`WIDTH2:0] state_os_buf_abs ;

reg [2:0] fair_cnt;

wire transferMode3;
wire nwc;
wire bm_event;
wire transferCorrect;
wire transferCorrect_0;
wire transferCorrect_1;
wire buechi_satisfied;
wire [1:0] next_state_stDMACmd_conc ;
wire [2:0] next_state_setFeatState_conc ;
wire [1:0] next_state_regFeature0_abs ;
wire [`WIDTH1:0] next_state_regSectors0_abs ;
wire [`WIDTH1:0] next_state_regSectors1_abs ;
wire [`WIDTH1:0] next_state_regLBALow0_abs ;
wire [`WIDTH1:0] next_state_regLBALow1_abs ;
wire next_state_regDev_LBA_abs ;
wire [`WIDTH1:0] next_state_regCommand_abs ;
wire next_state_regBMCommand_Start_abs ;
wire next_state_regBMCommand_RW_abs ;
wire [`WIDTH2:0] next_state_bufAddr_abs ;
wire [5:0] next_state_bufSectors_abs ;

wire [3:0] next_state_osState_conc ;
wire [`WIDTH1:0] next_state_os_lba0_abs ;
wire [`WIDTH1:0] next_state_os_lba1_abs ;
wire [`WIDTH1:0] next_state_os_sect0_abs ;
wire [`WIDTH1:0] next_state_os_sect1_abs ;
wire [`WIDTH2:0] next_state_os_buf_abs ;

// some abbreviations:
assign transferMode3 = (state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1);
assign nwc =           (state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1);
assign bm_event = (state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1);
assign transferCorrect = (state_os_lba0_abs==state_regLBALow0_abs    &&
                          state_os_lba1_abs==state_regLBALow1_abs    &&
                          state_os_sect0_abs==state_regSectors0_abs  &&
                          state_os_sect1_abs==state_regSectors1_abs  &&
                          state_os_buf_abs==state_bufAddr_abs);
assign transferCorrect_0 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==0);
assign transferCorrect_1 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==1);


// state updates:
  //Device state updates:
assign next_state_regFeature0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_FEATURE0) ? controllable_write8_val_abs  : state_regFeature0_abs;
assign next_state_regSectors0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? controllable_write8_val_abs  : state_regSectors0_abs;
assign next_state_regSectors1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? state_regSectors0_abs : state_regSectors1_abs;
assign next_state_regLBALow0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? controllable_write8_val_abs  : state_regLBALow0_abs;
assign next_state_regLBALow1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? state_regLBALow0_abs  : state_regLBALow1_abs;
assign next_state_regDev_LBA_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_DEV)      ? controllable_write8_val_abs[2:2] : state_regDev_LBA_abs;
assign next_state_regCommand_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_ERRCMD)   ? controllable_write8_val_abs  : state_regCommand_abs;
assign next_state_regBMCommand_Start_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[0:0] : state_regBMCommand_Start_abs;
assign next_state_regBMCommand_RW_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[1:1] : state_regBMCommand_RW_abs;
assign next_state_bufAddr_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdAddr_abs : state_bufAddr_abs;
assign next_state_bufSectors_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdNSect_abs : state_bufSectors_abs;

assign next_state_setFeatState_conc = (controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_WC) ? `setFeatWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_NWC) ? `setFeatNWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE && state_regSectors0_abs==`XM_ULTRA_DMA) ? `setFeatXFR0 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE) ? `setFeatXFR1 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatWC   && controllable_featWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR0 && controllable_featXFRClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1) ? `setFeatIdle : state_setFeatState_conc)))))));

assign next_state_stDMACmd_conc = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ?
               (
                 (state_regBMCommand_Start_abs==0 && controllable_write8_val_abs[0:0]==1) ? `bm_read_prd : state_stDMACmd_conc
               ) :
               (
                 (state_stDMACmd_conc==`bm_read_prd) ?
                 (((state_regBMCommand_RW_abs == 1 && state_regCommand_abs != `CMD_READ_DMA_EXT) || (state_regBMCommand_RW_abs == 0 && state_regCommand_abs != `CMD_WRITE_DMA_EXT) || (state_regSectors0_abs != state_bufSectors_abs[`WIDTH1:0]) || (state_regSectors1_abs != state_bufSectors_abs[5:3]) || state_regDev_LBA_abs != 1) ? state_stDMACmd_conc : ((controllable_dmaStartClass_conc==1) ? `bm_ready : state_stDMACmd_conc)) :
                 ((state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1) ? `wait_bm_ready : state_stDMACmd_conc)
               );

//OS state updates
assign next_state_os_lba0_abs = (controllable_tag_conc==`os_req) ? i_reqLBA0_abs : state_os_lba0_abs;
assign next_state_os_lba1_abs = (controllable_tag_conc==`os_req) ? i_reqLBA1_abs : state_os_lba1_abs;
assign next_state_os_sect0_abs = (controllable_tag_conc==`os_req) ? i_reqSect0_abs : state_os_sect0_abs;
assign next_state_os_sect1_abs = (controllable_tag_conc==`os_req) ? i_reqSect1_abs : state_os_sect1_abs;
assign next_state_os_buf_abs = (controllable_tag_conc==`os_req) ? i_reqBuf_abs : state_os_buf_abs;

assign next_state_osState_conc = (state_osState_conc==`os_init && controllable_tag_conc==`reset) ? `os_reset :
      ((state_osState_conc==`os_reset && nwc && controllable_tag_conc==`class_event) ? `os_write_cache :
      ((state_osState_conc==`os_write_cache && transferMode3 && controllable_tag_conc==`class_event) ? `os_idle :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`read) ? `os_read_pending :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`write) ? `os_write_pending :
      ((state_osState_conc==`os_read_pending && bm_event && !transferCorrect_0 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_read_ack_succ :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_read_ack_fail :
      ((state_osState_conc==`os_write_pending && bm_event && !transferCorrect_1 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_write_ack_succ :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_write_ack_fail :
      ((state_osState_conc==`os_read_ack_succ && controllable_tag_conc==`ack_read_succ) ? `os_idle :
      ((state_osState_conc==`os_read_ack_fail && controllable_tag_conc==`ack_read_fail) ? `os_idle :
      ((state_osState_conc==`os_write_ack_succ && controllable_tag_conc==`ack_write_succ) ? `os_idle :
      ((state_osState_conc==`os_write_ack_fail && controllable_tag_conc==`ack_write_fail) ? `os_idle : state_osState_conc))))))))))))));


// buechi-to-safety construction:                            
assign buechi_satisfied = (state_osState_conc == `os_idle);                          
                            
assign o_err = (fair_cnt >= 4) || controllable_tag_conc >= 10;

initial
 begin
  state_stDMACmd_conc = `wait_bm_ready;
  state_setFeatState_conc = `setFeatIdle;
  state_regFeature0_abs = 0;
  state_regSectors0_abs = 0;
  state_regSectors1_abs = 0;
  state_regLBALow0_abs = 0;
  state_regLBALow1_abs = 0;
  state_regDev_LBA_abs = 0;
  state_regCommand_abs = 0;
  state_regBMCommand_Start_abs = 0;
  state_regBMCommand_RW_abs = 0;
  state_bufAddr_abs = 0;
  state_bufSectors_abs = 0;
  state_osState_conc = `os_init;
  state_os_lba0_abs = 0;
  state_os_lba1_abs = 0;
  state_os_sect0_abs = 0;
  state_os_sect1_abs = 0;
  state_os_buf_abs = 0;
  fair_cnt = 0;
 end

always @(posedge i_clk)
 begin

  if(buechi_satisfied)
   begin
    fair_cnt = 0;
   end
  else
   begin
    fair_cnt = fair_cnt + 1;
   end
 
  //Device state updates:
  state_regFeature0_abs          = next_state_regFeature0_abs ;
  state_regSectors0_abs          = next_state_regSectors0_abs ;
  state_regSectors1_abs          = next_state_regSectors1_abs ;
  state_regLBALow0_abs           = next_state_regLBALow0_abs ;
  state_regLBALow1_abs           = next_state_regLBALow1_abs ;
  state_regDev_LBA_abs           = next_state_regDev_LBA_abs ;
  state_regCommand_abs           = next_state_regCommand_abs ;
  state_regBMCommand_Start_abs   = next_state_regBMCommand_Start_abs ;
  state_regBMCommand_RW_abs      = next_state_regBMCommand_RW_abs ;
  state_bufAddr_abs              = next_state_bufAddr_abs ;
  state_bufSectors_abs           = next_state_bufSectors_abs ;
  state_setFeatState_conc        = next_state_setFeatState_conc ;
  state_stDMACmd_conc            = next_state_stDMACmd_conc ;
  state_os_lba0_abs              = next_state_os_lba0_abs ;
  state_os_lba1_abs              = next_state_os_lba1_abs ;
  state_os_sect0_abs             = next_state_os_sect0_abs ;
  state_os_sect1_abs             = next_state_os_sect1_abs ;
  state_os_buf_abs               = next_state_os_buf_abs ;
  state_osState_conc             = next_state_osState_conc ;
 end
 
 
endmodule
-------------------------------
#!SYNTCOMP
STATUS : unrealizable
SOLVED_BY : 3/3 [2015-pre-classification]
SOLVED_IN : 0.187157 [2015-pre-classification]
#.

aag 708 52 78 1 578
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106 1
108 291
110 299
112 307
114 319
116 327
118 335
120 343
122 351
124 365
126 373
128 381
130 389
132 397
134 405
136 413
138 421
140 491
142 503
144 510
146 525
148 533
150 541
152 549
154 557
156 565
158 573
160 581
162 589
164 605
166 615
168 625
170 12
172 8
174 641
176 651
178 661
180 775
182 787
184 793
186 799
188 805
190 813
192 821
194 829
196 1203
198 1223
200 1233
202 1241
204 1247
206 1253
208 1259
210 1265
212 1271
214 1277
216 1283
218 1289
220 10
222 1292
224 1300
226 1311
228 1317
230 1323
232 1329
234 1335
236 1341
238 1351
240 1357
242 1363
244 1369
246 1375
248 1381
250 1387
252 1393
254 1399
256 1405
258 1411
260 1417
269
262 95 93
264 263 96
266 224 106
268 267 265
270 93 91
272 270 95
274 272 97
276 274 54
278 4 3
280 278 7
282 280 276
284 282 8
286 108 106
288 286 283
290 289 285
292 282 10
294 110 106
296 294 283
298 297 293
300 282 12
302 112 106
304 302 283
306 305 301
308 270 94
310 308 97
312 310 28
314 114 106
316 314 311
318 317 313
320 310 30
322 116 106
324 322 311
326 325 321
328 310 32
330 118 106
332 330 311
334 333 329
336 310 14
338 120 106
340 338 311
342 341 337
344 310 16
346 122 106
348 346 311
350 349 345
352 5 2
354 352 7
356 354 276
358 356 8
360 124 106
362 360 357
364 363 359
366 356 10
368 126 106
370 368 357
372 371 367
374 310 68
376 128 106
378 376 311
380 379 375
382 310 70
384 130 106
386 384 311
388 387 383
390 310 72
392 132 106
394 392 311
396 395 391
398 310 34
400 134 106
402 400 311
404 403 399
406 310 36
408 136 106
410 408 311
412 411 407
414 310 38
416 138 106
418 416 311
420 419 415
422 93 90
424 422 95
426 424 96
428 144 106
430 140 106
432 142 106
434 433 431
436 434 429
438 436 426
440 369 360
442 440 438
444 368 360
446 444 438
448 294 286
450 448 302
452 450 446
454 432 430
456 454 429
458 426 56
460 458 456
462 461 430
464 434 428
466 464 56
468 432 431
470 468 429
472 470 98
474 433 430
476 474 429
478 476 88
480 479 473
482 480 467
484 483 426
486 485 462
488 487 453
490 488 443
492 485 432
494 492 461
496 368 361
498 496 438
500 499 453
502 500 495
504 458 434
506 505 428
508 507 447
510 509 500
512 92 91
514 512 95
516 514 97
518 516 74
520 146 106
522 520 517
524 523 519
526 516 76
528 148 106
530 528 517
532 531 527
534 516 78
536 150 106
538 536 517
540 539 535
542 516 80
544 152 106
546 544 517
548 547 543
550 516 82
552 154 106
554 552 517
556 555 551
558 516 84
560 156 106
562 560 517
564 563 559
566 310 48
568 158 106
570 568 311
572 571 567
574 310 50
576 160 106
578 576 311
580 579 575
582 310 52
584 162 106
586 584 311
588 587 583
590 4 2
592 590 7
594 592 276
596 250 106
598 596 594
600 164 106
602 600 595
604 603 599
606 252 106
608 606 594
610 166 106
612 610 595
614 613 609
616 254 106
618 616 594
620 168 106
622 620 595
624 623 619
626 5 3
628 626 6
630 628 276
632 256 106
634 632 630
636 174 106
638 636 631
640 639 635
642 258 106
644 642 630
646 176 106
648 646 631
650 649 645
652 260 106
654 652 630
656 178 106
658 656 631
660 659 655
662 274 55
664 626 7
666 664 662
668 172 106
670 669 8
672 180 106
674 672 671
676 674 666
678 182 106
680 678 672
682 680 86
684 683 672
686 678 673
688 536 303
690 537 302
692 691 689
694 520 287
696 521 286
698 697 695
700 528 295
702 529 294
704 703 701
706 704 698
708 706 692
710 230 106
712 228 106
714 226 106
716 714 713
718 220 106
720 718 716
722 715 712
724 722 719
726 725 721
728 727 711
730 728 708
732 188 106
734 733 560
736 732 561
738 737 735
740 184 106
742 741 544
744 740 545
746 745 743
748 186 106
750 749 552
752 748 553
754 753 751
756 754 746
758 756 738
760 758 730
762 170 106
764 762 760
766 764 46
768 766 686
770 769 685
772 771 667
774 773 677
776 679 671
778 777 666
780 683 680
782 781 687
784 783 667
786 785 779
788 286 282
790 740 283
792 791 789
794 294 282
796 748 283
798 797 795
800 302 282
802 732 283
804 803 801
806 310 100
808 190 106
810 808 311
812 811 807
814 310 102
816 192 106
818 816 311
820 819 815
822 310 104
824 194 106
826 824 311
828 827 823
830 202 106
832 200 106
834 196 106
836 198 106
838 837 835
840 838 833
842 840 831
844 92 90
846 844 95
848 846 97
850 848 842
852 837 834
854 852 833
856 854 831
858 856 472
860 858 426
862 836 835
864 862 833
866 864 831
868 866 466
870 868 426
872 836 834
874 872 833
876 874 831
878 876 310
880 878 67
882 838 832
884 882 831
886 884 682
888 616 417
890 617 416
892 891 889
894 596 401
896 597 400
898 897 895
900 606 409
902 607 408
904 903 901
906 904 898
908 906 892
910 236 106
912 911 620
914 910 621
916 915 913
918 232 106
920 919 600
922 918 601
924 923 921
926 234 106
928 927 610
930 926 611
932 931 929
934 932 924
936 934 916
938 936 908
940 825 652
942 824 653
944 943 941
946 809 632
948 808 633
950 949 947
952 817 642
954 816 643
956 955 953
958 956 950
960 958 944
962 960 938
964 656 331
966 657 330
968 967 965
970 636 315
972 637 314
974 973 971
976 646 323
978 647 322
980 979 977
982 980 974
984 982 968
986 984 962
988 242 106
990 218 106
992 991 988
994 990 989
996 995 993
998 238 106
1000 214 106
1002 1001 998
1004 1000 999
1006 1005 1003
1008 240 106
1010 216 106
1012 1011 1008
1014 1010 1009
1016 1015 1013
1018 1016 1006
1020 1018 996
1022 1020 986
1024 248 106
1026 1024 585
1028 1025 584
1030 1029 1027
1032 244 106
1034 1032 569
1036 1033 568
1038 1037 1035
1040 246 106
1042 1040 577
1044 1041 576
1046 1045 1043
1048 1046 1038
1050 1048 1030
1052 1050 1022
1054 393 302
1056 392 303
1058 1057 1055
1060 377 286
1062 376 287
1064 1063 1061
1066 385 294
1068 384 295
1070 1069 1067
1072 1070 1064
1074 1072 1058
1076 1074 1052
1078 212 106
1080 1079 732
1082 1078 733
1084 1083 1081
1086 208 106
1088 1087 740
1090 1086 741
1092 1091 1089
1094 210 106
1096 1095 748
1098 1094 749
1100 1099 1097
1102 1100 1092
1104 1102 1084
1106 1104 1076
1108 204 106
1110 1108 339
1112 1109 338
1114 1113 1111
1116 206 106
1118 1116 347
1120 1117 346
1122 1121 1119
1124 1122 1114
1126 1124 1106
1128 1126 719
1130 1129 886
1132 1130 426
1134 886 59
1136 1134 426
1138 852 832
1140 1138 831
1142 1140 682
1144 1126 718
1146 1145 1142
1148 1146 426
1150 1142 58
1152 1150 426
1154 862 832
1156 1154 831
1158 422 94
1160 1158 97
1162 1160 1156
1164 872 832
1166 1164 831
1168 512 94
1170 1168 97
1172 1170 1166
1174 840 830
1176 844 94
1178 1176 97
1180 1178 1174
1182 1181 1173
1184 1182 1163
1186 1184 835
1188 1187 1153
1190 1188 1149
1192 1191 1137
1194 1193 1133
1196 1194 881
1198 1197 871
1200 1199 861
1202 1201 851
1204 854 830
1206 272 96
1208 1206 1204
1210 1209 837
1212 1210 1184
1214 1212 1149
1216 886 426
1218 1217 1214
1220 1219 879
1222 1221 861
1224 1184 832
1226 1142 426
1228 1227 1224
1230 1228 1133
1232 1231 879
1234 1209 830
1236 1234 1184
1238 1237 1227
1240 1238 1133
1242 516 24
1244 1108 517
1246 1245 1243
1248 516 26
1250 1116 517
1252 1251 1249
1254 310 60
1256 1086 311
1258 1257 1255
1260 310 62
1262 1094 311
1264 1263 1261
1266 310 64
1268 1078 311
1270 1269 1267
1272 310 40
1274 1000 311
1276 1275 1273
1278 310 42
1280 1010 311
1282 1281 1279
1284 310 44
1286 990 311
1288 1287 1285
1290 222 106
1292 1291 877
1294 1290 267
1296 1291 266
1298 1297 1295
1300 1299 877
1302 590 6
1304 1302 276
1306 1304 8
1308 1305 714
1310 1309 1307
1312 1304 10
1314 1305 712
1316 1315 1313
1318 1304 12
1320 1305 710
1322 1321 1319
1324 310 18
1326 918 311
1328 1327 1325
1330 310 20
1332 926 311
1334 1333 1331
1336 310 22
1338 910 311
1340 1339 1337
1342 352 6
1344 1342 276
1346 1344 8
1348 1345 998
1350 1349 1347
1352 1344 10
1354 1345 1008
1356 1355 1353
1358 1344 12
1360 1345 988
1362 1361 1359
1364 1344 998
1366 1345 1032
1368 1367 1365
1370 1344 1008
1372 1345 1040
1374 1373 1371
1376 1344 988
1378 1345 1024
1380 1379 1377
1382 594 8
1384 596 595
1386 1385 1383
1388 594 10
1390 606 595
1392 1391 1389
1394 594 12
1396 616 595
1398 1397 1395
1400 630 8
1402 632 631
1404 1403 1401
1406 630 10
1408 642 631
1410 1409 1407
1412 630 12
1414 652 631
1416 1415 1413
i0 controllable_addr_abs<0>
i1 controllable_addr_abs<1>
i2 controllable_addr_abs<2>
i3 controllable_write8_val_abs<0>
i4 controllable_write8_val_abs<1>
i5 controllable_write8_val_abs<2>
i6 i_reqBuf_abs<0>
i7 i_reqBuf_abs<1>
i8 i_reqLBA1_abs<0>
i9 i_reqLBA1_abs<1>
i10 i_reqLBA1_abs<2>
i11 controllable_fillPrdAddr_abs<0>
i12 controllable_fillPrdAddr_abs<1>
i13 i_reqLBA3_abs<0>
i14 i_reqLBA3_abs<1>
i15 i_reqLBA3_abs<2>
i16 i_reqLBA0_abs<0>
i17 i_reqLBA0_abs<1>
i18 i_reqLBA0_abs<2>
i19 i_reqLBA4_abs<0>
i20 i_reqLBA4_abs<1>
i21 i_reqLBA4_abs<2>
i22 controllable_dmaStartClass_conc
i23 i_reqLBA5_abs<0>
i24 i_reqLBA5_abs<1>
i25 i_reqLBA5_abs<2>
i26 controllable_bank_abs
i27 controllable_featXFRClass_conc
i28 i_transSuccess_conc
i29 i_reqSect1_abs<0>
i30 i_reqSect1_abs<1>
i31 i_reqSect1_abs<2>
i32 i_osReqType_conc
i33 i_reqSect0_abs<0>
i34 i_reqSect0_abs<1>
i35 i_reqSect0_abs<2>
i36 controllable_fillPrdNSect_abs<0>
i37 controllable_fillPrdNSect_abs<1>
i38 controllable_fillPrdNSect_abs<2>
i39 controllable_fillPrdNSect_abs<3>
i40 controllable_fillPrdNSect_abs<4>
i41 controllable_fillPrdNSect_abs<5>
i42 controllable_busMasterClass_conc
i43 controllable_featWCClass_conc
i44 controllable_tag_conc<0>
i45 controllable_tag_conc<1>
i46 controllable_tag_conc<2>
i47 controllable_tag_conc<3>
i48 controllable_featNWCClass_conc
i49 i_reqLBA2_abs<0>
i50 i_reqLBA2_abs<1>
i51 i_reqLBA2_abs<2>
l0 n107
l1 state_regSectors0_abs<0>_out
l2 state_regSectors0_abs<1>_out
l3 state_regSectors0_abs<2>_out
l4 state_os_lba3_abs<0>_out
l5 state_os_lba3_abs<1>_out
l6 state_os_lba3_abs<2>_out
l7 state_os_buf_abs<0>_out
l8 state_os_buf_abs<1>_out
l9 state_regFeature0_abs<0>_out
l10 state_regFeature0_abs<1>_out
l11 state_os_sect0_abs<0>_out
l12 state_os_sect0_abs<1>_out
l13 state_os_sect0_abs<2>_out
l14 state_os_lba0_abs<0>_out
l15 state_os_lba0_abs<1>_out
l16 state_os_lba0_abs<2>_out
l17 state_setFeatState_conc<0>_out
l18 state_setFeatState_conc<1>_out
l19 state_setFeatState_conc<2>_out
l20 state_bufSectors_abs<0>_out
l21 state_bufSectors_abs<1>_out
l22 state_bufSectors_abs<2>_out
l23 state_bufSectors_abs<3>_out
l24 state_bufSectors_abs<4>_out
l25 state_bufSectors_abs<5>_out
l26 state_os_lba5_abs<0>_out
l27 state_os_lba5_abs<1>_out
l28 state_os_lba5_abs<2>_out
l29 state_regLBALow1_abs<0>_out
l30 state_regLBALow1_abs<1>_out
l31 state_regLBALow1_abs<2>_out
l32 state_regDev_LBA_abs_out
l33 state_regBMCommand_Start_abs_out
l34 state_regLBAMid1_abs<0>_out
l35 state_regLBAMid1_abs<1>_out
l36 state_regLBAMid1_abs<2>_out
l37 state_stDMACmd_conc<0>_out
l38 state_stDMACmd_conc<1>_out
l39 state_regSectors1_abs<0>_out
l40 state_regSectors1_abs<1>_out
l41 state_regSectors1_abs<2>_out
l42 state_os_lba2_abs<0>_out
l43 state_os_lba2_abs<1>_out
l44 state_os_lba2_abs<2>_out
l45 state_osState_conc<0>_out
l46 state_osState_conc<1>_out
l47 state_osState_conc<2>_out
l48 state_osState_conc<3>_out
l49 state_bufAddr_abs<0>_out
l50 state_bufAddr_abs<1>_out
l51 state_os_sect1_abs<0>_out
l52 state_os_sect1_abs<1>_out
l53 state_os_sect1_abs<2>_out
l54 state_os_lba4_abs<0>_out
l55 state_os_lba4_abs<1>_out
l56 state_os_lba4_abs<2>_out
l57 state_regBMCommand_RW_abs_out
l58 fair_cnt<0>_out
l59 fair_cnt<1>_out
l60 state_regCommand_abs<0>_out
l61 state_regCommand_abs<1>_out
l62 state_regCommand_abs<2>_out
l63 state_os_lba1_abs<0>_out
l64 state_os_lba1_abs<1>_out
l65 state_os_lba1_abs<2>_out
l66 state_regLBAHigh0_abs<0>_out
l67 state_regLBAHigh0_abs<1>_out
l68 state_regLBAHigh0_abs<2>_out
l69 state_regLBAHigh1_abs<0>_out
l70 state_regLBAHigh1_abs<1>_out
l71 state_regLBAHigh1_abs<2>_out
l72 state_regLBALow0_abs<0>_out
l73 state_regLBALow0_abs<1>_out
l74 state_regLBALow0_abs<2>_out
l75 state_regLBAMid0_abs<0>_out
l76 state_regLBAMid0_abs<1>_out
l77 state_regLBAMid0_abs<2>_out
o0 o_err
c
ide_hard_drive_controller_2
This file was written by ABC on Tue Mar 11 20:24:22 2014
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv driver_c2.v   ---gives--> driver_c2.mv
> abc -c "read_blif_mv driver_c2.mv; strash; refactor; rewrite; dfraig; rewrite; dfraig; write_aiger -s driver_c2y.aig"   ---gives--> driver_c2y.aig
> aigtoaig driver_c2y.aig driver_c2y.aag   ---gives--> driver_c2y.aag (this file)
Content of driver_c2.v:
// IDE hard drive controller specification and operating system interface
// specification for device driver synthesis.
// This file describes a GR(1) game played by a device driver for an IDE hard
// disk against its environment consisting of the hard disk and operating
// system.

`define WIDTH1 2
`define WIDTH2 1

`define CMD_READ_DMA_EXT  1
`define CMD_WRITE_DMA_EXT 2
`define FEAT_WC           1
`define FEAT_NWC          2
`define FEAT_XFR_MODE     3
`define XM_ULTRA_DMA      7

`define RCMD              1
`define REG_FEATURE0      1
`define REG_SECTORS       2
`define REG_LBA_LOW       3
`define REG_LBA_MID       4
`define REG_LBA_HIGH      5
`define REG_DEV           6
`define REG_ERRCMD        7

`define RDMA              0
`define REG_BM_COMMAND    0

//typedef enum {read=0, write=1} i_osReqType_enum;
`define read              0
`define write             1

//typedef enum {write8, write32, fillPrd, reset, os_req, ack_read_succ, ack_read_fail, ack_write_succ, ack_write_fail, class_event} controllable_tag_enum;
`define write8            0
`define write32           1
`define fillPrd           2
`define reset             3
`define os_req            4
`define ack_read_succ     5
`define ack_read_fail     6
`define ack_write_succ    7
`define ack_write_fail    8
`define class_event       9

//typedef enum {wait_bm_ready=0, dma_read=1, bm_read_prd=2, bm_ready=3} state_stDMACmd_enum;
`define wait_bm_ready     0
`define dma_read          1
`define bm_read_prd       2
`define bm_ready          3


//typedef enum {setFeatIdle=0, setFeatWC=1, setFeatNWC=2, setFeatXFR0=3, setFeatXFR1=4} state_setFeatState_enum;
`define setFeatIdle       0
`define setFeatWC         1
`define setFeatNWC        2
`define setFeatXFR0       3
`define setFeatXFR1       4

//typedef enum {os_init=0, os_reset=1, os_write_cache=2, os_idle=3, os_read_pending=4, os_write_pending=5, os_read_ack_succ=6, os_read_ack_fail=7, os_write_ack_succ=8, os_write_ack_fail=9, os_error=10} state_osState_enum;
`define os_init           0
`define os_reset          1
`define os_write_cache    2
`define os_idle           3
`define os_read_pending   4
`define os_write_pending  5
`define os_read_ack_succ  6
`define os_read_ack_fail  7
`define os_write_ack_succ 8
`define os_write_ack_fail 9
`define os_error          10

module ide_hard_drive_controller_2(
        o_err,
        i_clk,
        i_osReqType_conc,
        i_reqLBA0_abs,
        i_reqLBA1_abs,
        i_reqLBA2_abs,
        i_reqLBA3_abs,
        i_reqLBA4_abs,
        i_reqLBA5_abs,
        i_reqSect0_abs,
        i_reqSect1_abs,
        i_reqBuf_abs,
        i_transSuccess_conc,
        controllable_tag_conc,
        controllable_bank_abs,
        controllable_addr_abs,
        controllable_write8_val_abs,
        controllable_fillPrdAddr_abs,
        controllable_fillPrdNSect_abs,
        controllable_featWCClass_conc,
        controllable_featNWCClass_conc,
        controllable_featXFRClass_conc,
        controllable_busMasterClass_conc,
        controllable_dmaStartClass_conc );

input i_clk;
input i_osReqType_conc ;
input [`WIDTH1:0] i_reqLBA0_abs ;
input [`WIDTH1:0] i_reqLBA1_abs ;
input [`WIDTH1:0] i_reqLBA2_abs ;
input [`WIDTH1:0] i_reqLBA3_abs ;
input [`WIDTH1:0] i_reqLBA4_abs ;
input [`WIDTH1:0] i_reqLBA5_abs ;
input [`WIDTH1:0] i_reqSect0_abs ;
input [`WIDTH1:0] i_reqSect1_abs ;
input [`WIDTH2:0] i_reqBuf_abs ;
input i_transSuccess_conc ;
input [3:0] controllable_tag_conc ;
input controllable_bank_abs ;
input [2:0] controllable_addr_abs ;
input [`WIDTH1:0] controllable_write8_val_abs ;
input [`WIDTH2:0] controllable_fillPrdAddr_abs ;
input [5:0] controllable_fillPrdNSect_abs ;
input controllable_featWCClass_conc ;
input controllable_featNWCClass_conc ;
input controllable_featXFRClass_conc ;
input controllable_busMasterClass_conc ;
input controllable_dmaStartClass_conc ;
output o_err;

reg [1:0] state_stDMACmd_conc ;
reg [2:0] state_setFeatState_conc ;
reg [1:0] state_regFeature0_abs ;
reg [`WIDTH1:0] state_regSectors0_abs ;
reg [`WIDTH1:0] state_regSectors1_abs ;
reg [`WIDTH1:0] state_regLBALow0_abs ;
reg [`WIDTH1:0] state_regLBALow1_abs ;
reg [`WIDTH1:0] state_regLBAMid0_abs ;
reg [`WIDTH1:0] state_regLBAMid1_abs ;
reg [`WIDTH1:0] state_regLBAHigh0_abs ;
reg [`WIDTH1:0] state_regLBAHigh1_abs ;
reg state_regDev_LBA_abs ;
reg [`WIDTH1:0] state_regCommand_abs ;
reg state_regBMCommand_Start_abs ;
reg state_regBMCommand_RW_abs ;
reg [`WIDTH2:0] state_bufAddr_abs ;
reg [5:0] state_bufSectors_abs ;

reg [3:0] state_osState_conc ;
reg [`WIDTH1:0] state_os_lba0_abs ;
reg [`WIDTH1:0] state_os_lba1_abs ;
reg [`WIDTH1:0] state_os_lba2_abs ;
reg [`WIDTH1:0] state_os_lba3_abs ;
reg [`WIDTH1:0] state_os_lba4_abs ;
reg [`WIDTH1:0] state_os_lba5_abs ;
reg [`WIDTH1:0] state_os_sect0_abs ;
reg [`WIDTH1:0] state_os_sect1_abs ;
reg [`WIDTH2:0] state_os_buf_abs ;

reg [1:0] fair_cnt;

wire transferMode3;
wire nwc;
wire bm_event;
wire transferCorrect;
wire transferCorrect_0;
wire transferCorrect_1;
wire buechi_satisfied;
wire [1:0] next_state_stDMACmd_conc ;
wire [2:0] next_state_setFeatState_conc ;
wire [1:0] next_state_regFeature0_abs ;
wire [`WIDTH1:0] next_state_regSectors0_abs ;
wire [`WIDTH1:0] next_state_regSectors1_abs ;
wire [`WIDTH1:0] next_state_regLBALow0_abs ;
wire [`WIDTH1:0] next_state_regLBALow1_abs ;
wire [`WIDTH1:0] next_state_regLBAMid0_abs ;
wire [`WIDTH1:0] next_state_regLBAMid1_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh0_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh1_abs ;
wire next_state_regDev_LBA_abs ;
wire [`WIDTH1:0] next_state_regCommand_abs ;
wire next_state_regBMCommand_Start_abs ;
wire next_state_regBMCommand_RW_abs ;
wire [`WIDTH2:0] next_state_bufAddr_abs ;
wire [5:0] next_state_bufSectors_abs ;

wire [3:0] next_state_osState_conc ;
wire [`WIDTH1:0] next_state_os_lba0_abs ;
wire [`WIDTH1:0] next_state_os_lba1_abs ;
wire [`WIDTH1:0] next_state_os_lba2_abs ;
wire [`WIDTH1:0] next_state_os_lba3_abs ;
wire [`WIDTH1:0] next_state_os_lba4_abs ;
wire [`WIDTH1:0] next_state_os_lba5_abs ;
wire [`WIDTH1:0] next_state_os_sect0_abs ;
wire [`WIDTH1:0] next_state_os_sect1_abs ;
wire [`WIDTH2:0] next_state_os_buf_abs ;

// some abbreviations:
assign transferMode3 = (state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1);
assign nwc =           (state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1);
assign bm_event = (state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1);
assign transferCorrect = (state_os_lba0_abs==state_regLBALow0_abs    &&
                          state_os_lba1_abs==state_regLBALow1_abs    &&
                          state_os_lba2_abs==state_regLBAMid0_abs    &&
                          state_os_lba3_abs==state_regLBAMid1_abs    &&
                          state_os_lba4_abs==state_regLBAHigh0_abs   &&
                          state_os_lba5_abs==state_regLBAHigh1_abs   &&
                          state_os_sect0_abs==state_regSectors0_abs  &&
                          state_os_sect1_abs==state_regSectors1_abs  &&
                          state_os_buf_abs==state_bufAddr_abs);
assign transferCorrect_0 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==0);
assign transferCorrect_1 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==1);


// state updates:
  //Device state updates:
assign next_state_regFeature0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_FEATURE0) ? controllable_write8_val_abs  : state_regFeature0_abs;
assign next_state_regSectors0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? controllable_write8_val_abs  : state_regSectors0_abs;
assign next_state_regSectors1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? state_regSectors0_abs : state_regSectors1_abs;
assign next_state_regLBALow0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? controllable_write8_val_abs  : state_regLBALow0_abs;
assign next_state_regLBALow1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? state_regLBALow0_abs  : state_regLBALow1_abs;
assign next_state_regLBAMid0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? controllable_write8_val_abs  : state_regLBAMid0_abs;
assign next_state_regLBAMid1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? state_regLBAMid0_abs  : state_regLBAMid1_abs;
assign next_state_regLBAHigh0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? controllable_write8_val_abs  : state_regLBAHigh0_abs;
assign next_state_regLBAHigh1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? state_regLBAHigh0_abs : state_regLBAHigh1_abs;
assign next_state_regDev_LBA_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_DEV)      ? controllable_write8_val_abs[2:2] : state_regDev_LBA_abs;
assign next_state_regCommand_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_ERRCMD)   ? controllable_write8_val_abs  : state_regCommand_abs;
assign next_state_regBMCommand_Start_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[0:0] : state_regBMCommand_Start_abs;
assign next_state_regBMCommand_RW_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[1:1] : state_regBMCommand_RW_abs;
assign next_state_bufAddr_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdAddr_abs : state_bufAddr_abs;
assign next_state_bufSectors_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdNSect_abs : state_bufSectors_abs;

assign next_state_setFeatState_conc = (controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_WC) ? `setFeatWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_NWC) ? `setFeatNWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE && state_regSectors0_abs==`XM_ULTRA_DMA) ? `setFeatXFR0 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE) ? `setFeatXFR1 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatWC   && controllable_featWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR0 && controllable_featXFRClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1) ? `setFeatIdle : state_setFeatState_conc)))))));

assign next_state_stDMACmd_conc = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ?
               (
                 (state_regBMCommand_Start_abs==0 && controllable_write8_val_abs[0:0]==1) ? `bm_read_prd : state_stDMACmd_conc
               ) :
               (
                 (state_stDMACmd_conc==`bm_read_prd) ?
                 (((state_regBMCommand_RW_abs == 1 && state_regCommand_abs != `CMD_READ_DMA_EXT) || (state_regBMCommand_RW_abs == 0 && state_regCommand_abs != `CMD_WRITE_DMA_EXT) || (state_regSectors0_abs != state_bufSectors_abs[`WIDTH1:0]) || (state_regSectors1_abs != state_bufSectors_abs[5:3]) || state_regDev_LBA_abs != 1) ? state_stDMACmd_conc : ((controllable_dmaStartClass_conc==1) ? `bm_ready : state_stDMACmd_conc)) :
                 ((state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1) ? `wait_bm_ready : state_stDMACmd_conc)
               );

//OS state updates
assign next_state_os_lba0_abs = (controllable_tag_conc==`os_req) ? i_reqLBA0_abs : state_os_lba0_abs;
assign next_state_os_lba1_abs = (controllable_tag_conc==`os_req) ? i_reqLBA1_abs : state_os_lba1_abs;
assign next_state_os_lba2_abs = (controllable_tag_conc==`os_req) ? i_reqLBA2_abs : state_os_lba2_abs;
assign next_state_os_lba3_abs = (controllable_tag_conc==`os_req) ? i_reqLBA3_abs : state_os_lba3_abs;
assign next_state_os_lba4_abs = (controllable_tag_conc==`os_req) ? i_reqLBA4_abs : state_os_lba4_abs;
assign next_state_os_lba5_abs = (controllable_tag_conc==`os_req) ? i_reqLBA5_abs : state_os_lba5_abs;
assign next_state_os_sect0_abs = (controllable_tag_conc==`os_req) ? i_reqSect0_abs : state_os_sect0_abs;
assign next_state_os_sect1_abs = (controllable_tag_conc==`os_req) ? i_reqSect1_abs : state_os_sect1_abs;
assign next_state_os_buf_abs = (controllable_tag_conc==`os_req) ? i_reqBuf_abs : state_os_buf_abs;

assign next_state_osState_conc = (state_osState_conc==`os_init && controllable_tag_conc==`reset) ? `os_reset :
      ((state_osState_conc==`os_reset && nwc && controllable_tag_conc==`class_event) ? `os_write_cache :
      ((state_osState_conc==`os_write_cache && transferMode3 && controllable_tag_conc==`class_event) ? `os_idle :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`read) ? `os_read_pending :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`write) ? `os_write_pending :
      ((state_osState_conc==`os_read_pending && bm_event && !transferCorrect_0 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_read_ack_succ :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_read_ack_fail :
      ((state_osState_conc==`os_write_pending && bm_event && !transferCorrect_1 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_write_ack_succ :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_write_ack_fail :
      ((state_osState_conc==`os_read_ack_succ && controllable_tag_conc==`ack_read_succ) ? `os_idle :
      ((state_osState_conc==`os_read_ack_fail && controllable_tag_conc==`ack_read_fail) ? `os_idle :
      ((state_osState_conc==`os_write_ack_succ && controllable_tag_conc==`ack_write_succ) ? `os_idle :
      ((state_osState_conc==`os_write_ack_fail && controllable_tag_conc==`ack_write_fail) ? `os_idle : state_osState_conc))))))))))))));


// buechi-to-safety construction:                            
assign buechi_satisfied = (state_osState_conc == `os_idle);                          
                            
assign o_err = (fair_cnt >= 2) || controllable_tag_conc >= 10;

initial
 begin
  state_stDMACmd_conc = `wait_bm_ready;
  state_setFeatState_conc = `setFeatIdle;
  state_regFeature0_abs = 0;
  state_regSectors0_abs = 0;
  state_regSectors1_abs = 0;
  state_regLBALow0_abs = 0;
  state_regLBALow1_abs = 0;
  state_regLBAMid0_abs = 0;
  state_regLBAMid1_abs = 0;
  state_regLBAHigh0_abs = 0;
  state_regLBAHigh1_abs = 0;
  state_regDev_LBA_abs = 0;
  state_regCommand_abs = 0;
  state_regBMCommand_Start_abs = 0;
  state_regBMCommand_RW_abs = 0;
  state_bufAddr_abs = 0;
  state_bufSectors_abs = 0;
  state_osState_conc = `os_init;
  state_os_lba0_abs = 0;
  state_os_lba1_abs = 0;
  state_os_lba2_abs = 0;
  state_os_lba3_abs = 0;
  state_os_lba4_abs = 0;
  state_os_lba5_abs = 0;
  state_os_sect0_abs = 0;
  state_os_sect1_abs = 0;
  state_os_buf_abs = 0;
  fair_cnt = 0;
 end

always @(posedge i_clk)
 begin

  if(buechi_satisfied)
   begin
    fair_cnt = 0;
   end
  else
   begin
    fair_cnt = fair_cnt + 1;
   end
 
  //Device state updates:
  state_regFeature0_abs          = next_state_regFeature0_abs ;
  state_regSectors0_abs          = next_state_regSectors0_abs ;
  state_regSectors1_abs          = next_state_regSectors1_abs ;
  state_regLBALow0_abs           = next_state_regLBALow0_abs ;
  state_regLBALow1_abs           = next_state_regLBALow1_abs ;
  state_regLBAMid0_abs           = next_state_regLBAMid0_abs ;
  state_regLBAMid1_abs           = next_state_regLBAMid1_abs ;
  state_regLBAHigh0_abs          = next_state_regLBAHigh0_abs ;
  state_regLBAHigh1_abs          = next_state_regLBAHigh1_abs ;
  state_regDev_LBA_abs           = next_state_regDev_LBA_abs ;
  state_regCommand_abs           = next_state_regCommand_abs ;
  state_regBMCommand_Start_abs   = next_state_regBMCommand_Start_abs ;
  state_regBMCommand_RW_abs      = next_state_regBMCommand_RW_abs ;
  state_bufAddr_abs              = next_state_bufAddr_abs ;
  state_bufSectors_abs           = next_state_bufSectors_abs ;
  state_setFeatState_conc        = next_state_setFeatState_conc ;
  state_stDMACmd_conc            = next_state_stDMACmd_conc ;
  state_os_lba0_abs              = next_state_os_lba0_abs ;
  state_os_lba1_abs              = next_state_os_lba1_abs ;
  state_os_lba2_abs              = next_state_os_lba2_abs ;
  state_os_lba3_abs              = next_state_os_lba3_abs ;
  state_os_lba4_abs              = next_state_os_lba4_abs ;
  state_os_lba5_abs              = next_state_os_lba5_abs ;
  state_os_sect0_abs             = next_state_os_sect0_abs ;
  state_os_sect1_abs             = next_state_os_sect1_abs ;
  state_os_buf_abs               = next_state_os_buf_abs ;
  state_osState_conc             = next_state_osState_conc ;
 end
 
 
endmodule
-------------------------------
#!SYNTCOMP
STATUS : unrealizable
SOLVED_BY : 3/3 [2015-pre-classification]
SOLVED_IN : 0.084463 [2015-pre-classification]
#.

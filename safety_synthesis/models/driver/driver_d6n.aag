aag 762 40 55 1 667
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82 1
84 281
86 293
88 305
90 321
92 333
94 351
96 363
98 375
100 387
102 399
104 411
106 423
108 435
110 533
112 552
114 570
116 587
118 599
120 611
122 623
124 635
126 647
128 671
130 689
132 707
134 717
136 731
138 885
140 913
142 919
144 925
146 931
148 1285
150 1334
152 1372
154 1410
156 1417
158 1423
160 1429
162 1435
164 1441
166 1447
168 1448
170 1456
172 1466
174 1477
176 1483
178 1489
180 1495
182 1501
184 1507
186 1513
188 1519
190 1525
255
192 173 82
194 172 82
196 193 82
198 171 82
200 170 82
202 199 82
204 169 82
206 168 82
208 205 82
210 203 197
212 211 196
214 212 202
216 202 197
218 203 194
220 219 217
222 207 202
224 222 220
226 225 215
228 77 75
230 228 79
232 231 78
234 232 229
236 76 74
238 237 229
240 229 79
242 228 78
244 243 241
246 74 73
248 246 238
250 248 244
252 251 235
254 252 226
256 75 73
258 256 77
260 258 79
262 260 36
264 4 3
266 264 7
268 266 262
270 85 82
272 84 82
274 271 82
276 268 8
278 272 269
280 279 277
282 87 82
284 86 82
286 283 82
288 268 10
290 284 269
292 291 289
294 89 82
296 88 82
298 295 82
300 268 12
302 296 269
304 303 301
306 256 76
308 306 79
310 91 82
312 90 82
314 311 82
316 308 14
318 312 309
320 319 317
322 93 82
324 92 82
326 323 82
328 308 16
330 324 309
332 331 329
334 5 2
336 334 7
338 336 262
340 95 82
342 94 82
344 341 82
346 338 8
348 342 339
350 349 347
352 97 82
354 96 82
356 353 82
358 338 10
360 354 339
362 361 359
364 99 82
366 98 82
368 365 82
370 308 50
372 366 309
374 373 371
376 101 82
378 100 82
380 377 82
382 308 52
384 378 309
386 385 383
388 103 82
390 102 82
392 389 82
394 308 54
396 390 309
398 397 395
400 105 82
402 104 82
404 401 82
406 308 28
408 402 309
410 409 407
412 107 82
414 106 82
416 413 82
418 308 30
420 414 309
422 421 419
424 109 82
426 108 82
428 425 82
430 308 32
432 426 309
434 433 431
436 75 72
438 436 77
440 438 78
442 111 82
444 110 82
446 443 82
448 113 82
450 112 82
452 449 82
454 115 82
456 114 82
458 455 82
460 451 445
462 460 457
464 462 440
466 355 344
468 466 464
470 356 343
472 470 464
474 356 344
476 474 464
478 286 274
480 478 298
482 480 476
484 451 446
486 484 457
488 486 440
490 488 70
492 452 445
494 492 457
496 494 440
498 496 80
500 452 446
502 500 457
504 502 440
506 504 38
508 460 458
510 508 440
512 510 38
514 513 444
516 514 507
518 516 499
520 518 491
522 520 477
524 522 483
526 525 483
528 527 473
530 528 469
532 531 469
534 513 450
536 534 507
538 536 499
540 538 491
542 540 477
544 542 483
546 545 483
548 547 473
550 549 473
552 551 469
554 513 456
556 554 507
558 556 499
560 558 491
562 560 477
564 563 477
566 565 483
568 566 473
570 568 469
572 246 77
574 572 79
576 117 82
578 116 82
580 577 82
582 574 56
584 578 575
586 585 583
588 119 82
590 118 82
592 589 82
594 574 58
596 590 575
598 597 595
600 121 82
602 120 82
604 601 82
606 574 60
608 602 575
610 609 607
612 123 82
614 122 82
616 613 82
618 574 62
620 614 575
622 621 619
624 125 82
626 124 82
628 625 82
630 574 64
632 626 575
634 633 631
636 127 82
638 126 82
640 637 82
642 574 66
644 638 575
646 645 643
648 4 2
650 648 7
652 650 262
654 187 82
656 186 82
658 655 82
660 129 82
662 128 82
664 661 82
666 656 652
668 662 653
670 669 667
672 189 82
674 188 82
676 673 82
678 131 82
680 130 82
682 679 82
684 674 652
686 680 653
688 687 685
690 191 82
692 190 82
694 691 82
696 133 82
698 132 82
700 697 82
702 692 652
704 698 653
706 705 703
708 264 6
710 708 262
712 710 12
714 711 12
716 715 713
718 260 37
720 5 3
722 720 7
724 722 718
726 724 8
728 725 8
730 729 727
732 136 82
734 733 8
736 139 82
738 138 82
740 737 82
742 738 735
744 141 82
746 140 82
748 745 82
750 748 739
752 167 82
754 166 82
756 753 82
758 175 82
760 174 82
762 759 82
764 177 82
766 176 82
768 765 82
770 178 82
772 767 762
774 772 771
776 775 756
778 768 761
780 778 771
782 781 755
784 783 777
786 578 275
788 581 272
790 789 787
792 590 287
794 593 284
796 795 793
798 602 299
800 605 296
802 801 799
804 796 790
806 804 802
808 806 784
810 143 82
812 142 82
814 811 82
816 815 614
818 812 617
820 819 817
822 145 82
824 144 82
826 823 82
828 827 626
830 824 629
832 831 829
834 147 82
836 146 82
838 835 82
840 839 638
842 836 641
844 843 841
846 832 820
848 846 844
850 848 808
852 135 82
854 853 82
856 854 850
858 738 35
860 859 35
862 857 738
864 861 856
866 865 863
868 748 740
870 868 68
872 871 738
874 867 750
876 872 751
878 877 875
880 742 724
882 879 725
884 883 881
886 746 735
888 887 735
890 746 35
892 891 35
894 857 746
896 893 856
898 897 895
900 871 746
902 899 750
904 900 751
906 905 903
908 889 724
910 907 725
912 911 909
914 272 268
916 812 269
918 917 915
920 284 268
922 824 269
924 923 921
926 296 268
928 836 269
930 929 927
932 149 82
934 148 82
936 933 82
938 151 82
940 150 82
942 939 82
944 153 82
946 152 82
948 945 82
950 155 82
952 154 82
954 951 82
956 941 935
958 956 947
960 958 953
962 74 72
964 962 77
966 964 79
968 966 960
970 941 936
972 970 947
974 972 953
976 494 80
978 976 974
980 978 440
982 942 935
984 982 947
986 984 953
988 508 38
990 988 986
992 990 440
994 942 936
996 994 947
998 996 953
1000 998 308
1002 1000 49
1004 1000 48
1006 956 948
1008 1006 953
1010 1008 870
1012 656 405
1014 659 402
1016 1015 1013
1018 674 417
1020 677 414
1022 1021 1019
1024 692 429
1026 695 426
1028 1027 1025
1030 1022 1016
1032 1030 1028
1034 181 82
1036 180 82
1038 1035 82
1040 1039 662
1042 1036 665
1044 1043 1041
1046 183 82
1048 182 82
1050 1047 82
1052 1051 680
1054 1048 683
1056 1055 1053
1058 185 82
1060 184 82
1062 1059 82
1064 1063 698
1066 1060 701
1068 1067 1065
1070 1056 1044
1072 1070 1068
1074 1072 1032
1076 369 272
1078 366 275
1080 1079 1077
1082 381 284
1084 378 287
1086 1085 1083
1088 393 296
1090 390 299
1092 1091 1089
1094 1086 1080
1096 1094 1092
1098 1096 1074
1100 161 82
1102 160 82
1104 1101 82
1106 1105 812
1108 1102 815
1110 1109 1107
1112 163 82
1114 162 82
1116 1113 82
1118 1117 824
1120 1114 827
1122 1121 1119
1124 165 82
1126 164 82
1128 1125 82
1130 1129 836
1132 1126 839
1134 1133 1131
1136 1122 1110
1138 1136 1134
1140 1138 1098
1142 157 82
1144 156 82
1146 1143 82
1148 1144 315
1150 1147 312
1152 1151 1149
1154 159 82
1156 158 82
1158 1155 82
1160 1156 327
1162 1159 324
1164 1163 1161
1166 1164 1152
1168 1166 1140
1170 1168 755
1172 1171 1010
1174 1172 440
1176 1010 40
1178 1176 440
1180 1010 41
1182 1180 440
1184 970 948
1186 1184 953
1188 1186 870
1190 1168 756
1192 1191 1188
1194 1192 440
1196 1188 40
1198 1196 440
1200 1188 41
1202 1200 440
1204 982 948
1206 1204 953
1208 436 76
1210 1208 79
1212 1210 1206
1214 994 948
1216 1214 953
1218 246 76
1220 1218 79
1222 1220 1216
1224 958 954
1226 962 76
1228 1226 79
1230 1228 1224
1232 972 954
1234 258 78
1236 1234 1232
1238 1237 934
1240 1239 1237
1242 1241 1231
1244 1243 1231
1246 1245 1223
1248 1247 1223
1250 1249 1213
1252 1251 1213
1254 1253 1203
1256 1255 1203
1258 1257 1199
1260 1258 1195
1262 1260 1183
1264 1263 1183
1266 1265 1179
1268 1266 1175
1270 1268 1005
1272 1271 1005
1274 1273 1003
1276 1274 993
1278 1277 993
1280 1279 981
1282 1280 969
1284 1283 969
1286 1237 940
1288 1287 1237
1290 1289 1231
1292 1291 1231
1294 1293 1223
1296 1295 1223
1298 1297 1213
1300 1299 1213
1302 1301 1203
1304 1302 1199
1306 1304 1195
1308 1307 1195
1310 1309 1183
1312 1311 1183
1314 1313 1179
1316 1315 1179
1318 1317 1175
1320 1319 1175
1322 1321 1005
1324 1322 1003
1326 1324 993
1328 1327 993
1330 1329 981
1332 1331 981
1334 1333 969
1336 1237 946
1338 1336 1231
1340 1338 1223
1342 1340 1213
1344 1342 1203
1346 1344 1199
1348 1346 1195
1350 1348 1183
1352 1351 1183
1354 1353 1179
1356 1355 1179
1358 1357 1175
1360 1358 1005
1362 1361 1005
1364 1363 1003
1366 1365 1003
1368 1367 993
1370 1368 981
1372 1370 969
1374 1237 952
1376 1374 1231
1378 1376 1223
1380 1378 1213
1382 1380 1203
1384 1383 1203
1386 1385 1199
1388 1387 1199
1390 1389 1195
1392 1391 1195
1394 1393 1183
1396 1394 1179
1398 1396 1175
1400 1399 1175
1402 1401 1005
1404 1402 1003
1406 1404 993
1408 1406 981
1410 1408 969
1412 574 24
1414 1144 575
1416 1415 1413
1418 574 26
1420 1156 575
1422 1421 1419
1424 308 42
1426 1102 309
1428 1427 1425
1430 308 44
1432 1114 309
1434 1433 1431
1436 308 46
1438 1126 309
1440 1439 1437
1442 724 10
1444 725 10
1446 1445 1443
1448 999 209
1450 206 203
1452 207 200
1454 1453 1451
1456 1455 999
1458 206 200
1460 1458 197
1462 1459 194
1464 1463 1461
1466 1465 999
1468 648 6
1470 1468 262
1472 1470 8
1474 1471 760
1476 1475 1473
1478 1470 10
1480 1471 766
1482 1481 1479
1484 1470 12
1486 1471 770
1488 1487 1485
1490 308 18
1492 1036 309
1494 1493 1491
1496 308 20
1498 1048 309
1500 1499 1497
1502 308 22
1504 1060 309
1506 1505 1503
1508 652 8
1510 656 653
1512 1511 1509
1514 652 10
1516 674 653
1518 1517 1515
1520 652 12
1522 692 653
1524 1523 1521
i0 controllable_addr_abs<0>
i1 controllable_addr_abs<1>
i2 controllable_addr_abs<2>
i3 controllable_write8_val_abs<0>
i4 controllable_write8_val_abs<1>
i5 controllable_write8_val_abs<2>
i6 i_reqBuf_abs<0>
i7 i_reqBuf_abs<1>
i8 i_reqLBA1_abs<0>
i9 i_reqLBA1_abs<1>
i10 i_reqLBA1_abs<2>
i11 controllable_fillPrdAddr_abs<0>
i12 controllable_fillPrdAddr_abs<1>
i13 i_reqLBA0_abs<0>
i14 i_reqLBA0_abs<1>
i15 i_reqLBA0_abs<2>
i16 controllable_dmaStartClass_conc
i17 controllable_bank_abs
i18 controllable_featXFRClass_conc
i19 i_transSuccess_conc
i20 i_reqSect1_abs<0>
i21 i_reqSect1_abs<1>
i22 i_reqSect1_abs<2>
i23 i_osReqType_conc
i24 i_reqSect0_abs<0>
i25 i_reqSect0_abs<1>
i26 i_reqSect0_abs<2>
i27 controllable_fillPrdNSect_abs<0>
i28 controllable_fillPrdNSect_abs<1>
i29 controllable_fillPrdNSect_abs<2>
i30 controllable_fillPrdNSect_abs<3>
i31 controllable_fillPrdNSect_abs<4>
i32 controllable_fillPrdNSect_abs<5>
i33 controllable_busMasterClass_conc
i34 controllable_featWCClass_conc
i35 controllable_tag_conc<0>
i36 controllable_tag_conc<1>
i37 controllable_tag_conc<2>
i38 controllable_tag_conc<3>
i39 controllable_featNWCClass_conc
l0 n83
l1 state_regSectors0_abs<0>_out
l2 state_regSectors0_abs<1>_out
l3 state_regSectors0_abs<2>_out
l4 state_os_buf_abs<0>_out
l5 state_os_buf_abs<1>_out
l6 state_regFeature0_abs<0>_out
l7 state_regFeature0_abs<1>_out
l8 state_os_sect0_abs<0>_out
l9 state_os_sect0_abs<1>_out
l10 state_os_sect0_abs<2>_out
l11 state_os_lba0_abs<0>_out
l12 state_os_lba0_abs<1>_out
l13 state_os_lba0_abs<2>_out
l14 state_setFeatState_conc<0>_out
l15 state_setFeatState_conc<1>_out
l16 state_setFeatState_conc<2>_out
l17 state_bufSectors_abs<0>_out
l18 state_bufSectors_abs<1>_out
l19 state_bufSectors_abs<2>_out
l20 state_bufSectors_abs<3>_out
l21 state_bufSectors_abs<4>_out
l22 state_bufSectors_abs<5>_out
l23 state_regLBALow1_abs<0>_out
l24 state_regLBALow1_abs<1>_out
l25 state_regLBALow1_abs<2>_out
l26 state_regDev_LBA_abs_out
l27 state_regBMCommand_Start_abs_out
l28 state_stDMACmd_conc<0>_out
l29 state_stDMACmd_conc<1>_out
l30 state_regSectors1_abs<0>_out
l31 state_regSectors1_abs<1>_out
l32 state_regSectors1_abs<2>_out
l33 state_osState_conc<0>_out
l34 state_osState_conc<1>_out
l35 state_osState_conc<2>_out
l36 state_osState_conc<3>_out
l37 state_bufAddr_abs<0>_out
l38 state_bufAddr_abs<1>_out
l39 state_os_sect1_abs<0>_out
l40 state_os_sect1_abs<1>_out
l41 state_os_sect1_abs<2>_out
l42 state_regBMCommand_RW_abs_out
l43 fair_cnt<0>_out
l44 fair_cnt<1>_out
l45 fair_cnt<2>_out
l46 state_regCommand_abs<0>_out
l47 state_regCommand_abs<1>_out
l48 state_regCommand_abs<2>_out
l49 state_os_lba1_abs<0>_out
l50 state_os_lba1_abs<1>_out
l51 state_os_lba1_abs<2>_out
l52 state_regLBALow0_abs<0>_out
l53 state_regLBALow0_abs<1>_out
l54 state_regLBALow0_abs<2>_out
o0 o_err
c
ide_hard_drive_controller_2
This file was written by ABC on Tue Mar 11 20:24:21 2014
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv driver_d6.v   ---gives--> driver_d6.mv
> abc -c "read_blif_mv driver_d6.mv; write_aiger -s driver_d6n.aig"   ---gives--> driver_d6n.aig
> aigtoaig driver_d6n.aig driver_d6n.aag   ---gives--> driver_d6n.aag (this file)
Content of driver_d6.v:
// IDE hard drive controller specification and operating system interface
// specification for device driver synthesis.
// This file describes a GR(1) game played by a device driver for an IDE hard
// disk against its environment consisting of the hard disk and operating
// system.

`define WIDTH1 2
`define WIDTH2 1

`define CMD_READ_DMA_EXT  1
`define CMD_WRITE_DMA_EXT 2
`define FEAT_WC           1
`define FEAT_NWC          2
`define FEAT_XFR_MODE     3
`define XM_ULTRA_DMA      7

`define RCMD              1
`define REG_FEATURE0      1
`define REG_SECTORS       2
`define REG_LBA_LOW       3
`define REG_LBA_MID       4
`define REG_LBA_HIGH      5
`define REG_DEV           6
`define REG_ERRCMD        7

`define RDMA              0
`define REG_BM_COMMAND    0

//typedef enum {read=0, write=1} i_osReqType_enum;
`define read              0
`define write             1

//typedef enum {write8, write32, fillPrd, reset, os_req, ack_read_succ, ack_read_fail, ack_write_succ, ack_write_fail, class_event} controllable_tag_enum;
`define write8            0
`define write32           1
`define fillPrd           2
`define reset             3
`define os_req            4
`define ack_read_succ     5
`define ack_read_fail     6
`define ack_write_succ    7
`define ack_write_fail    8
`define class_event       9

//typedef enum {wait_bm_ready=0, dma_read=1, bm_read_prd=2, bm_ready=3} state_stDMACmd_enum;
`define wait_bm_ready     0
`define dma_read          1
`define bm_read_prd       2
`define bm_ready          3


//typedef enum {setFeatIdle=0, setFeatWC=1, setFeatNWC=2, setFeatXFR0=3, setFeatXFR1=4} state_setFeatState_enum;
`define setFeatIdle       0
`define setFeatWC         1
`define setFeatNWC        2
`define setFeatXFR0       3
`define setFeatXFR1       4

//typedef enum {os_init=0, os_reset=1, os_write_cache=2, os_idle=3, os_read_pending=4, os_write_pending=5, os_read_ack_succ=6, os_read_ack_fail=7, os_write_ack_succ=8, os_write_ack_fail=9, os_error=10} state_osState_enum;
`define os_init           0
`define os_reset          1
`define os_write_cache    2
`define os_idle           3
`define os_read_pending   4
`define os_write_pending  5
`define os_read_ack_succ  6
`define os_read_ack_fail  7
`define os_write_ack_succ 8
`define os_write_ack_fail 9
`define os_error          10

module ide_hard_drive_controller_2(
        o_err,
        i_clk,
        i_osReqType_conc,
        i_reqLBA0_abs,
        i_reqLBA1_abs,
        i_reqSect0_abs,
        i_reqSect1_abs,
        i_reqBuf_abs,
        i_transSuccess_conc,
        controllable_tag_conc,
        controllable_bank_abs,
        controllable_addr_abs,
        controllable_write8_val_abs,
        controllable_fillPrdAddr_abs,
        controllable_fillPrdNSect_abs,
        controllable_featWCClass_conc,
        controllable_featNWCClass_conc,
        controllable_featXFRClass_conc,
        controllable_busMasterClass_conc,
        controllable_dmaStartClass_conc );

input i_clk;
input i_osReqType_conc ;
input [`WIDTH1:0] i_reqLBA0_abs ;
input [`WIDTH1:0] i_reqLBA1_abs ;
input [`WIDTH1:0] i_reqSect0_abs ;
input [`WIDTH1:0] i_reqSect1_abs ;
input [`WIDTH2:0] i_reqBuf_abs ;
input i_transSuccess_conc ;
input [3:0] controllable_tag_conc ;
input controllable_bank_abs ;
input [2:0] controllable_addr_abs ;
input [`WIDTH1:0] controllable_write8_val_abs ;
input [`WIDTH2:0] controllable_fillPrdAddr_abs ;
input [5:0] controllable_fillPrdNSect_abs ;
input controllable_featWCClass_conc ;
input controllable_featNWCClass_conc ;
input controllable_featXFRClass_conc ;
input controllable_busMasterClass_conc ;
input controllable_dmaStartClass_conc ;
output o_err;

reg [1:0] state_stDMACmd_conc ;
reg [2:0] state_setFeatState_conc ;
reg [1:0] state_regFeature0_abs ;
reg [`WIDTH1:0] state_regSectors0_abs ;
reg [`WIDTH1:0] state_regSectors1_abs ;
reg [`WIDTH1:0] state_regLBALow0_abs ;
reg [`WIDTH1:0] state_regLBALow1_abs ;
reg state_regDev_LBA_abs ;
reg [`WIDTH1:0] state_regCommand_abs ;
reg state_regBMCommand_Start_abs ;
reg state_regBMCommand_RW_abs ;
reg [`WIDTH2:0] state_bufAddr_abs ;
reg [5:0] state_bufSectors_abs ;

reg [3:0] state_osState_conc ;
reg [`WIDTH1:0] state_os_lba0_abs ;
reg [`WIDTH1:0] state_os_lba1_abs ;
reg [`WIDTH1:0] state_os_sect0_abs ;
reg [`WIDTH1:0] state_os_sect1_abs ;
reg [`WIDTH2:0] state_os_buf_abs ;

reg [2:0] fair_cnt;

wire transferMode3;
wire nwc;
wire bm_event;
wire transferCorrect;
wire transferCorrect_0;
wire transferCorrect_1;
wire buechi_satisfied;
wire [1:0] next_state_stDMACmd_conc ;
wire [2:0] next_state_setFeatState_conc ;
wire [1:0] next_state_regFeature0_abs ;
wire [`WIDTH1:0] next_state_regSectors0_abs ;
wire [`WIDTH1:0] next_state_regSectors1_abs ;
wire [`WIDTH1:0] next_state_regLBALow0_abs ;
wire [`WIDTH1:0] next_state_regLBALow1_abs ;
wire next_state_regDev_LBA_abs ;
wire [`WIDTH1:0] next_state_regCommand_abs ;
wire next_state_regBMCommand_Start_abs ;
wire next_state_regBMCommand_RW_abs ;
wire [`WIDTH2:0] next_state_bufAddr_abs ;
wire [5:0] next_state_bufSectors_abs ;

wire [3:0] next_state_osState_conc ;
wire [`WIDTH1:0] next_state_os_lba0_abs ;
wire [`WIDTH1:0] next_state_os_lba1_abs ;
wire [`WIDTH1:0] next_state_os_sect0_abs ;
wire [`WIDTH1:0] next_state_os_sect1_abs ;
wire [`WIDTH2:0] next_state_os_buf_abs ;

// some abbreviations:
assign transferMode3 = (state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1);
assign nwc =           (state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1);
assign bm_event = (state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1);
assign transferCorrect = (state_os_lba0_abs==state_regLBALow0_abs    &&
                          state_os_lba1_abs==state_regLBALow1_abs    &&
                          state_os_sect0_abs==state_regSectors0_abs  &&
                          state_os_sect1_abs==state_regSectors1_abs  &&
                          state_os_buf_abs==state_bufAddr_abs);
assign transferCorrect_0 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==0);
assign transferCorrect_1 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==1);


// state updates:
  //Device state updates:
assign next_state_regFeature0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_FEATURE0) ? controllable_write8_val_abs  : state_regFeature0_abs;
assign next_state_regSectors0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? controllable_write8_val_abs  : state_regSectors0_abs;
assign next_state_regSectors1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? state_regSectors0_abs : state_regSectors1_abs;
assign next_state_regLBALow0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? controllable_write8_val_abs  : state_regLBALow0_abs;
assign next_state_regLBALow1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? state_regLBALow0_abs  : state_regLBALow1_abs;
assign next_state_regDev_LBA_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_DEV)      ? controllable_write8_val_abs[2:2] : state_regDev_LBA_abs;
assign next_state_regCommand_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_ERRCMD)   ? controllable_write8_val_abs  : state_regCommand_abs;
assign next_state_regBMCommand_Start_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[0:0] : state_regBMCommand_Start_abs;
assign next_state_regBMCommand_RW_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[1:1] : state_regBMCommand_RW_abs;
assign next_state_bufAddr_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdAddr_abs : state_bufAddr_abs;
assign next_state_bufSectors_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdNSect_abs : state_bufSectors_abs;

assign next_state_setFeatState_conc = (controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_WC) ? `setFeatWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_NWC) ? `setFeatNWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE && state_regSectors0_abs==`XM_ULTRA_DMA) ? `setFeatXFR0 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE) ? `setFeatXFR1 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatWC   && controllable_featWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR0 && controllable_featXFRClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1) ? `setFeatIdle : state_setFeatState_conc)))))));

assign next_state_stDMACmd_conc = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ?
               (
                 (state_regBMCommand_Start_abs==0 && controllable_write8_val_abs[0:0]==1) ? `bm_read_prd : state_stDMACmd_conc
               ) :
               (
                 (state_stDMACmd_conc==`bm_read_prd) ?
                 (((state_regBMCommand_RW_abs == 1 && state_regCommand_abs != `CMD_READ_DMA_EXT) || (state_regBMCommand_RW_abs == 0 && state_regCommand_abs != `CMD_WRITE_DMA_EXT) || (state_regSectors0_abs != state_bufSectors_abs[`WIDTH1:0]) || (state_regSectors1_abs != state_bufSectors_abs[5:3]) || state_regDev_LBA_abs != 1) ? state_stDMACmd_conc : ((controllable_dmaStartClass_conc==1) ? `bm_ready : state_stDMACmd_conc)) :
                 ((state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1) ? `wait_bm_ready : state_stDMACmd_conc)
               );

//OS state updates
assign next_state_os_lba0_abs = (controllable_tag_conc==`os_req) ? i_reqLBA0_abs : state_os_lba0_abs;
assign next_state_os_lba1_abs = (controllable_tag_conc==`os_req) ? i_reqLBA1_abs : state_os_lba1_abs;
assign next_state_os_sect0_abs = (controllable_tag_conc==`os_req) ? i_reqSect0_abs : state_os_sect0_abs;
assign next_state_os_sect1_abs = (controllable_tag_conc==`os_req) ? i_reqSect1_abs : state_os_sect1_abs;
assign next_state_os_buf_abs = (controllable_tag_conc==`os_req) ? i_reqBuf_abs : state_os_buf_abs;

assign next_state_osState_conc = (state_osState_conc==`os_init && controllable_tag_conc==`reset) ? `os_reset :
      ((state_osState_conc==`os_reset && nwc && controllable_tag_conc==`class_event) ? `os_write_cache :
      ((state_osState_conc==`os_write_cache && transferMode3 && controllable_tag_conc==`class_event) ? `os_idle :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`read) ? `os_read_pending :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`write) ? `os_write_pending :
      ((state_osState_conc==`os_read_pending && bm_event && !transferCorrect_0 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_read_ack_succ :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_read_ack_fail :
      ((state_osState_conc==`os_write_pending && bm_event && !transferCorrect_1 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_write_ack_succ :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_write_ack_fail :
      ((state_osState_conc==`os_read_ack_succ && controllable_tag_conc==`ack_read_succ) ? `os_idle :
      ((state_osState_conc==`os_read_ack_fail && controllable_tag_conc==`ack_read_fail) ? `os_idle :
      ((state_osState_conc==`os_write_ack_succ && controllable_tag_conc==`ack_write_succ) ? `os_idle :
      ((state_osState_conc==`os_write_ack_fail && controllable_tag_conc==`ack_write_fail) ? `os_idle : state_osState_conc))))))))))))));


// buechi-to-safety construction:                            
assign buechi_satisfied = (state_osState_conc == `os_idle);                          
                            
assign o_err = (fair_cnt >= 6) || controllable_tag_conc >= 10;

initial
 begin
  state_stDMACmd_conc = `wait_bm_ready;
  state_setFeatState_conc = `setFeatIdle;
  state_regFeature0_abs = 0;
  state_regSectors0_abs = 0;
  state_regSectors1_abs = 0;
  state_regLBALow0_abs = 0;
  state_regLBALow1_abs = 0;
  state_regDev_LBA_abs = 0;
  state_regCommand_abs = 0;
  state_regBMCommand_Start_abs = 0;
  state_regBMCommand_RW_abs = 0;
  state_bufAddr_abs = 0;
  state_bufSectors_abs = 0;
  state_osState_conc = `os_init;
  state_os_lba0_abs = 0;
  state_os_lba1_abs = 0;
  state_os_sect0_abs = 0;
  state_os_sect1_abs = 0;
  state_os_buf_abs = 0;
  fair_cnt = 0;
 end

always @(posedge i_clk)
 begin

  if(buechi_satisfied)
   begin
    fair_cnt = 0;
   end
  else
   begin
    fair_cnt = fair_cnt + 1;
   end
 
  //Device state updates:
  state_regFeature0_abs          = next_state_regFeature0_abs ;
  state_regSectors0_abs          = next_state_regSectors0_abs ;
  state_regSectors1_abs          = next_state_regSectors1_abs ;
  state_regLBALow0_abs           = next_state_regLBALow0_abs ;
  state_regLBALow1_abs           = next_state_regLBALow1_abs ;
  state_regDev_LBA_abs           = next_state_regDev_LBA_abs ;
  state_regCommand_abs           = next_state_regCommand_abs ;
  state_regBMCommand_Start_abs   = next_state_regBMCommand_Start_abs ;
  state_regBMCommand_RW_abs      = next_state_regBMCommand_RW_abs ;
  state_bufAddr_abs              = next_state_bufAddr_abs ;
  state_bufSectors_abs           = next_state_bufSectors_abs ;
  state_setFeatState_conc        = next_state_setFeatState_conc ;
  state_stDMACmd_conc            = next_state_stDMACmd_conc ;
  state_os_lba0_abs              = next_state_os_lba0_abs ;
  state_os_lba1_abs              = next_state_os_lba1_abs ;
  state_os_sect0_abs             = next_state_os_sect0_abs ;
  state_os_sect1_abs             = next_state_os_sect1_abs ;
  state_os_buf_abs               = next_state_os_buf_abs ;
  state_osState_conc             = next_state_osState_conc ;
 end
 
 
endmodule
-------------------------------
#!SYNTCOMP
SOLVED_BY : 3/3 [2015-pre-classification], 11/11 [SYNTCOMP2016-RealSeq], 6/6 [SYNTCOMP2016-RealPar]
SOLVED_IN : 3.67875 [2015-pre-classification], 0.024 [SYNTCOMP2016-RealSeq], 0.165678 [SYNTCOMP2016-RealPar]
REF_SIZE : 0
STATUS : unrealizable
#.

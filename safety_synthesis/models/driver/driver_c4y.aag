aag 714 52 79 1 583
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106 1
108 293
110 301
112 309
114 321
116 329
118 337
120 345
122 353
124 367
126 375
128 383
130 391
132 399
134 407
136 415
138 423
140 493
142 505
144 512
146 527
148 535
150 543
152 551
154 559
156 567
158 575
160 583
162 591
164 607
166 617
168 627
170 12
172 8
174 643
176 653
178 663
180 777
182 789
184 795
186 801
188 807
190 815
192 823
194 831
196 1205
198 1225
200 1235
202 1243
204 1249
206 1255
208 1261
210 1267
212 1273
214 1279
216 1285
218 1291
220 10
222 1294
224 1304
226 1312
228 1323
230 1329
232 1335
234 1341
236 1347
238 1353
240 1363
242 1369
244 1375
246 1381
248 1387
250 1393
252 1399
254 1405
256 1411
258 1417
260 1423
262 1429
271
264 95 93
266 265 96
268 226 106
270 269 267
272 93 91
274 272 95
276 274 97
278 276 54
280 4 3
282 280 7
284 282 278
286 284 8
288 108 106
290 288 285
292 291 287
294 284 10
296 110 106
298 296 285
300 299 295
302 284 12
304 112 106
306 304 285
308 307 303
310 272 94
312 310 97
314 312 28
316 114 106
318 316 313
320 319 315
322 312 30
324 116 106
326 324 313
328 327 323
330 312 32
332 118 106
334 332 313
336 335 331
338 312 14
340 120 106
342 340 313
344 343 339
346 312 16
348 122 106
350 348 313
352 351 347
354 5 2
356 354 7
358 356 278
360 358 8
362 124 106
364 362 359
366 365 361
368 358 10
370 126 106
372 370 359
374 373 369
376 312 68
378 128 106
380 378 313
382 381 377
384 312 70
386 130 106
388 386 313
390 389 385
392 312 72
394 132 106
396 394 313
398 397 393
400 312 34
402 134 106
404 402 313
406 405 401
408 312 36
410 136 106
412 410 313
414 413 409
416 312 38
418 138 106
420 418 313
422 421 417
424 93 90
426 424 95
428 426 96
430 144 106
432 140 106
434 142 106
436 435 433
438 436 431
440 438 428
442 371 362
444 442 440
446 370 362
448 446 440
450 296 288
452 450 304
454 452 448
456 434 432
458 456 431
460 428 56
462 460 458
464 463 432
466 436 430
468 466 56
470 434 433
472 470 431
474 472 98
476 435 432
478 476 431
480 478 88
482 481 475
484 482 469
486 485 428
488 487 464
490 489 455
492 490 445
494 487 434
496 494 463
498 370 363
500 498 440
502 501 455
504 502 497
506 460 436
508 507 430
510 509 449
512 511 502
514 92 91
516 514 95
518 516 97
520 518 74
522 146 106
524 522 519
526 525 521
528 518 76
530 148 106
532 530 519
534 533 529
536 518 78
538 150 106
540 538 519
542 541 537
544 518 80
546 152 106
548 546 519
550 549 545
552 518 82
554 154 106
556 554 519
558 557 553
560 518 84
562 156 106
564 562 519
566 565 561
568 312 48
570 158 106
572 570 313
574 573 569
576 312 50
578 160 106
580 578 313
582 581 577
584 312 52
586 162 106
588 586 313
590 589 585
592 4 2
594 592 7
596 594 278
598 252 106
600 598 596
602 164 106
604 602 597
606 605 601
608 254 106
610 608 596
612 166 106
614 612 597
616 615 611
618 256 106
620 618 596
622 168 106
624 622 597
626 625 621
628 5 3
630 628 6
632 630 278
634 258 106
636 634 632
638 174 106
640 638 633
642 641 637
644 260 106
646 644 632
648 176 106
650 648 633
652 651 647
654 262 106
656 654 632
658 178 106
660 658 633
662 661 657
664 276 55
666 628 7
668 666 664
670 172 106
672 671 8
674 180 106
676 674 673
678 676 668
680 182 106
682 680 674
684 682 86
686 685 674
688 680 675
690 538 305
692 539 304
694 693 691
696 522 289
698 523 288
700 699 697
702 530 297
704 531 296
706 705 703
708 706 700
710 708 694
712 232 106
714 230 106
716 228 106
718 716 715
720 220 106
722 720 718
724 717 714
726 724 721
728 727 723
730 729 713
732 730 710
734 188 106
736 735 562
738 734 563
740 739 737
742 184 106
744 743 546
746 742 547
748 747 745
750 186 106
752 751 554
754 750 555
756 755 753
758 756 748
760 758 740
762 760 732
764 170 106
766 764 762
768 766 46
770 768 688
772 771 687
774 773 669
776 775 679
778 681 673
780 779 668
782 685 682
784 783 689
786 785 669
788 787 781
790 288 284
792 742 285
794 793 791
796 296 284
798 750 285
800 799 797
802 304 284
804 734 285
806 805 803
808 312 100
810 190 106
812 810 313
814 813 809
816 312 102
818 192 106
820 818 313
822 821 817
824 312 104
826 194 106
828 826 313
830 829 825
832 202 106
834 200 106
836 196 106
838 198 106
840 839 837
842 840 835
844 842 833
846 92 90
848 846 95
850 848 97
852 850 844
854 839 836
856 854 835
858 856 833
860 858 474
862 860 428
864 838 837
866 864 835
868 866 833
870 868 468
872 870 428
874 838 836
876 874 835
878 876 833
880 878 312
882 880 67
884 840 834
886 884 833
888 886 684
890 618 419
892 619 418
894 893 891
896 598 403
898 599 402
900 899 897
902 608 411
904 609 410
906 905 903
908 906 900
910 908 894
912 238 106
914 913 622
916 912 623
918 917 915
920 234 106
922 921 602
924 920 603
926 925 923
928 236 106
930 929 612
932 928 613
934 933 931
936 934 926
938 936 918
940 938 910
942 827 654
944 826 655
946 945 943
948 811 634
950 810 635
952 951 949
954 819 644
956 818 645
958 957 955
960 958 952
962 960 946
964 962 940
966 658 333
968 659 332
970 969 967
972 638 317
974 639 316
976 975 973
978 648 325
980 649 324
982 981 979
984 982 976
986 984 970
988 986 964
990 244 106
992 218 106
994 993 990
996 992 991
998 997 995
1000 240 106
1002 214 106
1004 1003 1000
1006 1002 1001
1008 1007 1005
1010 242 106
1012 216 106
1014 1013 1010
1016 1012 1011
1018 1017 1015
1020 1018 1008
1022 1020 998
1024 1022 988
1026 250 106
1028 1026 587
1030 1027 586
1032 1031 1029
1034 246 106
1036 1034 571
1038 1035 570
1040 1039 1037
1042 248 106
1044 1042 579
1046 1043 578
1048 1047 1045
1050 1048 1040
1052 1050 1032
1054 1052 1024
1056 395 304
1058 394 305
1060 1059 1057
1062 379 288
1064 378 289
1066 1065 1063
1068 387 296
1070 386 297
1072 1071 1069
1074 1072 1066
1076 1074 1060
1078 1076 1054
1080 212 106
1082 1081 734
1084 1080 735
1086 1085 1083
1088 208 106
1090 1089 742
1092 1088 743
1094 1093 1091
1096 210 106
1098 1097 750
1100 1096 751
1102 1101 1099
1104 1102 1094
1106 1104 1086
1108 1106 1078
1110 204 106
1112 1110 341
1114 1111 340
1116 1115 1113
1118 206 106
1120 1118 349
1122 1119 348
1124 1123 1121
1126 1124 1116
1128 1126 1108
1130 1128 721
1132 1131 888
1134 1132 428
1136 888 59
1138 1136 428
1140 854 834
1142 1140 833
1144 1142 684
1146 1128 720
1148 1147 1144
1150 1148 428
1152 1144 58
1154 1152 428
1156 864 834
1158 1156 833
1160 424 94
1162 1160 97
1164 1162 1158
1166 874 834
1168 1166 833
1170 514 94
1172 1170 97
1174 1172 1168
1176 842 832
1178 846 94
1180 1178 97
1182 1180 1176
1184 1183 1175
1186 1184 1165
1188 1186 837
1190 1189 1155
1192 1190 1151
1194 1193 1139
1196 1195 1135
1198 1196 883
1200 1199 873
1202 1201 863
1204 1203 853
1206 856 832
1208 274 96
1210 1208 1206
1212 1211 839
1214 1212 1186
1216 1214 1151
1218 888 428
1220 1219 1216
1222 1221 881
1224 1223 863
1226 1186 834
1228 1144 428
1230 1229 1226
1232 1230 1135
1234 1233 881
1236 1211 832
1238 1236 1186
1240 1239 1229
1242 1240 1135
1244 518 24
1246 1110 519
1248 1247 1245
1250 518 26
1252 1118 519
1254 1253 1251
1256 312 60
1258 1088 313
1260 1259 1257
1262 312 62
1264 1096 313
1266 1265 1263
1268 312 64
1270 1080 313
1272 1271 1269
1274 312 40
1276 1002 313
1278 1277 1275
1280 312 42
1282 1012 313
1284 1283 1281
1286 312 44
1288 992 313
1290 1289 1287
1292 222 106
1294 1293 879
1296 224 106
1298 1296 1292
1300 1297 1293
1302 1301 1299
1304 1302 879
1306 1298 269
1308 1299 268
1310 1309 1307
1312 1311 879
1314 592 6
1316 1314 278
1318 1316 8
1320 1317 716
1322 1321 1319
1324 1316 10
1326 1317 714
1328 1327 1325
1330 1316 12
1332 1317 712
1334 1333 1331
1336 312 18
1338 920 313
1340 1339 1337
1342 312 20
1344 928 313
1346 1345 1343
1348 312 22
1350 912 313
1352 1351 1349
1354 354 6
1356 1354 278
1358 1356 8
1360 1357 1000
1362 1361 1359
1364 1356 10
1366 1357 1010
1368 1367 1365
1370 1356 12
1372 1357 990
1374 1373 1371
1376 1356 1000
1378 1357 1034
1380 1379 1377
1382 1356 1010
1384 1357 1042
1386 1385 1383
1388 1356 990
1390 1357 1026
1392 1391 1389
1394 596 8
1396 598 597
1398 1397 1395
1400 596 10
1402 608 597
1404 1403 1401
1406 596 12
1408 618 597
1410 1409 1407
1412 632 8
1414 634 633
1416 1415 1413
1418 632 10
1420 644 633
1422 1421 1419
1424 632 12
1426 654 633
1428 1427 1425
i0 controllable_addr_abs<0>
i1 controllable_addr_abs<1>
i2 controllable_addr_abs<2>
i3 controllable_write8_val_abs<0>
i4 controllable_write8_val_abs<1>
i5 controllable_write8_val_abs<2>
i6 i_reqBuf_abs<0>
i7 i_reqBuf_abs<1>
i8 i_reqLBA1_abs<0>
i9 i_reqLBA1_abs<1>
i10 i_reqLBA1_abs<2>
i11 controllable_fillPrdAddr_abs<0>
i12 controllable_fillPrdAddr_abs<1>
i13 i_reqLBA3_abs<0>
i14 i_reqLBA3_abs<1>
i15 i_reqLBA3_abs<2>
i16 i_reqLBA0_abs<0>
i17 i_reqLBA0_abs<1>
i18 i_reqLBA0_abs<2>
i19 i_reqLBA4_abs<0>
i20 i_reqLBA4_abs<1>
i21 i_reqLBA4_abs<2>
i22 controllable_dmaStartClass_conc
i23 i_reqLBA5_abs<0>
i24 i_reqLBA5_abs<1>
i25 i_reqLBA5_abs<2>
i26 controllable_bank_abs
i27 controllable_featXFRClass_conc
i28 i_transSuccess_conc
i29 i_reqSect1_abs<0>
i30 i_reqSect1_abs<1>
i31 i_reqSect1_abs<2>
i32 i_osReqType_conc
i33 i_reqSect0_abs<0>
i34 i_reqSect0_abs<1>
i35 i_reqSect0_abs<2>
i36 controllable_fillPrdNSect_abs<0>
i37 controllable_fillPrdNSect_abs<1>
i38 controllable_fillPrdNSect_abs<2>
i39 controllable_fillPrdNSect_abs<3>
i40 controllable_fillPrdNSect_abs<4>
i41 controllable_fillPrdNSect_abs<5>
i42 controllable_busMasterClass_conc
i43 controllable_featWCClass_conc
i44 controllable_tag_conc<0>
i45 controllable_tag_conc<1>
i46 controllable_tag_conc<2>
i47 controllable_tag_conc<3>
i48 controllable_featNWCClass_conc
i49 i_reqLBA2_abs<0>
i50 i_reqLBA2_abs<1>
i51 i_reqLBA2_abs<2>
l0 n107
l1 state_regSectors0_abs<0>_out
l2 state_regSectors0_abs<1>_out
l3 state_regSectors0_abs<2>_out
l4 state_os_lba3_abs<0>_out
l5 state_os_lba3_abs<1>_out
l6 state_os_lba3_abs<2>_out
l7 state_os_buf_abs<0>_out
l8 state_os_buf_abs<1>_out
l9 state_regFeature0_abs<0>_out
l10 state_regFeature0_abs<1>_out
l11 state_os_sect0_abs<0>_out
l12 state_os_sect0_abs<1>_out
l13 state_os_sect0_abs<2>_out
l14 state_os_lba0_abs<0>_out
l15 state_os_lba0_abs<1>_out
l16 state_os_lba0_abs<2>_out
l17 state_setFeatState_conc<0>_out
l18 state_setFeatState_conc<1>_out
l19 state_setFeatState_conc<2>_out
l20 state_bufSectors_abs<0>_out
l21 state_bufSectors_abs<1>_out
l22 state_bufSectors_abs<2>_out
l23 state_bufSectors_abs<3>_out
l24 state_bufSectors_abs<4>_out
l25 state_bufSectors_abs<5>_out
l26 state_os_lba5_abs<0>_out
l27 state_os_lba5_abs<1>_out
l28 state_os_lba5_abs<2>_out
l29 state_regLBALow1_abs<0>_out
l30 state_regLBALow1_abs<1>_out
l31 state_regLBALow1_abs<2>_out
l32 state_regDev_LBA_abs_out
l33 state_regBMCommand_Start_abs_out
l34 state_regLBAMid1_abs<0>_out
l35 state_regLBAMid1_abs<1>_out
l36 state_regLBAMid1_abs<2>_out
l37 state_stDMACmd_conc<0>_out
l38 state_stDMACmd_conc<1>_out
l39 state_regSectors1_abs<0>_out
l40 state_regSectors1_abs<1>_out
l41 state_regSectors1_abs<2>_out
l42 state_os_lba2_abs<0>_out
l43 state_os_lba2_abs<1>_out
l44 state_os_lba2_abs<2>_out
l45 state_osState_conc<0>_out
l46 state_osState_conc<1>_out
l47 state_osState_conc<2>_out
l48 state_osState_conc<3>_out
l49 state_bufAddr_abs<0>_out
l50 state_bufAddr_abs<1>_out
l51 state_os_sect1_abs<0>_out
l52 state_os_sect1_abs<1>_out
l53 state_os_sect1_abs<2>_out
l54 state_os_lba4_abs<0>_out
l55 state_os_lba4_abs<1>_out
l56 state_os_lba4_abs<2>_out
l57 state_regBMCommand_RW_abs_out
l58 fair_cnt<0>_out
l59 fair_cnt<1>_out
l60 fair_cnt<2>_out
l61 state_regCommand_abs<0>_out
l62 state_regCommand_abs<1>_out
l63 state_regCommand_abs<2>_out
l64 state_os_lba1_abs<0>_out
l65 state_os_lba1_abs<1>_out
l66 state_os_lba1_abs<2>_out
l67 state_regLBAHigh0_abs<0>_out
l68 state_regLBAHigh0_abs<1>_out
l69 state_regLBAHigh0_abs<2>_out
l70 state_regLBAHigh1_abs<0>_out
l71 state_regLBAHigh1_abs<1>_out
l72 state_regLBAHigh1_abs<2>_out
l73 state_regLBALow0_abs<0>_out
l74 state_regLBALow0_abs<1>_out
l75 state_regLBALow0_abs<2>_out
l76 state_regLBAMid0_abs<0>_out
l77 state_regLBAMid0_abs<1>_out
l78 state_regLBAMid0_abs<2>_out
o0 o_err
c
ide_hard_drive_controller_2
This file was written by ABC on Tue Mar 11 20:24:20 2014
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv driver_c4.v   ---gives--> driver_c4.mv
> abc -c "read_blif_mv driver_c4.mv; strash; refactor; rewrite; dfraig; rewrite; dfraig; write_aiger -s driver_c4y.aig"   ---gives--> driver_c4y.aig
> aigtoaig driver_c4y.aig driver_c4y.aag   ---gives--> driver_c4y.aag (this file)
Content of driver_c4.v:
// IDE hard drive controller specification and operating system interface
// specification for device driver synthesis.
// This file describes a GR(1) game played by a device driver for an IDE hard
// disk against its environment consisting of the hard disk and operating
// system.

`define WIDTH1 2
`define WIDTH2 1

`define CMD_READ_DMA_EXT  1
`define CMD_WRITE_DMA_EXT 2
`define FEAT_WC           1
`define FEAT_NWC          2
`define FEAT_XFR_MODE     3
`define XM_ULTRA_DMA      7

`define RCMD              1
`define REG_FEATURE0      1
`define REG_SECTORS       2
`define REG_LBA_LOW       3
`define REG_LBA_MID       4
`define REG_LBA_HIGH      5
`define REG_DEV           6
`define REG_ERRCMD        7

`define RDMA              0
`define REG_BM_COMMAND    0

//typedef enum {read=0, write=1} i_osReqType_enum;
`define read              0
`define write             1

//typedef enum {write8, write32, fillPrd, reset, os_req, ack_read_succ, ack_read_fail, ack_write_succ, ack_write_fail, class_event} controllable_tag_enum;
`define write8            0
`define write32           1
`define fillPrd           2
`define reset             3
`define os_req            4
`define ack_read_succ     5
`define ack_read_fail     6
`define ack_write_succ    7
`define ack_write_fail    8
`define class_event       9

//typedef enum {wait_bm_ready=0, dma_read=1, bm_read_prd=2, bm_ready=3} state_stDMACmd_enum;
`define wait_bm_ready     0
`define dma_read          1
`define bm_read_prd       2
`define bm_ready          3


//typedef enum {setFeatIdle=0, setFeatWC=1, setFeatNWC=2, setFeatXFR0=3, setFeatXFR1=4} state_setFeatState_enum;
`define setFeatIdle       0
`define setFeatWC         1
`define setFeatNWC        2
`define setFeatXFR0       3
`define setFeatXFR1       4

//typedef enum {os_init=0, os_reset=1, os_write_cache=2, os_idle=3, os_read_pending=4, os_write_pending=5, os_read_ack_succ=6, os_read_ack_fail=7, os_write_ack_succ=8, os_write_ack_fail=9, os_error=10} state_osState_enum;
`define os_init           0
`define os_reset          1
`define os_write_cache    2
`define os_idle           3
`define os_read_pending   4
`define os_write_pending  5
`define os_read_ack_succ  6
`define os_read_ack_fail  7
`define os_write_ack_succ 8
`define os_write_ack_fail 9
`define os_error          10

module ide_hard_drive_controller_2(
        o_err,
        i_clk,
        i_osReqType_conc,
        i_reqLBA0_abs,
        i_reqLBA1_abs,
        i_reqLBA2_abs,
        i_reqLBA3_abs,
        i_reqLBA4_abs,
        i_reqLBA5_abs,
        i_reqSect0_abs,
        i_reqSect1_abs,
        i_reqBuf_abs,
        i_transSuccess_conc,
        controllable_tag_conc,
        controllable_bank_abs,
        controllable_addr_abs,
        controllable_write8_val_abs,
        controllable_fillPrdAddr_abs,
        controllable_fillPrdNSect_abs,
        controllable_featWCClass_conc,
        controllable_featNWCClass_conc,
        controllable_featXFRClass_conc,
        controllable_busMasterClass_conc,
        controllable_dmaStartClass_conc );

input i_clk;
input i_osReqType_conc ;
input [`WIDTH1:0] i_reqLBA0_abs ;
input [`WIDTH1:0] i_reqLBA1_abs ;
input [`WIDTH1:0] i_reqLBA2_abs ;
input [`WIDTH1:0] i_reqLBA3_abs ;
input [`WIDTH1:0] i_reqLBA4_abs ;
input [`WIDTH1:0] i_reqLBA5_abs ;
input [`WIDTH1:0] i_reqSect0_abs ;
input [`WIDTH1:0] i_reqSect1_abs ;
input [`WIDTH2:0] i_reqBuf_abs ;
input i_transSuccess_conc ;
input [3:0] controllable_tag_conc ;
input controllable_bank_abs ;
input [2:0] controllable_addr_abs ;
input [`WIDTH1:0] controllable_write8_val_abs ;
input [`WIDTH2:0] controllable_fillPrdAddr_abs ;
input [5:0] controllable_fillPrdNSect_abs ;
input controllable_featWCClass_conc ;
input controllable_featNWCClass_conc ;
input controllable_featXFRClass_conc ;
input controllable_busMasterClass_conc ;
input controllable_dmaStartClass_conc ;
output o_err;

reg [1:0] state_stDMACmd_conc ;
reg [2:0] state_setFeatState_conc ;
reg [1:0] state_regFeature0_abs ;
reg [`WIDTH1:0] state_regSectors0_abs ;
reg [`WIDTH1:0] state_regSectors1_abs ;
reg [`WIDTH1:0] state_regLBALow0_abs ;
reg [`WIDTH1:0] state_regLBALow1_abs ;
reg [`WIDTH1:0] state_regLBAMid0_abs ;
reg [`WIDTH1:0] state_regLBAMid1_abs ;
reg [`WIDTH1:0] state_regLBAHigh0_abs ;
reg [`WIDTH1:0] state_regLBAHigh1_abs ;
reg state_regDev_LBA_abs ;
reg [`WIDTH1:0] state_regCommand_abs ;
reg state_regBMCommand_Start_abs ;
reg state_regBMCommand_RW_abs ;
reg [`WIDTH2:0] state_bufAddr_abs ;
reg [5:0] state_bufSectors_abs ;

reg [3:0] state_osState_conc ;
reg [`WIDTH1:0] state_os_lba0_abs ;
reg [`WIDTH1:0] state_os_lba1_abs ;
reg [`WIDTH1:0] state_os_lba2_abs ;
reg [`WIDTH1:0] state_os_lba3_abs ;
reg [`WIDTH1:0] state_os_lba4_abs ;
reg [`WIDTH1:0] state_os_lba5_abs ;
reg [`WIDTH1:0] state_os_sect0_abs ;
reg [`WIDTH1:0] state_os_sect1_abs ;
reg [`WIDTH2:0] state_os_buf_abs ;

reg [2:0] fair_cnt;

wire transferMode3;
wire nwc;
wire bm_event;
wire transferCorrect;
wire transferCorrect_0;
wire transferCorrect_1;
wire buechi_satisfied;
wire [1:0] next_state_stDMACmd_conc ;
wire [2:0] next_state_setFeatState_conc ;
wire [1:0] next_state_regFeature0_abs ;
wire [`WIDTH1:0] next_state_regSectors0_abs ;
wire [`WIDTH1:0] next_state_regSectors1_abs ;
wire [`WIDTH1:0] next_state_regLBALow0_abs ;
wire [`WIDTH1:0] next_state_regLBALow1_abs ;
wire [`WIDTH1:0] next_state_regLBAMid0_abs ;
wire [`WIDTH1:0] next_state_regLBAMid1_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh0_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh1_abs ;
wire next_state_regDev_LBA_abs ;
wire [`WIDTH1:0] next_state_regCommand_abs ;
wire next_state_regBMCommand_Start_abs ;
wire next_state_regBMCommand_RW_abs ;
wire [`WIDTH2:0] next_state_bufAddr_abs ;
wire [5:0] next_state_bufSectors_abs ;

wire [3:0] next_state_osState_conc ;
wire [`WIDTH1:0] next_state_os_lba0_abs ;
wire [`WIDTH1:0] next_state_os_lba1_abs ;
wire [`WIDTH1:0] next_state_os_lba2_abs ;
wire [`WIDTH1:0] next_state_os_lba3_abs ;
wire [`WIDTH1:0] next_state_os_lba4_abs ;
wire [`WIDTH1:0] next_state_os_lba5_abs ;
wire [`WIDTH1:0] next_state_os_sect0_abs ;
wire [`WIDTH1:0] next_state_os_sect1_abs ;
wire [`WIDTH2:0] next_state_os_buf_abs ;

// some abbreviations:
assign transferMode3 = (state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1);
assign nwc =           (state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1);
assign bm_event = (state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1);
assign transferCorrect = (state_os_lba0_abs==state_regLBALow0_abs    &&
                          state_os_lba1_abs==state_regLBALow1_abs    &&
                          state_os_lba2_abs==state_regLBAMid0_abs    &&
                          state_os_lba3_abs==state_regLBAMid1_abs    &&
                          state_os_lba4_abs==state_regLBAHigh0_abs   &&
                          state_os_lba5_abs==state_regLBAHigh1_abs   &&
                          state_os_sect0_abs==state_regSectors0_abs  &&
                          state_os_sect1_abs==state_regSectors1_abs  &&
                          state_os_buf_abs==state_bufAddr_abs);
assign transferCorrect_0 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==0);
assign transferCorrect_1 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==1);


// state updates:
  //Device state updates:
assign next_state_regFeature0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_FEATURE0) ? controllable_write8_val_abs  : state_regFeature0_abs;
assign next_state_regSectors0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? controllable_write8_val_abs  : state_regSectors0_abs;
assign next_state_regSectors1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? state_regSectors0_abs : state_regSectors1_abs;
assign next_state_regLBALow0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? controllable_write8_val_abs  : state_regLBALow0_abs;
assign next_state_regLBALow1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? state_regLBALow0_abs  : state_regLBALow1_abs;
assign next_state_regLBAMid0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? controllable_write8_val_abs  : state_regLBAMid0_abs;
assign next_state_regLBAMid1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? state_regLBAMid0_abs  : state_regLBAMid1_abs;
assign next_state_regLBAHigh0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? controllable_write8_val_abs  : state_regLBAHigh0_abs;
assign next_state_regLBAHigh1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? state_regLBAHigh0_abs : state_regLBAHigh1_abs;
assign next_state_regDev_LBA_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_DEV)      ? controllable_write8_val_abs[2:2] : state_regDev_LBA_abs;
assign next_state_regCommand_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_ERRCMD)   ? controllable_write8_val_abs  : state_regCommand_abs;
assign next_state_regBMCommand_Start_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[0:0] : state_regBMCommand_Start_abs;
assign next_state_regBMCommand_RW_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[1:1] : state_regBMCommand_RW_abs;
assign next_state_bufAddr_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdAddr_abs : state_bufAddr_abs;
assign next_state_bufSectors_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdNSect_abs : state_bufSectors_abs;

assign next_state_setFeatState_conc = (controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_WC) ? `setFeatWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_NWC) ? `setFeatNWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE && state_regSectors0_abs==`XM_ULTRA_DMA) ? `setFeatXFR0 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE) ? `setFeatXFR1 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatWC   && controllable_featWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR0 && controllable_featXFRClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1) ? `setFeatIdle : state_setFeatState_conc)))))));

assign next_state_stDMACmd_conc = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ?
               (
                 (state_regBMCommand_Start_abs==0 && controllable_write8_val_abs[0:0]==1) ? `bm_read_prd : state_stDMACmd_conc
               ) :
               (
                 (state_stDMACmd_conc==`bm_read_prd) ?
                 (((state_regBMCommand_RW_abs == 1 && state_regCommand_abs != `CMD_READ_DMA_EXT) || (state_regBMCommand_RW_abs == 0 && state_regCommand_abs != `CMD_WRITE_DMA_EXT) || (state_regSectors0_abs != state_bufSectors_abs[`WIDTH1:0]) || (state_regSectors1_abs != state_bufSectors_abs[5:3]) || state_regDev_LBA_abs != 1) ? state_stDMACmd_conc : ((controllable_dmaStartClass_conc==1) ? `bm_ready : state_stDMACmd_conc)) :
                 ((state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1) ? `wait_bm_ready : state_stDMACmd_conc)
               );

//OS state updates
assign next_state_os_lba0_abs = (controllable_tag_conc==`os_req) ? i_reqLBA0_abs : state_os_lba0_abs;
assign next_state_os_lba1_abs = (controllable_tag_conc==`os_req) ? i_reqLBA1_abs : state_os_lba1_abs;
assign next_state_os_lba2_abs = (controllable_tag_conc==`os_req) ? i_reqLBA2_abs : state_os_lba2_abs;
assign next_state_os_lba3_abs = (controllable_tag_conc==`os_req) ? i_reqLBA3_abs : state_os_lba3_abs;
assign next_state_os_lba4_abs = (controllable_tag_conc==`os_req) ? i_reqLBA4_abs : state_os_lba4_abs;
assign next_state_os_lba5_abs = (controllable_tag_conc==`os_req) ? i_reqLBA5_abs : state_os_lba5_abs;
assign next_state_os_sect0_abs = (controllable_tag_conc==`os_req) ? i_reqSect0_abs : state_os_sect0_abs;
assign next_state_os_sect1_abs = (controllable_tag_conc==`os_req) ? i_reqSect1_abs : state_os_sect1_abs;
assign next_state_os_buf_abs = (controllable_tag_conc==`os_req) ? i_reqBuf_abs : state_os_buf_abs;

assign next_state_osState_conc = (state_osState_conc==`os_init && controllable_tag_conc==`reset) ? `os_reset :
      ((state_osState_conc==`os_reset && nwc && controllable_tag_conc==`class_event) ? `os_write_cache :
      ((state_osState_conc==`os_write_cache && transferMode3 && controllable_tag_conc==`class_event) ? `os_idle :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`read) ? `os_read_pending :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`write) ? `os_write_pending :
      ((state_osState_conc==`os_read_pending && bm_event && !transferCorrect_0 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_read_ack_succ :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_read_ack_fail :
      ((state_osState_conc==`os_write_pending && bm_event && !transferCorrect_1 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_write_ack_succ :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_write_ack_fail :
      ((state_osState_conc==`os_read_ack_succ && controllable_tag_conc==`ack_read_succ) ? `os_idle :
      ((state_osState_conc==`os_read_ack_fail && controllable_tag_conc==`ack_read_fail) ? `os_idle :
      ((state_osState_conc==`os_write_ack_succ && controllable_tag_conc==`ack_write_succ) ? `os_idle :
      ((state_osState_conc==`os_write_ack_fail && controllable_tag_conc==`ack_write_fail) ? `os_idle : state_osState_conc))))))))))))));


// buechi-to-safety construction:                            
assign buechi_satisfied = (state_osState_conc == `os_idle);                          
                            
assign o_err = (fair_cnt >= 4) || controllable_tag_conc >= 10;

initial
 begin
  state_stDMACmd_conc = `wait_bm_ready;
  state_setFeatState_conc = `setFeatIdle;
  state_regFeature0_abs = 0;
  state_regSectors0_abs = 0;
  state_regSectors1_abs = 0;
  state_regLBALow0_abs = 0;
  state_regLBALow1_abs = 0;
  state_regLBAMid0_abs = 0;
  state_regLBAMid1_abs = 0;
  state_regLBAHigh0_abs = 0;
  state_regLBAHigh1_abs = 0;
  state_regDev_LBA_abs = 0;
  state_regCommand_abs = 0;
  state_regBMCommand_Start_abs = 0;
  state_regBMCommand_RW_abs = 0;
  state_bufAddr_abs = 0;
  state_bufSectors_abs = 0;
  state_osState_conc = `os_init;
  state_os_lba0_abs = 0;
  state_os_lba1_abs = 0;
  state_os_lba2_abs = 0;
  state_os_lba3_abs = 0;
  state_os_lba4_abs = 0;
  state_os_lba5_abs = 0;
  state_os_sect0_abs = 0;
  state_os_sect1_abs = 0;
  state_os_buf_abs = 0;
  fair_cnt = 0;
 end

always @(posedge i_clk)
 begin

  if(buechi_satisfied)
   begin
    fair_cnt = 0;
   end
  else
   begin
    fair_cnt = fair_cnt + 1;
   end
 
  //Device state updates:
  state_regFeature0_abs          = next_state_regFeature0_abs ;
  state_regSectors0_abs          = next_state_regSectors0_abs ;
  state_regSectors1_abs          = next_state_regSectors1_abs ;
  state_regLBALow0_abs           = next_state_regLBALow0_abs ;
  state_regLBALow1_abs           = next_state_regLBALow1_abs ;
  state_regLBAMid0_abs           = next_state_regLBAMid0_abs ;
  state_regLBAMid1_abs           = next_state_regLBAMid1_abs ;
  state_regLBAHigh0_abs          = next_state_regLBAHigh0_abs ;
  state_regLBAHigh1_abs          = next_state_regLBAHigh1_abs ;
  state_regDev_LBA_abs           = next_state_regDev_LBA_abs ;
  state_regCommand_abs           = next_state_regCommand_abs ;
  state_regBMCommand_Start_abs   = next_state_regBMCommand_Start_abs ;
  state_regBMCommand_RW_abs      = next_state_regBMCommand_RW_abs ;
  state_bufAddr_abs              = next_state_bufAddr_abs ;
  state_bufSectors_abs           = next_state_bufSectors_abs ;
  state_setFeatState_conc        = next_state_setFeatState_conc ;
  state_stDMACmd_conc            = next_state_stDMACmd_conc ;
  state_os_lba0_abs              = next_state_os_lba0_abs ;
  state_os_lba1_abs              = next_state_os_lba1_abs ;
  state_os_lba2_abs              = next_state_os_lba2_abs ;
  state_os_lba3_abs              = next_state_os_lba3_abs ;
  state_os_lba4_abs              = next_state_os_lba4_abs ;
  state_os_lba5_abs              = next_state_os_lba5_abs ;
  state_os_sect0_abs             = next_state_os_sect0_abs ;
  state_os_sect1_abs             = next_state_os_sect1_abs ;
  state_os_buf_abs               = next_state_os_buf_abs ;
  state_osState_conc             = next_state_osState_conc ;
 end
 
 
endmodule
-------------------------------
#!SYNTCOMP
STATUS : unrealizable
SOLVED_BY : 3/3 [2015-pre-classification]
SOLVED_IN : 0.58677 [2015-pre-classification]
#.

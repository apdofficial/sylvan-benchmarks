aag 1000 52 79 1 869
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106 1
108 365
110 377
112 389
114 405
116 417
118 429
120 441
122 453
124 471
126 483
128 495
130 507
132 519
134 531
136 543
138 555
140 653
142 672
144 690
146 707
148 719
150 731
152 743
154 755
156 767
158 779
160 791
162 803
164 827
166 845
168 863
170 873
172 887
174 909
176 927
178 945
180 1099
182 1127
184 1133
186 1139
188 1145
190 1157
192 1169
194 1181
196 1685
198 1734
200 1772
202 1810
204 1817
206 1823
208 1829
210 1835
212 1841
214 1847
216 1853
218 1859
220 1865
222 1866
224 1874
226 1884
228 1895
230 1901
232 1907
234 1913
236 1919
238 1925
240 1935
242 1941
244 1947
246 1953
248 1959
250 1965
252 1971
254 1977
256 1983
258 1989
260 1995
262 2001
339
264 227 106
266 226 106
268 265 106
270 225 106
272 224 106
274 271 106
276 223 106
278 222 106
280 277 106
282 281 275
284 283 274
286 284 280
288 287 269
290 289 268
292 290 286
294 280 275
296 281 272
298 297 295
300 286 269
302 287 266
304 303 301
306 298 280
308 306 304
310 309 293
312 95 93
314 312 97
316 315 96
318 316 313
320 94 92
322 321 313
324 313 97
326 312 96
328 327 325
330 92 91
332 330 322
334 332 328
336 335 319
338 336 310
340 93 91
342 340 95
344 342 97
346 344 54
348 4 3
350 348 7
352 350 346
354 109 106
356 108 106
358 355 106
360 352 8
362 356 353
364 363 361
366 111 106
368 110 106
370 367 106
372 352 10
374 368 353
376 375 373
378 113 106
380 112 106
382 379 106
384 352 12
386 380 353
388 387 385
390 340 94
392 390 97
394 115 106
396 114 106
398 395 106
400 392 28
402 396 393
404 403 401
406 117 106
408 116 106
410 407 106
412 392 30
414 408 393
416 415 413
418 119 106
420 118 106
422 419 106
424 392 32
426 420 393
428 427 425
430 121 106
432 120 106
434 431 106
436 392 14
438 432 393
440 439 437
442 123 106
444 122 106
446 443 106
448 392 16
450 444 393
452 451 449
454 5 2
456 454 7
458 456 346
460 125 106
462 124 106
464 461 106
466 458 8
468 462 459
470 469 467
472 127 106
474 126 106
476 473 106
478 458 10
480 474 459
482 481 479
484 129 106
486 128 106
488 485 106
490 392 68
492 486 393
494 493 491
496 131 106
498 130 106
500 497 106
502 392 70
504 498 393
506 505 503
508 133 106
510 132 106
512 509 106
514 392 72
516 510 393
518 517 515
520 135 106
522 134 106
524 521 106
526 392 34
528 522 393
530 529 527
532 137 106
534 136 106
536 533 106
538 392 36
540 534 393
542 541 539
544 139 106
546 138 106
548 545 106
550 392 38
552 546 393
554 553 551
556 93 90
558 556 95
560 558 96
562 141 106
564 140 106
566 563 106
568 143 106
570 142 106
572 569 106
574 145 106
576 144 106
578 575 106
580 571 565
582 580 577
584 582 560
586 475 464
588 586 584
590 476 463
592 590 584
594 476 464
596 594 584
598 370 358
600 598 382
602 600 596
604 571 566
606 604 577
608 606 560
610 608 88
612 572 565
614 612 577
616 614 560
618 616 98
620 572 566
622 620 577
624 622 560
626 624 56
628 580 578
630 628 560
632 630 56
634 633 564
636 634 627
638 636 619
640 638 611
642 640 597
644 642 603
646 645 603
648 647 593
650 648 589
652 651 589
654 633 570
656 654 627
658 656 619
660 658 611
662 660 597
664 662 603
666 665 603
668 667 593
670 669 593
672 671 589
674 633 576
676 674 627
678 676 619
680 678 611
682 680 597
684 683 597
686 685 603
688 686 593
690 688 589
692 330 95
694 692 97
696 147 106
698 146 106
700 697 106
702 694 74
704 698 695
706 705 703
708 149 106
710 148 106
712 709 106
714 694 76
716 710 695
718 717 715
720 151 106
722 150 106
724 721 106
726 694 78
728 722 695
730 729 727
732 153 106
734 152 106
736 733 106
738 694 80
740 734 695
742 741 739
744 155 106
746 154 106
748 745 106
750 694 82
752 746 695
754 753 751
756 157 106
758 156 106
760 757 106
762 694 84
764 758 695
766 765 763
768 159 106
770 158 106
772 769 106
774 392 48
776 770 393
778 777 775
780 161 106
782 160 106
784 781 106
786 392 50
788 782 393
790 789 787
792 163 106
794 162 106
796 793 106
798 392 52
800 794 393
802 801 799
804 4 2
806 804 7
808 806 346
810 253 106
812 252 106
814 811 106
816 165 106
818 164 106
820 817 106
822 812 808
824 818 809
826 825 823
828 255 106
830 254 106
832 829 106
834 167 106
836 166 106
838 835 106
840 830 808
842 836 809
844 843 841
846 257 106
848 256 106
850 847 106
852 169 106
854 168 106
856 853 106
858 848 808
860 854 809
862 861 859
864 348 6
866 864 346
868 866 12
870 867 12
872 871 869
874 344 55
876 5 3
878 876 7
880 878 874
882 880 8
884 881 8
886 885 883
888 876 6
890 888 346
892 259 106
894 258 106
896 893 106
898 175 106
900 174 106
902 899 106
904 894 890
906 900 891
908 907 905
910 261 106
912 260 106
914 911 106
916 177 106
918 176 106
920 917 106
922 912 890
924 918 891
926 925 923
928 263 106
930 262 106
932 929 106
934 179 106
936 178 106
938 935 106
940 930 890
942 936 891
944 943 941
946 172 106
948 947 8
950 181 106
952 180 106
954 951 106
956 952 949
958 183 106
960 182 106
962 959 106
964 962 953
966 221 106
968 220 106
970 967 106
972 229 106
974 228 106
976 973 106
978 231 106
980 230 106
982 979 106
984 232 106
986 981 976
988 986 985
990 989 970
992 982 975
994 992 985
996 995 969
998 997 991
1000 698 359
1002 701 356
1004 1003 1001
1006 710 371
1008 713 368
1010 1009 1007
1012 722 383
1014 725 380
1016 1015 1013
1018 1010 1004
1020 1018 1016
1022 1020 998
1024 185 106
1026 184 106
1028 1025 106
1030 1029 734
1032 1026 737
1034 1033 1031
1036 187 106
1038 186 106
1040 1037 106
1042 1041 746
1044 1038 749
1046 1045 1043
1048 189 106
1050 188 106
1052 1049 106
1054 1053 758
1056 1050 761
1058 1057 1055
1060 1046 1034
1062 1060 1058
1064 1062 1022
1066 171 106
1068 1067 106
1070 1068 1064
1072 952 47
1074 1073 47
1076 1071 952
1078 1075 1070
1080 1079 1077
1082 962 954
1084 1082 86
1086 1085 952
1088 1081 964
1090 1086 965
1092 1091 1089
1094 956 880
1096 1093 881
1098 1097 1095
1100 960 949
1102 1101 949
1104 960 47
1106 1105 47
1108 1071 960
1110 1107 1070
1112 1111 1109
1114 1085 960
1116 1113 964
1118 1114 965
1120 1119 1117
1122 1103 880
1124 1121 881
1126 1125 1123
1128 356 352
1130 1026 353
1132 1131 1129
1134 368 352
1136 1038 353
1138 1137 1135
1140 380 352
1142 1050 353
1144 1143 1141
1146 191 106
1148 190 106
1150 1147 106
1152 392 100
1154 1148 393
1156 1155 1153
1158 193 106
1160 192 106
1162 1159 106
1164 392 102
1166 1160 393
1168 1167 1165
1170 195 106
1172 194 106
1174 1171 106
1176 392 104
1178 1172 393
1180 1179 1177
1182 197 106
1184 196 106
1186 1183 106
1188 199 106
1190 198 106
1192 1189 106
1194 201 106
1196 200 106
1198 1195 106
1200 203 106
1202 202 106
1204 1201 106
1206 1191 1185
1208 1206 1197
1210 1208 1203
1212 92 90
1214 1212 95
1216 1214 97
1218 1216 1210
1220 1191 1186
1222 1220 1197
1224 1222 1203
1226 614 98
1228 1226 1224
1230 1228 560
1232 1192 1185
1234 1232 1197
1236 1234 1203
1238 628 56
1240 1238 1236
1242 1240 560
1244 1192 1186
1246 1244 1197
1248 1246 1203
1250 1248 392
1252 1250 67
1254 1250 66
1256 1206 1198
1258 1256 1203
1260 1258 1084
1262 812 525
1264 815 522
1266 1265 1263
1268 830 537
1270 833 534
1272 1271 1269
1274 848 549
1276 851 546
1278 1277 1275
1280 1272 1266
1282 1280 1278
1284 235 106
1286 234 106
1288 1285 106
1290 1289 818
1292 1286 821
1294 1293 1291
1296 237 106
1298 236 106
1300 1297 106
1302 1301 836
1304 1298 839
1306 1305 1303
1308 239 106
1310 238 106
1312 1309 106
1314 1313 854
1316 1310 857
1318 1317 1315
1320 1306 1294
1322 1320 1318
1324 1322 1282
1326 1151 894
1328 1148 897
1330 1329 1327
1332 1163 912
1334 1160 915
1336 1335 1333
1338 1175 930
1340 1172 933
1342 1341 1339
1344 1336 1330
1346 1344 1342
1348 1346 1324
1350 900 399
1352 903 396
1354 1353 1351
1356 918 411
1358 921 408
1360 1359 1357
1362 936 423
1364 939 420
1366 1365 1363
1368 1360 1354
1370 1368 1366
1372 1370 1348
1374 215 106
1376 214 106
1378 1375 106
1380 241 106
1382 240 106
1384 1381 106
1386 1382 1379
1388 1385 1376
1390 1389 1387
1392 217 106
1394 216 106
1396 1393 106
1398 243 106
1400 242 106
1402 1399 106
1404 1400 1397
1406 1403 1394
1408 1407 1405
1410 219 106
1412 218 106
1414 1411 106
1416 245 106
1418 244 106
1420 1417 106
1422 1418 1415
1424 1421 1412
1426 1425 1423
1428 1408 1390
1430 1428 1426
1432 1430 1372
1434 247 106
1436 246 106
1438 1435 106
1440 1436 773
1442 1439 770
1444 1443 1441
1446 249 106
1448 248 106
1450 1447 106
1452 1448 785
1454 1451 782
1456 1455 1453
1458 251 106
1460 250 106
1462 1459 106
1464 1460 797
1466 1463 794
1468 1467 1465
1470 1456 1444
1472 1470 1468
1474 1472 1432
1476 489 356
1478 486 359
1480 1479 1477
1482 501 368
1484 498 371
1486 1485 1483
1488 513 380
1490 510 383
1492 1491 1489
1494 1486 1480
1496 1494 1492
1498 1496 1474
1500 209 106
1502 208 106
1504 1501 106
1506 1505 1026
1508 1502 1029
1510 1509 1507
1512 211 106
1514 210 106
1516 1513 106
1518 1517 1038
1520 1514 1041
1522 1521 1519
1524 213 106
1526 212 106
1528 1525 106
1530 1529 1050
1532 1526 1053
1534 1533 1531
1536 1522 1510
1538 1536 1534
1540 1538 1498
1542 205 106
1544 204 106
1546 1543 106
1548 1544 435
1550 1547 432
1552 1551 1549
1554 207 106
1556 206 106
1558 1555 106
1560 1556 447
1562 1559 444
1564 1563 1561
1566 1564 1552
1568 1566 1540
1570 1568 969
1572 1571 1260
1574 1572 560
1576 1260 58
1578 1576 560
1580 1260 59
1582 1580 560
1584 1220 1198
1586 1584 1203
1588 1586 1084
1590 1568 970
1592 1591 1588
1594 1592 560
1596 1588 58
1598 1596 560
1600 1588 59
1602 1600 560
1604 1232 1198
1606 1604 1203
1608 556 94
1610 1608 97
1612 1610 1606
1614 1244 1198
1616 1614 1203
1618 330 94
1620 1618 97
1622 1620 1616
1624 1208 1204
1626 1212 94
1628 1626 97
1630 1628 1624
1632 1222 1204
1634 342 96
1636 1634 1632
1638 1637 1184
1640 1639 1637
1642 1641 1631
1644 1643 1631
1646 1645 1623
1648 1647 1623
1650 1649 1613
1652 1651 1613
1654 1653 1603
1656 1655 1603
1658 1657 1599
1660 1658 1595
1662 1660 1583
1664 1663 1583
1666 1665 1579
1668 1666 1575
1670 1668 1255
1672 1671 1255
1674 1673 1253
1676 1674 1243
1678 1677 1243
1680 1679 1231
1682 1680 1219
1684 1683 1219
1686 1637 1190
1688 1687 1637
1690 1689 1631
1692 1691 1631
1694 1693 1623
1696 1695 1623
1698 1697 1613
1700 1699 1613
1702 1701 1603
1704 1702 1599
1706 1704 1595
1708 1707 1595
1710 1709 1583
1712 1711 1583
1714 1713 1579
1716 1715 1579
1718 1717 1575
1720 1719 1575
1722 1721 1255
1724 1722 1253
1726 1724 1243
1728 1727 1243
1730 1729 1231
1732 1731 1231
1734 1733 1219
1736 1637 1196
1738 1736 1631
1740 1738 1623
1742 1740 1613
1744 1742 1603
1746 1744 1599
1748 1746 1595
1750 1748 1583
1752 1751 1583
1754 1753 1579
1756 1755 1579
1758 1757 1575
1760 1758 1255
1762 1761 1255
1764 1763 1253
1766 1765 1253
1768 1767 1243
1770 1768 1231
1772 1770 1219
1774 1637 1202
1776 1774 1631
1778 1776 1623
1780 1778 1613
1782 1780 1603
1784 1783 1603
1786 1785 1599
1788 1787 1599
1790 1789 1595
1792 1791 1595
1794 1793 1583
1796 1794 1579
1798 1796 1575
1800 1799 1575
1802 1801 1255
1804 1802 1253
1806 1804 1243
1808 1806 1231
1810 1808 1219
1812 694 24
1814 1544 695
1816 1815 1813
1818 694 26
1820 1556 695
1822 1821 1819
1824 392 60
1826 1502 393
1828 1827 1825
1830 392 62
1832 1514 393
1834 1833 1831
1836 392 64
1838 1526 393
1840 1839 1837
1842 392 40
1844 1376 393
1846 1845 1843
1848 392 42
1850 1394 393
1852 1851 1849
1854 392 44
1856 1412 393
1858 1857 1855
1860 880 10
1862 881 10
1864 1863 1861
1866 1249 281
1868 278 275
1870 279 272
1872 1871 1869
1874 1873 1249
1876 278 272
1878 1876 269
1880 1877 266
1882 1881 1879
1884 1883 1249
1886 804 6
1888 1886 346
1890 1888 8
1892 1889 974
1894 1893 1891
1896 1888 10
1898 1889 980
1900 1899 1897
1902 1888 12
1904 1889 984
1906 1905 1903
1908 392 18
1910 1286 393
1912 1911 1909
1914 392 20
1916 1298 393
1918 1917 1915
1920 392 22
1922 1310 393
1924 1923 1921
1926 454 6
1928 1926 346
1930 1928 8
1932 1929 1382
1934 1933 1931
1936 1928 10
1938 1929 1400
1940 1939 1937
1942 1928 12
1944 1929 1418
1946 1945 1943
1948 1928 1382
1950 1929 1436
1952 1951 1949
1954 1928 1400
1956 1929 1448
1958 1957 1955
1960 1928 1418
1962 1929 1460
1964 1963 1961
1966 808 8
1968 812 809
1970 1969 1967
1972 808 10
1974 830 809
1976 1975 1973
1978 808 12
1980 848 809
1982 1981 1979
1984 890 8
1986 894 891
1988 1987 1985
1990 890 10
1992 912 891
1994 1993 1991
1996 890 12
1998 930 891
2000 1999 1997
i0 controllable_addr_abs<0>
i1 controllable_addr_abs<1>
i2 controllable_addr_abs<2>
i3 controllable_write8_val_abs<0>
i4 controllable_write8_val_abs<1>
i5 controllable_write8_val_abs<2>
i6 i_reqBuf_abs<0>
i7 i_reqBuf_abs<1>
i8 i_reqLBA1_abs<0>
i9 i_reqLBA1_abs<1>
i10 i_reqLBA1_abs<2>
i11 controllable_fillPrdAddr_abs<0>
i12 controllable_fillPrdAddr_abs<1>
i13 i_reqLBA3_abs<0>
i14 i_reqLBA3_abs<1>
i15 i_reqLBA3_abs<2>
i16 i_reqLBA0_abs<0>
i17 i_reqLBA0_abs<1>
i18 i_reqLBA0_abs<2>
i19 i_reqLBA4_abs<0>
i20 i_reqLBA4_abs<1>
i21 i_reqLBA4_abs<2>
i22 controllable_dmaStartClass_conc
i23 i_reqLBA5_abs<0>
i24 i_reqLBA5_abs<1>
i25 i_reqLBA5_abs<2>
i26 controllable_bank_abs
i27 controllable_featXFRClass_conc
i28 i_transSuccess_conc
i29 i_reqSect1_abs<0>
i30 i_reqSect1_abs<1>
i31 i_reqSect1_abs<2>
i32 i_osReqType_conc
i33 i_reqSect0_abs<0>
i34 i_reqSect0_abs<1>
i35 i_reqSect0_abs<2>
i36 controllable_fillPrdNSect_abs<0>
i37 controllable_fillPrdNSect_abs<1>
i38 controllable_fillPrdNSect_abs<2>
i39 controllable_fillPrdNSect_abs<3>
i40 controllable_fillPrdNSect_abs<4>
i41 controllable_fillPrdNSect_abs<5>
i42 controllable_busMasterClass_conc
i43 controllable_featWCClass_conc
i44 controllable_tag_conc<0>
i45 controllable_tag_conc<1>
i46 controllable_tag_conc<2>
i47 controllable_tag_conc<3>
i48 controllable_featNWCClass_conc
i49 i_reqLBA2_abs<0>
i50 i_reqLBA2_abs<1>
i51 i_reqLBA2_abs<2>
l0 n107
l1 state_regSectors0_abs<0>_out
l2 state_regSectors0_abs<1>_out
l3 state_regSectors0_abs<2>_out
l4 state_os_lba3_abs<0>_out
l5 state_os_lba3_abs<1>_out
l6 state_os_lba3_abs<2>_out
l7 state_os_buf_abs<0>_out
l8 state_os_buf_abs<1>_out
l9 state_regFeature0_abs<0>_out
l10 state_regFeature0_abs<1>_out
l11 state_os_sect0_abs<0>_out
l12 state_os_sect0_abs<1>_out
l13 state_os_sect0_abs<2>_out
l14 state_os_lba0_abs<0>_out
l15 state_os_lba0_abs<1>_out
l16 state_os_lba0_abs<2>_out
l17 state_setFeatState_conc<0>_out
l18 state_setFeatState_conc<1>_out
l19 state_setFeatState_conc<2>_out
l20 state_bufSectors_abs<0>_out
l21 state_bufSectors_abs<1>_out
l22 state_bufSectors_abs<2>_out
l23 state_bufSectors_abs<3>_out
l24 state_bufSectors_abs<4>_out
l25 state_bufSectors_abs<5>_out
l26 state_os_lba5_abs<0>_out
l27 state_os_lba5_abs<1>_out
l28 state_os_lba5_abs<2>_out
l29 state_regLBALow1_abs<0>_out
l30 state_regLBALow1_abs<1>_out
l31 state_regLBALow1_abs<2>_out
l32 state_regDev_LBA_abs_out
l33 state_regBMCommand_Start_abs_out
l34 state_regLBAMid1_abs<0>_out
l35 state_regLBAMid1_abs<1>_out
l36 state_regLBAMid1_abs<2>_out
l37 state_stDMACmd_conc<0>_out
l38 state_stDMACmd_conc<1>_out
l39 state_regSectors1_abs<0>_out
l40 state_regSectors1_abs<1>_out
l41 state_regSectors1_abs<2>_out
l42 state_os_lba2_abs<0>_out
l43 state_os_lba2_abs<1>_out
l44 state_os_lba2_abs<2>_out
l45 state_osState_conc<0>_out
l46 state_osState_conc<1>_out
l47 state_osState_conc<2>_out
l48 state_osState_conc<3>_out
l49 state_bufAddr_abs<0>_out
l50 state_bufAddr_abs<1>_out
l51 state_os_sect1_abs<0>_out
l52 state_os_sect1_abs<1>_out
l53 state_os_sect1_abs<2>_out
l54 state_os_lba4_abs<0>_out
l55 state_os_lba4_abs<1>_out
l56 state_os_lba4_abs<2>_out
l57 state_regBMCommand_RW_abs_out
l58 fair_cnt<0>_out
l59 fair_cnt<1>_out
l60 fair_cnt<2>_out
l61 state_regCommand_abs<0>_out
l62 state_regCommand_abs<1>_out
l63 state_regCommand_abs<2>_out
l64 state_os_lba1_abs<0>_out
l65 state_os_lba1_abs<1>_out
l66 state_os_lba1_abs<2>_out
l67 state_regLBAHigh0_abs<0>_out
l68 state_regLBAHigh0_abs<1>_out
l69 state_regLBAHigh0_abs<2>_out
l70 state_regLBAHigh1_abs<0>_out
l71 state_regLBAHigh1_abs<1>_out
l72 state_regLBAHigh1_abs<2>_out
l73 state_regLBALow0_abs<0>_out
l74 state_regLBALow0_abs<1>_out
l75 state_regLBALow0_abs<2>_out
l76 state_regLBAMid0_abs<0>_out
l77 state_regLBAMid0_abs<1>_out
l78 state_regLBAMid0_abs<2>_out
o0 o_err
c
ide_hard_drive_controller_2
This file was written by ABC on Tue Mar 11 20:24:24 2014
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv driver_c7.v   ---gives--> driver_c7.mv
> abc -c "read_blif_mv driver_c7.mv; write_aiger -s driver_c7n.aig"   ---gives--> driver_c7n.aig
> aigtoaig driver_c7n.aig driver_c7n.aag   ---gives--> driver_c7n.aag (this file)
Content of driver_c7.v:
// IDE hard drive controller specification and operating system interface
// specification for device driver synthesis.
// This file describes a GR(1) game played by a device driver for an IDE hard
// disk against its environment consisting of the hard disk and operating
// system.

`define WIDTH1 2
`define WIDTH2 1

`define CMD_READ_DMA_EXT  1
`define CMD_WRITE_DMA_EXT 2
`define FEAT_WC           1
`define FEAT_NWC          2
`define FEAT_XFR_MODE     3
`define XM_ULTRA_DMA      7

`define RCMD              1
`define REG_FEATURE0      1
`define REG_SECTORS       2
`define REG_LBA_LOW       3
`define REG_LBA_MID       4
`define REG_LBA_HIGH      5
`define REG_DEV           6
`define REG_ERRCMD        7

`define RDMA              0
`define REG_BM_COMMAND    0

//typedef enum {read=0, write=1} i_osReqType_enum;
`define read              0
`define write             1

//typedef enum {write8, write32, fillPrd, reset, os_req, ack_read_succ, ack_read_fail, ack_write_succ, ack_write_fail, class_event} controllable_tag_enum;
`define write8            0
`define write32           1
`define fillPrd           2
`define reset             3
`define os_req            4
`define ack_read_succ     5
`define ack_read_fail     6
`define ack_write_succ    7
`define ack_write_fail    8
`define class_event       9

//typedef enum {wait_bm_ready=0, dma_read=1, bm_read_prd=2, bm_ready=3} state_stDMACmd_enum;
`define wait_bm_ready     0
`define dma_read          1
`define bm_read_prd       2
`define bm_ready          3


//typedef enum {setFeatIdle=0, setFeatWC=1, setFeatNWC=2, setFeatXFR0=3, setFeatXFR1=4} state_setFeatState_enum;
`define setFeatIdle       0
`define setFeatWC         1
`define setFeatNWC        2
`define setFeatXFR0       3
`define setFeatXFR1       4

//typedef enum {os_init=0, os_reset=1, os_write_cache=2, os_idle=3, os_read_pending=4, os_write_pending=5, os_read_ack_succ=6, os_read_ack_fail=7, os_write_ack_succ=8, os_write_ack_fail=9, os_error=10} state_osState_enum;
`define os_init           0
`define os_reset          1
`define os_write_cache    2
`define os_idle           3
`define os_read_pending   4
`define os_write_pending  5
`define os_read_ack_succ  6
`define os_read_ack_fail  7
`define os_write_ack_succ 8
`define os_write_ack_fail 9
`define os_error          10

module ide_hard_drive_controller_2(
        o_err,
        i_clk,
        i_osReqType_conc,
        i_reqLBA0_abs,
        i_reqLBA1_abs,
        i_reqLBA2_abs,
        i_reqLBA3_abs,
        i_reqLBA4_abs,
        i_reqLBA5_abs,
        i_reqSect0_abs,
        i_reqSect1_abs,
        i_reqBuf_abs,
        i_transSuccess_conc,
        controllable_tag_conc,
        controllable_bank_abs,
        controllable_addr_abs,
        controllable_write8_val_abs,
        controllable_fillPrdAddr_abs,
        controllable_fillPrdNSect_abs,
        controllable_featWCClass_conc,
        controllable_featNWCClass_conc,
        controllable_featXFRClass_conc,
        controllable_busMasterClass_conc,
        controllable_dmaStartClass_conc );

input i_clk;
input i_osReqType_conc ;
input [`WIDTH1:0] i_reqLBA0_abs ;
input [`WIDTH1:0] i_reqLBA1_abs ;
input [`WIDTH1:0] i_reqLBA2_abs ;
input [`WIDTH1:0] i_reqLBA3_abs ;
input [`WIDTH1:0] i_reqLBA4_abs ;
input [`WIDTH1:0] i_reqLBA5_abs ;
input [`WIDTH1:0] i_reqSect0_abs ;
input [`WIDTH1:0] i_reqSect1_abs ;
input [`WIDTH2:0] i_reqBuf_abs ;
input i_transSuccess_conc ;
input [3:0] controllable_tag_conc ;
input controllable_bank_abs ;
input [2:0] controllable_addr_abs ;
input [`WIDTH1:0] controllable_write8_val_abs ;
input [`WIDTH2:0] controllable_fillPrdAddr_abs ;
input [5:0] controllable_fillPrdNSect_abs ;
input controllable_featWCClass_conc ;
input controllable_featNWCClass_conc ;
input controllable_featXFRClass_conc ;
input controllable_busMasterClass_conc ;
input controllable_dmaStartClass_conc ;
output o_err;

reg [1:0] state_stDMACmd_conc ;
reg [2:0] state_setFeatState_conc ;
reg [1:0] state_regFeature0_abs ;
reg [`WIDTH1:0] state_regSectors0_abs ;
reg [`WIDTH1:0] state_regSectors1_abs ;
reg [`WIDTH1:0] state_regLBALow0_abs ;
reg [`WIDTH1:0] state_regLBALow1_abs ;
reg [`WIDTH1:0] state_regLBAMid0_abs ;
reg [`WIDTH1:0] state_regLBAMid1_abs ;
reg [`WIDTH1:0] state_regLBAHigh0_abs ;
reg [`WIDTH1:0] state_regLBAHigh1_abs ;
reg state_regDev_LBA_abs ;
reg [`WIDTH1:0] state_regCommand_abs ;
reg state_regBMCommand_Start_abs ;
reg state_regBMCommand_RW_abs ;
reg [`WIDTH2:0] state_bufAddr_abs ;
reg [5:0] state_bufSectors_abs ;

reg [3:0] state_osState_conc ;
reg [`WIDTH1:0] state_os_lba0_abs ;
reg [`WIDTH1:0] state_os_lba1_abs ;
reg [`WIDTH1:0] state_os_lba2_abs ;
reg [`WIDTH1:0] state_os_lba3_abs ;
reg [`WIDTH1:0] state_os_lba4_abs ;
reg [`WIDTH1:0] state_os_lba5_abs ;
reg [`WIDTH1:0] state_os_sect0_abs ;
reg [`WIDTH1:0] state_os_sect1_abs ;
reg [`WIDTH2:0] state_os_buf_abs ;

reg [2:0] fair_cnt;

wire transferMode3;
wire nwc;
wire bm_event;
wire transferCorrect;
wire transferCorrect_0;
wire transferCorrect_1;
wire buechi_satisfied;
wire [1:0] next_state_stDMACmd_conc ;
wire [2:0] next_state_setFeatState_conc ;
wire [1:0] next_state_regFeature0_abs ;
wire [`WIDTH1:0] next_state_regSectors0_abs ;
wire [`WIDTH1:0] next_state_regSectors1_abs ;
wire [`WIDTH1:0] next_state_regLBALow0_abs ;
wire [`WIDTH1:0] next_state_regLBALow1_abs ;
wire [`WIDTH1:0] next_state_regLBAMid0_abs ;
wire [`WIDTH1:0] next_state_regLBAMid1_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh0_abs ;
wire [`WIDTH1:0] next_state_regLBAHigh1_abs ;
wire next_state_regDev_LBA_abs ;
wire [`WIDTH1:0] next_state_regCommand_abs ;
wire next_state_regBMCommand_Start_abs ;
wire next_state_regBMCommand_RW_abs ;
wire [`WIDTH2:0] next_state_bufAddr_abs ;
wire [5:0] next_state_bufSectors_abs ;

wire [3:0] next_state_osState_conc ;
wire [`WIDTH1:0] next_state_os_lba0_abs ;
wire [`WIDTH1:0] next_state_os_lba1_abs ;
wire [`WIDTH1:0] next_state_os_lba2_abs ;
wire [`WIDTH1:0] next_state_os_lba3_abs ;
wire [`WIDTH1:0] next_state_os_lba4_abs ;
wire [`WIDTH1:0] next_state_os_lba5_abs ;
wire [`WIDTH1:0] next_state_os_sect0_abs ;
wire [`WIDTH1:0] next_state_os_sect1_abs ;
wire [`WIDTH2:0] next_state_os_buf_abs ;

// some abbreviations:
assign transferMode3 = (state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1);
assign nwc =           (state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1);
assign bm_event = (state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1);
assign transferCorrect = (state_os_lba0_abs==state_regLBALow0_abs    &&
                          state_os_lba1_abs==state_regLBALow1_abs    &&
                          state_os_lba2_abs==state_regLBAMid0_abs    &&
                          state_os_lba3_abs==state_regLBAMid1_abs    &&
                          state_os_lba4_abs==state_regLBAHigh0_abs   &&
                          state_os_lba5_abs==state_regLBAHigh1_abs   &&
                          state_os_sect0_abs==state_regSectors0_abs  &&
                          state_os_sect1_abs==state_regSectors1_abs  &&
                          state_os_buf_abs==state_bufAddr_abs);
assign transferCorrect_0 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==0);
assign transferCorrect_1 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==1);


// state updates:
  //Device state updates:
assign next_state_regFeature0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_FEATURE0) ? controllable_write8_val_abs  : state_regFeature0_abs;
assign next_state_regSectors0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? controllable_write8_val_abs  : state_regSectors0_abs;
assign next_state_regSectors1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? state_regSectors0_abs : state_regSectors1_abs;
assign next_state_regLBALow0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? controllable_write8_val_abs  : state_regLBALow0_abs;
assign next_state_regLBALow1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? state_regLBALow0_abs  : state_regLBALow1_abs;
assign next_state_regLBAMid0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? controllable_write8_val_abs  : state_regLBAMid0_abs;
assign next_state_regLBAMid1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_MID)  ? state_regLBAMid0_abs  : state_regLBAMid1_abs;
assign next_state_regLBAHigh0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? controllable_write8_val_abs  : state_regLBAHigh0_abs;
assign next_state_regLBAHigh1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_HIGH) ? state_regLBAHigh0_abs : state_regLBAHigh1_abs;
assign next_state_regDev_LBA_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_DEV)      ? controllable_write8_val_abs[2:2] : state_regDev_LBA_abs;
assign next_state_regCommand_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_ERRCMD)   ? controllable_write8_val_abs  : state_regCommand_abs;
assign next_state_regBMCommand_Start_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[0:0] : state_regBMCommand_Start_abs;
assign next_state_regBMCommand_RW_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[1:1] : state_regBMCommand_RW_abs;
assign next_state_bufAddr_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdAddr_abs : state_bufAddr_abs;
assign next_state_bufSectors_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdNSect_abs : state_bufSectors_abs;

assign next_state_setFeatState_conc = (controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_WC) ? `setFeatWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_NWC) ? `setFeatNWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE && state_regSectors0_abs==`XM_ULTRA_DMA) ? `setFeatXFR0 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE) ? `setFeatXFR1 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatWC   && controllable_featWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR0 && controllable_featXFRClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1) ? `setFeatIdle : state_setFeatState_conc)))))));

assign next_state_stDMACmd_conc = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ?
               (
                 (state_regBMCommand_Start_abs==0 && controllable_write8_val_abs[0:0]==1) ? `bm_read_prd : state_stDMACmd_conc
               ) :
               (
                 (state_stDMACmd_conc==`bm_read_prd) ?
                 (((state_regBMCommand_RW_abs == 1 && state_regCommand_abs != `CMD_READ_DMA_EXT) || (state_regBMCommand_RW_abs == 0 && state_regCommand_abs != `CMD_WRITE_DMA_EXT) || (state_regSectors0_abs != state_bufSectors_abs[`WIDTH1:0]) || (state_regSectors1_abs != state_bufSectors_abs[5:3]) || state_regDev_LBA_abs != 1) ? state_stDMACmd_conc : ((controllable_dmaStartClass_conc==1) ? `bm_ready : state_stDMACmd_conc)) :
                 ((state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1) ? `wait_bm_ready : state_stDMACmd_conc)
               );

//OS state updates
assign next_state_os_lba0_abs = (controllable_tag_conc==`os_req) ? i_reqLBA0_abs : state_os_lba0_abs;
assign next_state_os_lba1_abs = (controllable_tag_conc==`os_req) ? i_reqLBA1_abs : state_os_lba1_abs;
assign next_state_os_lba2_abs = (controllable_tag_conc==`os_req) ? i_reqLBA2_abs : state_os_lba2_abs;
assign next_state_os_lba3_abs = (controllable_tag_conc==`os_req) ? i_reqLBA3_abs : state_os_lba3_abs;
assign next_state_os_lba4_abs = (controllable_tag_conc==`os_req) ? i_reqLBA4_abs : state_os_lba4_abs;
assign next_state_os_lba5_abs = (controllable_tag_conc==`os_req) ? i_reqLBA5_abs : state_os_lba5_abs;
assign next_state_os_sect0_abs = (controllable_tag_conc==`os_req) ? i_reqSect0_abs : state_os_sect0_abs;
assign next_state_os_sect1_abs = (controllable_tag_conc==`os_req) ? i_reqSect1_abs : state_os_sect1_abs;
assign next_state_os_buf_abs = (controllable_tag_conc==`os_req) ? i_reqBuf_abs : state_os_buf_abs;

assign next_state_osState_conc = (state_osState_conc==`os_init && controllable_tag_conc==`reset) ? `os_reset :
      ((state_osState_conc==`os_reset && nwc && controllable_tag_conc==`class_event) ? `os_write_cache :
      ((state_osState_conc==`os_write_cache && transferMode3 && controllable_tag_conc==`class_event) ? `os_idle :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`read) ? `os_read_pending :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`write) ? `os_write_pending :
      ((state_osState_conc==`os_read_pending && bm_event && !transferCorrect_0 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_read_ack_succ :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_read_ack_fail :
      ((state_osState_conc==`os_write_pending && bm_event && !transferCorrect_1 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_write_ack_succ :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_write_ack_fail :
      ((state_osState_conc==`os_read_ack_succ && controllable_tag_conc==`ack_read_succ) ? `os_idle :
      ((state_osState_conc==`os_read_ack_fail && controllable_tag_conc==`ack_read_fail) ? `os_idle :
      ((state_osState_conc==`os_write_ack_succ && controllable_tag_conc==`ack_write_succ) ? `os_idle :
      ((state_osState_conc==`os_write_ack_fail && controllable_tag_conc==`ack_write_fail) ? `os_idle : state_osState_conc))))))))))))));


// buechi-to-safety construction:                            
assign buechi_satisfied = (state_osState_conc == `os_idle);                          
                            
assign o_err = (fair_cnt >= 7) || controllable_tag_conc >= 10;

initial
 begin
  state_stDMACmd_conc = `wait_bm_ready;
  state_setFeatState_conc = `setFeatIdle;
  state_regFeature0_abs = 0;
  state_regSectors0_abs = 0;
  state_regSectors1_abs = 0;
  state_regLBALow0_abs = 0;
  state_regLBALow1_abs = 0;
  state_regLBAMid0_abs = 0;
  state_regLBAMid1_abs = 0;
  state_regLBAHigh0_abs = 0;
  state_regLBAHigh1_abs = 0;
  state_regDev_LBA_abs = 0;
  state_regCommand_abs = 0;
  state_regBMCommand_Start_abs = 0;
  state_regBMCommand_RW_abs = 0;
  state_bufAddr_abs = 0;
  state_bufSectors_abs = 0;
  state_osState_conc = `os_init;
  state_os_lba0_abs = 0;
  state_os_lba1_abs = 0;
  state_os_lba2_abs = 0;
  state_os_lba3_abs = 0;
  state_os_lba4_abs = 0;
  state_os_lba5_abs = 0;
  state_os_sect0_abs = 0;
  state_os_sect1_abs = 0;
  state_os_buf_abs = 0;
  fair_cnt = 0;
 end

always @(posedge i_clk)
 begin

  if(buechi_satisfied)
   begin
    fair_cnt = 0;
   end
  else
   begin
    fair_cnt = fair_cnt + 1;
   end
 
  //Device state updates:
  state_regFeature0_abs          = next_state_regFeature0_abs ;
  state_regSectors0_abs          = next_state_regSectors0_abs ;
  state_regSectors1_abs          = next_state_regSectors1_abs ;
  state_regLBALow0_abs           = next_state_regLBALow0_abs ;
  state_regLBALow1_abs           = next_state_regLBALow1_abs ;
  state_regLBAMid0_abs           = next_state_regLBAMid0_abs ;
  state_regLBAMid1_abs           = next_state_regLBAMid1_abs ;
  state_regLBAHigh0_abs          = next_state_regLBAHigh0_abs ;
  state_regLBAHigh1_abs          = next_state_regLBAHigh1_abs ;
  state_regDev_LBA_abs           = next_state_regDev_LBA_abs ;
  state_regCommand_abs           = next_state_regCommand_abs ;
  state_regBMCommand_Start_abs   = next_state_regBMCommand_Start_abs ;
  state_regBMCommand_RW_abs      = next_state_regBMCommand_RW_abs ;
  state_bufAddr_abs              = next_state_bufAddr_abs ;
  state_bufSectors_abs           = next_state_bufSectors_abs ;
  state_setFeatState_conc        = next_state_setFeatState_conc ;
  state_stDMACmd_conc            = next_state_stDMACmd_conc ;
  state_os_lba0_abs              = next_state_os_lba0_abs ;
  state_os_lba1_abs              = next_state_os_lba1_abs ;
  state_os_lba2_abs              = next_state_os_lba2_abs ;
  state_os_lba3_abs              = next_state_os_lba3_abs ;
  state_os_lba4_abs              = next_state_os_lba4_abs ;
  state_os_lba5_abs              = next_state_os_lba5_abs ;
  state_os_sect0_abs             = next_state_os_sect0_abs ;
  state_os_sect1_abs             = next_state_os_sect1_abs ;
  state_os_buf_abs               = next_state_os_buf_abs ;
  state_osState_conc             = next_state_osState_conc ;
 end
 
 
endmodule
-------------------------------
#!SYNTCOMP
SOLVED_BY : 2/3 [2015-pre-classification], 3/4 [SYNTCOMP2015-SyntSeq], 1/3 [SYNTCOMP2015-SyntPar], 6/7 [SYNTCOMP2015-RealSeq], 2/4 [SYNTCOMP2015-RealPar], 1/4 [2017-pre-classification], 9/10 [SYNTCOMP2017-RealSeq], 5/6 [SYNTCOMP2017-RealPar], 4/6 [SYNTCOMP2017-SyntSeq], 3/4 [SYNTCOMP2017-SyntPar]
SOLVED_IN : 928.843 [2015-pre-classification], 0.184303 [SYNTCOMP2015-RealSeq], 0.188566 [SYNTCOMP2015-RealPar], 0.084 [SYNTCOMP2017-RealSeq], 0.123411 [SYNTCOMP2017-RealPar]
STATUS : unrealizable
REF_SIZE : 0
#.

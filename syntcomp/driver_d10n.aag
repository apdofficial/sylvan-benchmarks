aag 775 40 56 1 679
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82 1
84 297
86 309
88 321
90 337
92 349
94 367
96 379
98 391
100 403
102 415
104 427
106 439
108 451
110 549
112 568
114 586
116 603
118 615
120 627
122 639
124 651
126 663
128 687
130 705
132 723
134 733
136 747
138 901
140 929
142 935
144 941
146 947
148 1301
150 1350
152 1388
154 1426
156 1433
158 1439
160 1445
162 1451
164 1457
166 1463
168 1464
170 1472
172 1482
174 1492
176 1503
178 1509
180 1515
182 1521
184 1527
186 1533
188 1539
190 1545
192 1551
271
194 175 82
196 174 82
198 195 82
200 173 82
202 172 82
204 201 82
206 171 82
208 170 82
210 207 82
212 169 82
214 168 82
216 213 82
218 211 205
220 218 199
222 221 198
224 222 219
226 210 202
228 227 219
230 219 199
232 218 196
234 233 231
236 215 210
238 236 228
240 238 234
242 241 225
244 77 75
246 244 79
248 247 78
250 248 245
252 76 74
254 253 245
256 245 79
258 244 78
260 259 257
262 74 73
264 262 254
266 264 260
268 267 251
270 268 242
272 75 73
274 272 77
276 274 79
278 276 36
280 4 3
282 280 7
284 282 278
286 85 82
288 84 82
290 287 82
292 284 8
294 288 285
296 295 293
298 87 82
300 86 82
302 299 82
304 284 10
306 300 285
308 307 305
310 89 82
312 88 82
314 311 82
316 284 12
318 312 285
320 319 317
322 272 76
324 322 79
326 91 82
328 90 82
330 327 82
332 324 14
334 328 325
336 335 333
338 93 82
340 92 82
342 339 82
344 324 16
346 340 325
348 347 345
350 5 2
352 350 7
354 352 278
356 95 82
358 94 82
360 357 82
362 354 8
364 358 355
366 365 363
368 97 82
370 96 82
372 369 82
374 354 10
376 370 355
378 377 375
380 99 82
382 98 82
384 381 82
386 324 50
388 382 325
390 389 387
392 101 82
394 100 82
396 393 82
398 324 52
400 394 325
402 401 399
404 103 82
406 102 82
408 405 82
410 324 54
412 406 325
414 413 411
416 105 82
418 104 82
420 417 82
422 324 28
424 418 325
426 425 423
428 107 82
430 106 82
432 429 82
434 324 30
436 430 325
438 437 435
440 109 82
442 108 82
444 441 82
446 324 32
448 442 325
450 449 447
452 75 72
454 452 77
456 454 78
458 111 82
460 110 82
462 459 82
464 113 82
466 112 82
468 465 82
470 115 82
472 114 82
474 471 82
476 467 461
478 476 473
480 478 456
482 371 360
484 482 480
486 372 359
488 486 480
490 372 360
492 490 480
494 302 290
496 494 314
498 496 492
500 467 462
502 500 473
504 502 456
506 504 70
508 468 461
510 508 473
512 510 456
514 512 80
516 468 462
518 516 473
520 518 456
522 520 38
524 476 474
526 524 456
528 526 38
530 529 460
532 530 523
534 532 515
536 534 507
538 536 493
540 538 499
542 541 499
544 543 489
546 544 485
548 547 485
550 529 466
552 550 523
554 552 515
556 554 507
558 556 493
560 558 499
562 561 499
564 563 489
566 565 489
568 567 485
570 529 472
572 570 523
574 572 515
576 574 507
578 576 493
580 579 493
582 581 499
584 582 489
586 584 485
588 262 77
590 588 79
592 117 82
594 116 82
596 593 82
598 590 56
600 594 591
602 601 599
604 119 82
606 118 82
608 605 82
610 590 58
612 606 591
614 613 611
616 121 82
618 120 82
620 617 82
622 590 60
624 618 591
626 625 623
628 123 82
630 122 82
632 629 82
634 590 62
636 630 591
638 637 635
640 125 82
642 124 82
644 641 82
646 590 64
648 642 591
650 649 647
652 127 82
654 126 82
656 653 82
658 590 66
660 654 591
662 661 659
664 4 2
666 664 7
668 666 278
670 189 82
672 188 82
674 671 82
676 129 82
678 128 82
680 677 82
682 672 668
684 678 669
686 685 683
688 191 82
690 190 82
692 689 82
694 131 82
696 130 82
698 695 82
700 690 668
702 696 669
704 703 701
706 193 82
708 192 82
710 707 82
712 133 82
714 132 82
716 713 82
718 708 668
720 714 669
722 721 719
724 280 6
726 724 278
728 726 12
730 727 12
732 731 729
734 276 37
736 5 3
738 736 7
740 738 734
742 740 8
744 741 8
746 745 743
748 136 82
750 749 8
752 139 82
754 138 82
756 753 82
758 754 751
760 141 82
762 140 82
764 761 82
766 764 755
768 167 82
770 166 82
772 769 82
774 177 82
776 176 82
778 775 82
780 179 82
782 178 82
784 781 82
786 180 82
788 783 778
790 788 787
792 791 772
794 784 777
796 794 787
798 797 771
800 799 793
802 594 291
804 597 288
806 805 803
808 606 303
810 609 300
812 811 809
814 618 315
816 621 312
818 817 815
820 812 806
822 820 818
824 822 800
826 143 82
828 142 82
830 827 82
832 831 630
834 828 633
836 835 833
838 145 82
840 144 82
842 839 82
844 843 642
846 840 645
848 847 845
850 147 82
852 146 82
854 851 82
856 855 654
858 852 657
860 859 857
862 848 836
864 862 860
866 864 824
868 135 82
870 869 82
872 870 866
874 754 35
876 875 35
878 873 754
880 877 872
882 881 879
884 764 756
886 884 68
888 887 754
890 883 766
892 888 767
894 893 891
896 758 740
898 895 741
900 899 897
902 762 751
904 903 751
906 762 35
908 907 35
910 873 762
912 909 872
914 913 911
916 887 762
918 915 766
920 916 767
922 921 919
924 905 740
926 923 741
928 927 925
930 288 284
932 828 285
934 933 931
936 300 284
938 840 285
940 939 937
942 312 284
944 852 285
946 945 943
948 149 82
950 148 82
952 949 82
954 151 82
956 150 82
958 955 82
960 153 82
962 152 82
964 961 82
966 155 82
968 154 82
970 967 82
972 957 951
974 972 963
976 974 969
978 74 72
980 978 77
982 980 79
984 982 976
986 957 952
988 986 963
990 988 969
992 510 80
994 992 990
996 994 456
998 958 951
1000 998 963
1002 1000 969
1004 524 38
1006 1004 1002
1008 1006 456
1010 958 952
1012 1010 963
1014 1012 969
1016 1014 324
1018 1016 49
1020 1016 48
1022 972 964
1024 1022 969
1026 1024 886
1028 672 421
1030 675 418
1032 1031 1029
1034 690 433
1036 693 430
1038 1037 1035
1040 708 445
1042 711 442
1044 1043 1041
1046 1038 1032
1048 1046 1044
1050 183 82
1052 182 82
1054 1051 82
1056 1055 678
1058 1052 681
1060 1059 1057
1062 185 82
1064 184 82
1066 1063 82
1068 1067 696
1070 1064 699
1072 1071 1069
1074 187 82
1076 186 82
1078 1075 82
1080 1079 714
1082 1076 717
1084 1083 1081
1086 1072 1060
1088 1086 1084
1090 1088 1048
1092 385 288
1094 382 291
1096 1095 1093
1098 397 300
1100 394 303
1102 1101 1099
1104 409 312
1106 406 315
1108 1107 1105
1110 1102 1096
1112 1110 1108
1114 1112 1090
1116 161 82
1118 160 82
1120 1117 82
1122 1121 828
1124 1118 831
1126 1125 1123
1128 163 82
1130 162 82
1132 1129 82
1134 1133 840
1136 1130 843
1138 1137 1135
1140 165 82
1142 164 82
1144 1141 82
1146 1145 852
1148 1142 855
1150 1149 1147
1152 1138 1126
1154 1152 1150
1156 1154 1114
1158 157 82
1160 156 82
1162 1159 82
1164 1160 331
1166 1163 328
1168 1167 1165
1170 159 82
1172 158 82
1174 1171 82
1176 1172 343
1178 1175 340
1180 1179 1177
1182 1180 1168
1184 1182 1156
1186 1184 771
1188 1187 1026
1190 1188 456
1192 1026 40
1194 1192 456
1196 1026 41
1198 1196 456
1200 986 964
1202 1200 969
1204 1202 886
1206 1184 772
1208 1207 1204
1210 1208 456
1212 1204 40
1214 1212 456
1216 1204 41
1218 1216 456
1220 998 964
1222 1220 969
1224 452 76
1226 1224 79
1228 1226 1222
1230 1010 964
1232 1230 969
1234 262 76
1236 1234 79
1238 1236 1232
1240 974 970
1242 978 76
1244 1242 79
1246 1244 1240
1248 988 970
1250 274 78
1252 1250 1248
1254 1253 950
1256 1255 1253
1258 1257 1247
1260 1259 1247
1262 1261 1239
1264 1263 1239
1266 1265 1229
1268 1267 1229
1270 1269 1219
1272 1271 1219
1274 1273 1215
1276 1274 1211
1278 1276 1199
1280 1279 1199
1282 1281 1195
1284 1282 1191
1286 1284 1021
1288 1287 1021
1290 1289 1019
1292 1290 1009
1294 1293 1009
1296 1295 997
1298 1296 985
1300 1299 985
1302 1253 956
1304 1303 1253
1306 1305 1247
1308 1307 1247
1310 1309 1239
1312 1311 1239
1314 1313 1229
1316 1315 1229
1318 1317 1219
1320 1318 1215
1322 1320 1211
1324 1323 1211
1326 1325 1199
1328 1327 1199
1330 1329 1195
1332 1331 1195
1334 1333 1191
1336 1335 1191
1338 1337 1021
1340 1338 1019
1342 1340 1009
1344 1343 1009
1346 1345 997
1348 1347 997
1350 1349 985
1352 1253 962
1354 1352 1247
1356 1354 1239
1358 1356 1229
1360 1358 1219
1362 1360 1215
1364 1362 1211
1366 1364 1199
1368 1367 1199
1370 1369 1195
1372 1371 1195
1374 1373 1191
1376 1374 1021
1378 1377 1021
1380 1379 1019
1382 1381 1019
1384 1383 1009
1386 1384 997
1388 1386 985
1390 1253 968
1392 1390 1247
1394 1392 1239
1396 1394 1229
1398 1396 1219
1400 1399 1219
1402 1401 1215
1404 1403 1215
1406 1405 1211
1408 1407 1211
1410 1409 1199
1412 1410 1195
1414 1412 1191
1416 1415 1191
1418 1417 1021
1420 1418 1019
1422 1420 1009
1424 1422 997
1426 1424 985
1428 590 24
1430 1160 591
1432 1431 1429
1434 590 26
1436 1172 591
1438 1437 1435
1440 324 42
1442 1118 325
1444 1443 1441
1446 324 44
1448 1130 325
1450 1449 1447
1452 324 46
1454 1142 325
1456 1455 1453
1458 740 10
1460 741 10
1462 1461 1459
1464 1015 217
1466 214 211
1468 215 208
1470 1469 1467
1472 1471 1015
1474 214 208
1476 1474 205
1478 1475 202
1480 1479 1477
1482 1481 1015
1484 1474 202
1486 1484 199
1488 1485 196
1490 1489 1487
1492 1491 1015
1494 664 6
1496 1494 278
1498 1496 8
1500 1497 776
1502 1501 1499
1504 1496 10
1506 1497 782
1508 1507 1505
1510 1496 12
1512 1497 786
1514 1513 1511
1516 324 18
1518 1052 325
1520 1519 1517
1522 324 20
1524 1064 325
1526 1525 1523
1528 324 22
1530 1076 325
1532 1531 1529
1534 668 8
1536 672 669
1538 1537 1535
1540 668 10
1542 690 669
1544 1543 1541
1546 668 12
1548 708 669
1550 1549 1547
i0 controllable_addr_abs<0>
i1 controllable_addr_abs<1>
i2 controllable_addr_abs<2>
i3 controllable_write8_val_abs<0>
i4 controllable_write8_val_abs<1>
i5 controllable_write8_val_abs<2>
i6 i_reqBuf_abs<0>
i7 i_reqBuf_abs<1>
i8 i_reqLBA1_abs<0>
i9 i_reqLBA1_abs<1>
i10 i_reqLBA1_abs<2>
i11 controllable_fillPrdAddr_abs<0>
i12 controllable_fillPrdAddr_abs<1>
i13 i_reqLBA0_abs<0>
i14 i_reqLBA0_abs<1>
i15 i_reqLBA0_abs<2>
i16 controllable_dmaStartClass_conc
i17 controllable_bank_abs
i18 controllable_featXFRClass_conc
i19 i_transSuccess_conc
i20 i_reqSect1_abs<0>
i21 i_reqSect1_abs<1>
i22 i_reqSect1_abs<2>
i23 i_osReqType_conc
i24 i_reqSect0_abs<0>
i25 i_reqSect0_abs<1>
i26 i_reqSect0_abs<2>
i27 controllable_fillPrdNSect_abs<0>
i28 controllable_fillPrdNSect_abs<1>
i29 controllable_fillPrdNSect_abs<2>
i30 controllable_fillPrdNSect_abs<3>
i31 controllable_fillPrdNSect_abs<4>
i32 controllable_fillPrdNSect_abs<5>
i33 controllable_busMasterClass_conc
i34 controllable_featWCClass_conc
i35 controllable_tag_conc<0>
i36 controllable_tag_conc<1>
i37 controllable_tag_conc<2>
i38 controllable_tag_conc<3>
i39 controllable_featNWCClass_conc
l0 n83
l1 state_regSectors0_abs<0>_out
l2 state_regSectors0_abs<1>_out
l3 state_regSectors0_abs<2>_out
l4 state_os_buf_abs<0>_out
l5 state_os_buf_abs<1>_out
l6 state_regFeature0_abs<0>_out
l7 state_regFeature0_abs<1>_out
l8 state_os_sect0_abs<0>_out
l9 state_os_sect0_abs<1>_out
l10 state_os_sect0_abs<2>_out
l11 state_os_lba0_abs<0>_out
l12 state_os_lba0_abs<1>_out
l13 state_os_lba0_abs<2>_out
l14 state_setFeatState_conc<0>_out
l15 state_setFeatState_conc<1>_out
l16 state_setFeatState_conc<2>_out
l17 state_bufSectors_abs<0>_out
l18 state_bufSectors_abs<1>_out
l19 state_bufSectors_abs<2>_out
l20 state_bufSectors_abs<3>_out
l21 state_bufSectors_abs<4>_out
l22 state_bufSectors_abs<5>_out
l23 state_regLBALow1_abs<0>_out
l24 state_regLBALow1_abs<1>_out
l25 state_regLBALow1_abs<2>_out
l26 state_regDev_LBA_abs_out
l27 state_regBMCommand_Start_abs_out
l28 state_stDMACmd_conc<0>_out
l29 state_stDMACmd_conc<1>_out
l30 state_regSectors1_abs<0>_out
l31 state_regSectors1_abs<1>_out
l32 state_regSectors1_abs<2>_out
l33 state_osState_conc<0>_out
l34 state_osState_conc<1>_out
l35 state_osState_conc<2>_out
l36 state_osState_conc<3>_out
l37 state_bufAddr_abs<0>_out
l38 state_bufAddr_abs<1>_out
l39 state_os_sect1_abs<0>_out
l40 state_os_sect1_abs<1>_out
l41 state_os_sect1_abs<2>_out
l42 state_regBMCommand_RW_abs_out
l43 fair_cnt<0>_out
l44 fair_cnt<1>_out
l45 fair_cnt<2>_out
l46 fair_cnt<3>_out
l47 state_regCommand_abs<0>_out
l48 state_regCommand_abs<1>_out
l49 state_regCommand_abs<2>_out
l50 state_os_lba1_abs<0>_out
l51 state_os_lba1_abs<1>_out
l52 state_os_lba1_abs<2>_out
l53 state_regLBALow0_abs<0>_out
l54 state_regLBALow0_abs<1>_out
l55 state_regLBALow0_abs<2>_out
o0 o_err
c
ide_hard_drive_controller_2
This file was written by ABC on Tue Mar 11 20:24:20 2014
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv driver_d10.v   ---gives--> driver_d10.mv
> abc -c "read_blif_mv driver_d10.mv; write_aiger -s driver_d10n.aig"   ---gives--> driver_d10n.aig
> aigtoaig driver_d10n.aig driver_d10n.aag   ---gives--> driver_d10n.aag (this file)
Content of driver_d10.v:
// IDE hard drive controller specification and operating system interface
// specification for device driver synthesis.
// This file describes a GR(1) game played by a device driver for an IDE hard
// disk against its environment consisting of the hard disk and operating
// system.

`define WIDTH1 2
`define WIDTH2 1

`define CMD_READ_DMA_EXT  1
`define CMD_WRITE_DMA_EXT 2
`define FEAT_WC           1
`define FEAT_NWC          2
`define FEAT_XFR_MODE     3
`define XM_ULTRA_DMA      7

`define RCMD              1
`define REG_FEATURE0      1
`define REG_SECTORS       2
`define REG_LBA_LOW       3
`define REG_LBA_MID       4
`define REG_LBA_HIGH      5
`define REG_DEV           6
`define REG_ERRCMD        7

`define RDMA              0
`define REG_BM_COMMAND    0

//typedef enum {read=0, write=1} i_osReqType_enum;
`define read              0
`define write             1

//typedef enum {write8, write32, fillPrd, reset, os_req, ack_read_succ, ack_read_fail, ack_write_succ, ack_write_fail, class_event} controllable_tag_enum;
`define write8            0
`define write32           1
`define fillPrd           2
`define reset             3
`define os_req            4
`define ack_read_succ     5
`define ack_read_fail     6
`define ack_write_succ    7
`define ack_write_fail    8
`define class_event       9

//typedef enum {wait_bm_ready=0, dma_read=1, bm_read_prd=2, bm_ready=3} state_stDMACmd_enum;
`define wait_bm_ready     0
`define dma_read          1
`define bm_read_prd       2
`define bm_ready          3


//typedef enum {setFeatIdle=0, setFeatWC=1, setFeatNWC=2, setFeatXFR0=3, setFeatXFR1=4} state_setFeatState_enum;
`define setFeatIdle       0
`define setFeatWC         1
`define setFeatNWC        2
`define setFeatXFR0       3
`define setFeatXFR1       4

//typedef enum {os_init=0, os_reset=1, os_write_cache=2, os_idle=3, os_read_pending=4, os_write_pending=5, os_read_ack_succ=6, os_read_ack_fail=7, os_write_ack_succ=8, os_write_ack_fail=9, os_error=10} state_osState_enum;
`define os_init           0
`define os_reset          1
`define os_write_cache    2
`define os_idle           3
`define os_read_pending   4
`define os_write_pending  5
`define os_read_ack_succ  6
`define os_read_ack_fail  7
`define os_write_ack_succ 8
`define os_write_ack_fail 9
`define os_error          10

module ide_hard_drive_controller_2(
        o_err,
        i_clk,
        i_osReqType_conc,
        i_reqLBA0_abs,
        i_reqLBA1_abs,
        i_reqSect0_abs,
        i_reqSect1_abs,
        i_reqBuf_abs,
        i_transSuccess_conc,
        controllable_tag_conc,
        controllable_bank_abs,
        controllable_addr_abs,
        controllable_write8_val_abs,
        controllable_fillPrdAddr_abs,
        controllable_fillPrdNSect_abs,
        controllable_featWCClass_conc,
        controllable_featNWCClass_conc,
        controllable_featXFRClass_conc,
        controllable_busMasterClass_conc,
        controllable_dmaStartClass_conc );

input i_clk;
input i_osReqType_conc ;
input [`WIDTH1:0] i_reqLBA0_abs ;
input [`WIDTH1:0] i_reqLBA1_abs ;
input [`WIDTH1:0] i_reqSect0_abs ;
input [`WIDTH1:0] i_reqSect1_abs ;
input [`WIDTH2:0] i_reqBuf_abs ;
input i_transSuccess_conc ;
input [3:0] controllable_tag_conc ;
input controllable_bank_abs ;
input [2:0] controllable_addr_abs ;
input [`WIDTH1:0] controllable_write8_val_abs ;
input [`WIDTH2:0] controllable_fillPrdAddr_abs ;
input [5:0] controllable_fillPrdNSect_abs ;
input controllable_featWCClass_conc ;
input controllable_featNWCClass_conc ;
input controllable_featXFRClass_conc ;
input controllable_busMasterClass_conc ;
input controllable_dmaStartClass_conc ;
output o_err;

reg [1:0] state_stDMACmd_conc ;
reg [2:0] state_setFeatState_conc ;
reg [1:0] state_regFeature0_abs ;
reg [`WIDTH1:0] state_regSectors0_abs ;
reg [`WIDTH1:0] state_regSectors1_abs ;
reg [`WIDTH1:0] state_regLBALow0_abs ;
reg [`WIDTH1:0] state_regLBALow1_abs ;
reg state_regDev_LBA_abs ;
reg [`WIDTH1:0] state_regCommand_abs ;
reg state_regBMCommand_Start_abs ;
reg state_regBMCommand_RW_abs ;
reg [`WIDTH2:0] state_bufAddr_abs ;
reg [5:0] state_bufSectors_abs ;

reg [3:0] state_osState_conc ;
reg [`WIDTH1:0] state_os_lba0_abs ;
reg [`WIDTH1:0] state_os_lba1_abs ;
reg [`WIDTH1:0] state_os_sect0_abs ;
reg [`WIDTH1:0] state_os_sect1_abs ;
reg [`WIDTH2:0] state_os_buf_abs ;

reg [3:0] fair_cnt;

wire transferMode3;
wire nwc;
wire bm_event;
wire transferCorrect;
wire transferCorrect_0;
wire transferCorrect_1;
wire buechi_satisfied;
wire [1:0] next_state_stDMACmd_conc ;
wire [2:0] next_state_setFeatState_conc ;
wire [1:0] next_state_regFeature0_abs ;
wire [`WIDTH1:0] next_state_regSectors0_abs ;
wire [`WIDTH1:0] next_state_regSectors1_abs ;
wire [`WIDTH1:0] next_state_regLBALow0_abs ;
wire [`WIDTH1:0] next_state_regLBALow1_abs ;
wire next_state_regDev_LBA_abs ;
wire [`WIDTH1:0] next_state_regCommand_abs ;
wire next_state_regBMCommand_Start_abs ;
wire next_state_regBMCommand_RW_abs ;
wire [`WIDTH2:0] next_state_bufAddr_abs ;
wire [5:0] next_state_bufSectors_abs ;

wire [3:0] next_state_osState_conc ;
wire [`WIDTH1:0] next_state_os_lba0_abs ;
wire [`WIDTH1:0] next_state_os_lba1_abs ;
wire [`WIDTH1:0] next_state_os_sect0_abs ;
wire [`WIDTH1:0] next_state_os_sect1_abs ;
wire [`WIDTH2:0] next_state_os_buf_abs ;

// some abbreviations:
assign transferMode3 = (state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1);
assign nwc =           (state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1);
assign bm_event = (state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1);
assign transferCorrect = (state_os_lba0_abs==state_regLBALow0_abs    &&
                          state_os_lba1_abs==state_regLBALow1_abs    &&
                          state_os_sect0_abs==state_regSectors0_abs  &&
                          state_os_sect1_abs==state_regSectors1_abs  &&
                          state_os_buf_abs==state_bufAddr_abs);
assign transferCorrect_0 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==0);
assign transferCorrect_1 = (transferCorrect      &&
                            state_regBMCommand_RW_abs==1);


// state updates:
  //Device state updates:
assign next_state_regFeature0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_FEATURE0) ? controllable_write8_val_abs  : state_regFeature0_abs;
assign next_state_regSectors0_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? controllable_write8_val_abs  : state_regSectors0_abs;
assign next_state_regSectors1_abs  = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_SECTORS)  ? state_regSectors0_abs : state_regSectors1_abs;
assign next_state_regLBALow0_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? controllable_write8_val_abs  : state_regLBALow0_abs;
assign next_state_regLBALow1_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_LBA_LOW)  ? state_regLBALow0_abs  : state_regLBALow1_abs;
assign next_state_regDev_LBA_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_DEV)      ? controllable_write8_val_abs[2:2] : state_regDev_LBA_abs;
assign next_state_regCommand_abs   = (controllable_tag_conc==`write8 && controllable_bank_abs==`RCMD && controllable_addr_abs==`REG_ERRCMD)   ? controllable_write8_val_abs  : state_regCommand_abs;
assign next_state_regBMCommand_Start_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[0:0] : state_regBMCommand_Start_abs;
assign next_state_regBMCommand_RW_abs = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ? controllable_write8_val_abs[1:1] : state_regBMCommand_RW_abs;
assign next_state_bufAddr_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdAddr_abs : state_bufAddr_abs;
assign next_state_bufSectors_abs = (controllable_tag_conc==`fillPrd) ? controllable_fillPrdNSect_abs : state_bufSectors_abs;

assign next_state_setFeatState_conc = (controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_WC) ? `setFeatWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_NWC) ? `setFeatNWC :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE && state_regSectors0_abs==`XM_ULTRA_DMA) ? `setFeatXFR0 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatIdle && state_regFeature0_abs==`FEAT_XFR_MODE) ? `setFeatXFR1 :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatWC   && controllable_featWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatNWC  && controllable_featNWCClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR0 && controllable_featXFRClass_conc==1) ? `setFeatIdle :
                 ((controllable_tag_conc==`class_event && state_setFeatState_conc==`setFeatXFR1 && controllable_featXFRClass_conc==1) ? `setFeatIdle : state_setFeatState_conc)))))));

assign next_state_stDMACmd_conc = (controllable_tag_conc==`write8 && controllable_bank_abs==`RDMA && controllable_addr_abs==`REG_BM_COMMAND) ?
               (
                 (state_regBMCommand_Start_abs==0 && controllable_write8_val_abs[0:0]==1) ? `bm_read_prd : state_stDMACmd_conc
               ) :
               (
                 (state_stDMACmd_conc==`bm_read_prd) ?
                 (((state_regBMCommand_RW_abs == 1 && state_regCommand_abs != `CMD_READ_DMA_EXT) || (state_regBMCommand_RW_abs == 0 && state_regCommand_abs != `CMD_WRITE_DMA_EXT) || (state_regSectors0_abs != state_bufSectors_abs[`WIDTH1:0]) || (state_regSectors1_abs != state_bufSectors_abs[5:3]) || state_regDev_LBA_abs != 1) ? state_stDMACmd_conc : ((controllable_dmaStartClass_conc==1) ? `bm_ready : state_stDMACmd_conc)) :
                 ((state_stDMACmd_conc==`bm_ready && controllable_busMasterClass_conc==1) ? `wait_bm_ready : state_stDMACmd_conc)
               );

//OS state updates
assign next_state_os_lba0_abs = (controllable_tag_conc==`os_req) ? i_reqLBA0_abs : state_os_lba0_abs;
assign next_state_os_lba1_abs = (controllable_tag_conc==`os_req) ? i_reqLBA1_abs : state_os_lba1_abs;
assign next_state_os_sect0_abs = (controllable_tag_conc==`os_req) ? i_reqSect0_abs : state_os_sect0_abs;
assign next_state_os_sect1_abs = (controllable_tag_conc==`os_req) ? i_reqSect1_abs : state_os_sect1_abs;
assign next_state_os_buf_abs = (controllable_tag_conc==`os_req) ? i_reqBuf_abs : state_os_buf_abs;

assign next_state_osState_conc = (state_osState_conc==`os_init && controllable_tag_conc==`reset) ? `os_reset :
      ((state_osState_conc==`os_reset && nwc && controllable_tag_conc==`class_event) ? `os_write_cache :
      ((state_osState_conc==`os_write_cache && transferMode3 && controllable_tag_conc==`class_event) ? `os_idle :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`read) ? `os_read_pending :
      ((state_osState_conc==`os_idle && controllable_tag_conc==`os_req && i_osReqType_conc==`write) ? `os_write_pending :
      ((state_osState_conc==`os_read_pending && bm_event && !transferCorrect_0 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_read_ack_succ :
      ((state_osState_conc==`os_read_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_read_ack_fail :
      ((state_osState_conc==`os_write_pending && bm_event && !transferCorrect_1 && controllable_tag_conc==`class_event) ? `os_error :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==1 && controllable_tag_conc==`class_event) ? `os_write_ack_succ :
      ((state_osState_conc==`os_write_pending && bm_event && i_transSuccess_conc==0 && controllable_tag_conc==`class_event) ? `os_write_ack_fail :
      ((state_osState_conc==`os_read_ack_succ && controllable_tag_conc==`ack_read_succ) ? `os_idle :
      ((state_osState_conc==`os_read_ack_fail && controllable_tag_conc==`ack_read_fail) ? `os_idle :
      ((state_osState_conc==`os_write_ack_succ && controllable_tag_conc==`ack_write_succ) ? `os_idle :
      ((state_osState_conc==`os_write_ack_fail && controllable_tag_conc==`ack_write_fail) ? `os_idle : state_osState_conc))))))))))))));


// buechi-to-safety construction:                            
assign buechi_satisfied = (state_osState_conc == `os_idle);                          
                            
assign o_err = (fair_cnt >= 10) || controllable_tag_conc >= 10;

initial
 begin
  state_stDMACmd_conc = `wait_bm_ready;
  state_setFeatState_conc = `setFeatIdle;
  state_regFeature0_abs = 0;
  state_regSectors0_abs = 0;
  state_regSectors1_abs = 0;
  state_regLBALow0_abs = 0;
  state_regLBALow1_abs = 0;
  state_regDev_LBA_abs = 0;
  state_regCommand_abs = 0;
  state_regBMCommand_Start_abs = 0;
  state_regBMCommand_RW_abs = 0;
  state_bufAddr_abs = 0;
  state_bufSectors_abs = 0;
  state_osState_conc = `os_init;
  state_os_lba0_abs = 0;
  state_os_lba1_abs = 0;
  state_os_sect0_abs = 0;
  state_os_sect1_abs = 0;
  state_os_buf_abs = 0;
  fair_cnt = 0;
 end

always @(posedge i_clk)
 begin

  if(buechi_satisfied)
   begin
    fair_cnt = 0;
   end
  else
   begin
    fair_cnt = fair_cnt + 1;
   end
 
  //Device state updates:
  state_regFeature0_abs          = next_state_regFeature0_abs ;
  state_regSectors0_abs          = next_state_regSectors0_abs ;
  state_regSectors1_abs          = next_state_regSectors1_abs ;
  state_regLBALow0_abs           = next_state_regLBALow0_abs ;
  state_regLBALow1_abs           = next_state_regLBALow1_abs ;
  state_regDev_LBA_abs           = next_state_regDev_LBA_abs ;
  state_regCommand_abs           = next_state_regCommand_abs ;
  state_regBMCommand_Start_abs   = next_state_regBMCommand_Start_abs ;
  state_regBMCommand_RW_abs      = next_state_regBMCommand_RW_abs ;
  state_bufAddr_abs              = next_state_bufAddr_abs ;
  state_bufSectors_abs           = next_state_bufSectors_abs ;
  state_setFeatState_conc        = next_state_setFeatState_conc ;
  state_stDMACmd_conc            = next_state_stDMACmd_conc ;
  state_os_lba0_abs              = next_state_os_lba0_abs ;
  state_os_lba1_abs              = next_state_os_lba1_abs ;
  state_os_sect0_abs             = next_state_os_sect0_abs ;
  state_os_sect1_abs             = next_state_os_sect1_abs ;
  state_os_buf_abs               = next_state_os_buf_abs ;
  state_osState_conc             = next_state_osState_conc ;
 end
 
 
endmodule
-------------------------------
#!SYNTCOMP
SOLVED_BY : 3/3 [2015-pre-classification], 10/11 [SYNTCOMP2016-RealSeq], 6/6 [SYNTCOMP2016-RealPar]
SOLVED_IN : 37.3318 [2015-pre-classification], 0.076 [SYNTCOMP2016-RealSeq], 0.248983 [SYNTCOMP2016-RealPar]
REF_SIZE : 0
STATUS : realizable
#.
